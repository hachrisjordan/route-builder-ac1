{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguyen77\\\\docker-neo4j\\\\route-builder-ac1\\\\src\\\\components\\\\FlightSearch\\\\FlightAvailabilityCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Typography, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { airports } from './data/airports';\nimport FlightDetailsModal from './FlightDetailsModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst FlightAvailabilityCalendar = ({\n  flightData,\n  currentRoute,\n  onDateRangeSelect,\n  selectedRange,\n  onSearch,\n  selectedFlights,\n  pricingData\n}) => {\n  _s();\n  // State initialization\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  // Create a local state for selections that won't be reset by props changes\n  const [localSelectionStart, setLocalSelectionStart] = useState(null);\n  const [localSelectionEnd, setLocalSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  // Hard-code showCalendar to true to prevent infinite loops\n  const showCalendar = true;\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Create derived values for selection that can be used in the component\n  // This ensures local state takes precedence but will fall back to props if local state is null\n  const selectionStart = localSelectionStart;\n  const selectionEnd = localSelectionEnd;\n\n  // Track selection changes with a ref to prevent race conditions\n  const selectionRef = useRef({\n    start: null,\n    end: null\n  });\n\n  // Set up display control functions\n  const hideCalendarFn = () => {\n    // We want to reset selections but not actually hide the calendar\n    setLocalSelectionStart(null);\n    setLocalSelectionEnd(null);\n    setError('');\n\n    // Reset the ref so the calendar can be shown again if needed\n    if (calendarShownRef) {\n      calendarShownRef.current = false;\n    }\n\n    // Also reset the selection ref\n    selectionRef.current = {\n      start: null,\n      end: null\n    };\n  };\n  const clearStopoverInfo = () => {\n    // Clear stopover information\n    setSelectedConnection(null);\n    setStopoverDays(null);\n\n    // Also clear date selections\n    setLocalSelectionStart(null);\n    setLocalSelectionEnd(null);\n\n    // Reset the selection ref\n    if (selectionRef && selectionRef.current) {\n      selectionRef.current = {\n        start: null,\n        end: null\n      };\n    }\n\n    // Clear error message\n    setError('');\n    console.log(\"All selections cleared\");\n  };\n\n  // Use a ref to prevent infinite loops from repeated function calls\n  const calendarShownRef = useRef(false);\n\n  // DISABLE ALL USEEFFECTS TO STOP LOOPS\n  /*\r\n  useEffect(() => {\r\n    window.showCalendar = () => {\r\n      console.log(\"Window showCalendar called\");\r\n      if (!calendarShownRef.current) {\r\n        calendarShownRef.current = true;\r\n        setShowCalendar(true);\r\n        console.log(\"Calendar visibility set to true\");\r\n      }\r\n    };\r\n    \r\n    window.hideCalendar = hideCalendarFn;\r\n    window.clearStopoverInfo = clearStopoverInfo;\r\n    \r\n    setShowCalendar(true);\r\n    \r\n    return () => {\r\n      delete window.showCalendar;\r\n      delete window.hideCalendar;\r\n      delete window.clearStopoverInfo;\r\n    };\r\n  }, []);\r\n  */\n\n  // Set up the window functions directly without useEffect\n  window.showCalendar = () => {\n    const calendarContainer = document.querySelector(\".calendar-container\");\n    if (calendarContainer) {\n      calendarContainer.style.display = \"block\";\n    }\n    console.log(\"Calendar shown via DOM manipulation\");\n  };\n  window.hideCalendar = () => {\n    const calendarContainer = document.querySelector(\".calendar-container\");\n    if (calendarContainer) {\n      calendarContainer.style.display = \"none\";\n    }\n    console.log(\"Calendar hidden via DOM manipulation\");\n  };\n\n  // This one needs to actually work to clear selections when the modal closes\n  window.clearStopoverInfo = clearStopoverInfo;\n\n  // REMOVING THIS ENTIRE EFFECT TO STOP INFINITE LOOP\n  // We'll manually initialize selections when needed\n\n  // Calendar navigation functions\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n\n  // Calendar utility functions\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n\n  // Date selection handling with stable state\n  const handleDateClick = dateString => {\n    console.log(\"Date clicked:\", dateString);\n    console.log(\"Current selection:\", {\n      start: selectionRef.current.start,\n      end: selectionRef.current.end\n    });\n    if (!selectionRef.current.start) {\n      console.log(\"Setting selection start\");\n      // Update both the ref and state\n      selectionRef.current.start = dateString;\n      selectionRef.current.end = null;\n      setLocalSelectionStart(dateString);\n      setLocalSelectionEnd(null);\n      setError('');\n    } else if (!selectionRef.current.end) {\n      console.log(\"Setting selection end\");\n      const start = dayjs(selectionRef.current.start);\n      const end = dayjs(dateString);\n      if (end.isBefore(start)) {\n        setError('End date cannot be before start date');\n        return;\n      }\n      if (end.diff(start, 'days') > 7) {\n        setError('Date range cannot exceed 7 days');\n        return;\n      }\n\n      // Update both the ref and state\n      selectionRef.current.end = dateString;\n      setLocalSelectionEnd(dateString);\n      if (onDateRangeSelect) {\n        onDateRangeSelect([start, end]);\n      }\n    } else {\n      console.log(\"Resetting selection\");\n      // Update both the ref and state\n      selectionRef.current.start = dateString;\n      selectionRef.current.end = null;\n      setLocalSelectionStart(dateString);\n      setLocalSelectionEnd(null);\n      setError('');\n    }\n  };\n  const isDateInRange = dateString => {\n    const ref = selectionRef.current;\n    if (!ref.start || !ref.end) {\n      // If only start date is selected, highlight just that day\n      if (ref.start && dateString === ref.start) {\n        return true;\n      }\n      return false;\n    }\n    const date = dayjs(dateString);\n    const start = dayjs(ref.start);\n    const end = dayjs(ref.end);\n\n    // Include the start and end dates themselves\n    return (date.isAfter(start.subtract(1, 'day')) || date.isSame(start, 'day')) && (date.isBefore(end.add(1, 'day')) || date.isSame(end, 'day'));\n  };\n\n  // Search function using ref for stable state\n  const handleSearch = stopoverInfo => {\n    const ref = selectionRef.current;\n    if (!ref.start || !ref.end) {\n      setError('Please select a date range');\n      return;\n    }\n    if (selectedConnection && !stopoverDays) {\n      setError('Please specify stopover days');\n      return;\n    }\n    setError('');\n\n    // Create stopover info object if a connection is selected\n    const stopoverInfoObj = selectedConnection ? {\n      airport: selectedConnection,\n      days: stopoverDays\n    } : null;\n    console.log('Search with date range:', {\n      start: ref.start,\n      end: ref.end,\n      stopover: stopoverInfoObj\n    });\n\n    // Pass the selected date range to the parent component\n    if (onDateRangeSelect) {\n      onDateRangeSelect([ref.start, ref.end]);\n    }\n\n    // Call the search function with stopover info\n    if (onSearch) {\n      onSearch(stopoverInfoObj, true, true);\n    }\n  };\n\n  // Calendar segments rendering logic\n  const sortSegments = segments => {\n    const validSegments = segments.map(segment => ({\n      ...segment,\n      ...isValidSegment(segment)\n    })).filter(segment => segment.isValid);\n    return getRequiredSegments(validSegments);\n  };\n  const isValidSegment = segment => {\n    const [from, to] = segment.route.split('-');\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return {\n          isValid: true,\n          index: i\n        };\n      }\n    }\n    return {\n      isValid: false,\n      index: -1\n    };\n  };\n  const getRequiredSegments = existingSegments => {\n    const segmentMap = new Map(existingSegments.map(segment => [segment.route, segment]));\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: {\n          Y: false,\n          J: false,\n          F: false\n        },\n        index: i\n      };\n      allSegments.push(segment);\n    }\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n  const hasAnyAvailability = segments => {\n    return segments.some(segment => segment.classes.Y || segment.classes.J || segment.classes.F);\n  };\n\n  // Get unique connection points from currentRoute with full airport names\n  const connectionOptions = currentRoute.slice(1, -1).map(iata => {\n    const airport = airports.find(a => a.IATA === iata);\n    return {\n      label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\n      value: iata\n    };\n  });\n\n  // Handle modal close\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  // Render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y':\n          return '#E8E1F2';\n        case 'J':\n          return '#F3CD87';\n        case 'F':\n          return '#D88A3F';\n        default:\n          return 'transparent';\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2px'\n      },\n      children: Object.entries(classes).map(([classCode, available]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: getBackgroundColor(classCode, available),\n          color: available ? '#684634' : '#999',\n          padding: '0px 4px',\n          borderRadius: '4px',\n          fontSize: '13px',\n          fontFamily: 'Menlo',\n          width: '20px',\n          textAlign: 'center'\n        },\n        children: available ? classCode : '-'\n      }, classCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Calendar constants\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-calendar-button\",\n      style: {\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          // Show calendar by modifying DOM directly\n          const calendarContainer = document.querySelector(\".calendar-container\");\n          if (calendarContainer) {\n            calendarContainer.style.display = \"block\";\n          }\n          console.log(\"Calendar shown via DOM manipulation\");\n        },\n        children: \"Show Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToPrevMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 4,\n          style: {\n            margin: 0\n          },\n          children: [monthNames[currentMonth], \" \", currentYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToNextMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          border: '1px solid #f0f0f0',\n          backgroundColor: '#f0f0f0',\n          gap: '1px',\n          fontFamily: 'Menlo, monospace'\n        },\n        children: [dayNames.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '8px',\n            textAlign: 'center',\n            fontWeight: '500'\n          },\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: firstDayOfMonth\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            minHeight: '120px',\n            padding: '8px'\n          }\n        }, `empty-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: daysInMonth\n        }).map((_, index) => {\n          const day = index + 1;\n          const dateString = formatDate(currentYear, currentMonth, day);\n          const flights = (flightData === null || flightData === void 0 ? void 0 : flightData[dateString]) || [];\n          const validFlights = flights.length > 0 ? sortSegments(flights) : [];\n          const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\n          const isSelected = isDateInRange(dateString);\n          const isStart = dateString === selectionRef.current.start;\n          const isEnd = dateString === selectionRef.current.end;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: isSelected ? '#e6f4ff' : 'white',\n              minHeight: '120px',\n              padding: '8px',\n              fontFamily: 'Menlo, monospace',\n              cursor: 'pointer',\n              border: isStart || isEnd ? '2px solid #1890ff' : 'none'\n            },\n            onClick: e => {\n              // Prevent event bubbling\n              e.stopPropagation();\n              // Ensure click handler works properly\n              console.log(`Clicking on day ${day} (${dateString})`);\n              handleDateClick(dateString);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '8px',\n                fontSize: '13px'\n              },\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this), showFlights ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px'\n              },\n              children: validFlights.map((segment, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '4px',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '14px',\n                    fontFamily: 'Menlo, monospace'\n                  },\n                  children: segment.route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 27\n                }, this), renderAvailabilityBadges(segment.route, segment.classes)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                color: '#999',\n                fontSize: '12px',\n                marginTop: '32px',\n                fontFamily: 'Menlo, monospace'\n              },\n              children: \"No flights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 21\n            }, this)]\n          }, `day-${day}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#ff4d4f',\n          marginTop: '16px',\n          textAlign: 'center'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '16px',\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stopover at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: 400\n            },\n            value: selectedConnection,\n            onChange: value => {\n              setSelectedConnection(value);\n              if (!value) {\n                setStopoverDays(null);\n              }\n            },\n            options: connectionOptions,\n            allowClear: true,\n            placeholder: \"Select city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), selectedConnection && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n              style: {\n                width: 60\n              },\n              min: 1,\n              max: 14,\n              value: stopoverDays,\n              onChange: value => setStopoverDays(value),\n              placeholder: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto',\n            display: 'flex',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleSearch(null),\n            disabled: !selectionStart || !selectionEnd || selectedConnection && !stopoverDays,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              // Hide calendar by adding CSS class directly to avoid state changes\n              const calendarContainer = document.querySelector(\".calendar-container\");\n              if (calendarContainer) {\n                calendarContainer.style.display = \"none\";\n              }\n              console.log(\"Calendar hidden via DOM manipulation\");\n            },\n            children: \"Hide Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightDetailsModal, {\n      isModalOpen: isModalOpen,\n      onClose: handleModalClose,\n      selectedFlights: selectedFlights,\n      pricingData: pricingData,\n      currentRoute: currentRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px',\n        fontSize: '12px',\n        color: '#888'\n      },\n      children: \"Route Builder \\xA9 Ha Nguyen @ 2025\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightAvailabilityCalendar, \"Z8cFNb42lzHhLOlBvWeRFxdsReE=\");\n_c = FlightAvailabilityCalendar;\nexport default FlightAvailabilityCalendar;\nvar _c;\n$RefreshReg$(_c, \"FlightAvailabilityCalendar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Typography","Select","InputNumber","dayjs","airports","FlightDetailsModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","FlightAvailabilityCalendar","flightData","currentRoute","onDateRangeSelect","selectedRange","onSearch","selectedFlights","pricingData","_s","currentMonth","setCurrentMonth","month","currentYear","setCurrentYear","year","localSelectionStart","setLocalSelectionStart","localSelectionEnd","setLocalSelectionEnd","error","setError","showCalendar","selectedConnection","setSelectedConnection","stopoverDays","setStopoverDays","isModalOpen","setIsModalOpen","selectionStart","selectionEnd","selectionRef","start","end","hideCalendarFn","calendarShownRef","current","clearStopoverInfo","console","log","window","calendarContainer","document","querySelector","style","display","hideCalendar","goToPrevMonth","goToNextMonth","getDaysInMonth","daysInMonth","getFirstDayOfMonth","day","formatDate","format","handleDateClick","dateString","isBefore","diff","isDateInRange","ref","date","isAfter","subtract","isSame","add","handleSearch","stopoverInfo","stopoverInfoObj","airport","days","stopover","sortSegments","segments","validSegments","map","segment","isValidSegment","filter","isValid","getRequiredSegments","from","to","route","split","i","length","index","existingSegments","segmentMap","Map","allSegments","get","classes","Y","J","F","push","sort","a","b","hasAnyAvailability","some","connectionOptions","slice","iata","find","IATA","label","Name","value","handleModalClose","renderAvailabilityBadges","getBackgroundColor","classCode","available","gap","children","Object","entries","backgroundColor","color","padding","borderRadius","fontSize","fontFamily","width","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","firstDayOfMonth","monthNames","dayNames","className","marginBottom","type","onClick","justifyContent","alignItems","level","margin","gridTemplateColumns","border","fontWeight","Array","_","minHeight","flights","validFlights","showFlights","isSelected","isStart","isEnd","cursor","e","stopPropagation","idx","marginTop","onChange","options","allowClear","placeholder","min","max","marginLeft","disabled","onClose","_c","$RefreshReg$"],"sources":["C:/Users/nguyen77/docker-neo4j/route-builder-ac1/src/components/FlightSearch/FlightAvailabilityCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Typography, Select, InputNumber } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport { airports } from './data/airports';\r\nimport FlightDetailsModal from './FlightDetailsModal';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst FlightAvailabilityCalendar = ({ flightData, currentRoute, onDateRangeSelect, selectedRange, onSearch, selectedFlights, pricingData }) => {\r\n  // State initialization\r\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\r\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\r\n  // Create a local state for selections that won't be reset by props changes\r\n  const [localSelectionStart, setLocalSelectionStart] = useState(null);\r\n  const [localSelectionEnd, setLocalSelectionEnd] = useState(null);\r\n  const [error, setError] = useState('');\r\n  // Hard-code showCalendar to true to prevent infinite loops\r\n  const showCalendar = true;\r\n  const [selectedConnection, setSelectedConnection] = useState(null);\r\n  const [stopoverDays, setStopoverDays] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  // Create derived values for selection that can be used in the component\r\n  // This ensures local state takes precedence but will fall back to props if local state is null\r\n  const selectionStart = localSelectionStart;\r\n  const selectionEnd = localSelectionEnd;\r\n  \r\n  // Track selection changes with a ref to prevent race conditions\r\n  const selectionRef = useRef({ start: null, end: null });\r\n  \r\n  // Set up display control functions\r\n  const hideCalendarFn = () => {\r\n    // We want to reset selections but not actually hide the calendar\r\n    setLocalSelectionStart(null);\r\n    setLocalSelectionEnd(null);\r\n    setError('');\r\n    \r\n    // Reset the ref so the calendar can be shown again if needed\r\n    if (calendarShownRef) {\r\n      calendarShownRef.current = false;\r\n    }\r\n    \r\n    // Also reset the selection ref\r\n    selectionRef.current = { start: null, end: null };\r\n  };\r\n  \r\n  const clearStopoverInfo = () => {\r\n    // Clear stopover information\r\n    setSelectedConnection(null);\r\n    setStopoverDays(null);\r\n    \r\n    // Also clear date selections\r\n    setLocalSelectionStart(null);\r\n    setLocalSelectionEnd(null);\r\n    \r\n    // Reset the selection ref\r\n    if (selectionRef && selectionRef.current) {\r\n      selectionRef.current = { start: null, end: null };\r\n    }\r\n    \r\n    // Clear error message\r\n    setError('');\r\n    \r\n    console.log(\"All selections cleared\");\r\n  };\r\n\r\n  // Use a ref to prevent infinite loops from repeated function calls\r\n  const calendarShownRef = useRef(false);\r\n  \r\n  // DISABLE ALL USEEFFECTS TO STOP LOOPS\r\n  /*\r\n  useEffect(() => {\r\n    window.showCalendar = () => {\r\n      console.log(\"Window showCalendar called\");\r\n      if (!calendarShownRef.current) {\r\n        calendarShownRef.current = true;\r\n        setShowCalendar(true);\r\n        console.log(\"Calendar visibility set to true\");\r\n      }\r\n    };\r\n    \r\n    window.hideCalendar = hideCalendarFn;\r\n    window.clearStopoverInfo = clearStopoverInfo;\r\n    \r\n    setShowCalendar(true);\r\n    \r\n    return () => {\r\n      delete window.showCalendar;\r\n      delete window.hideCalendar;\r\n      delete window.clearStopoverInfo;\r\n    };\r\n  }, []);\r\n  */\r\n  \r\n  // Set up the window functions directly without useEffect\r\n  window.showCalendar = () => {\r\n    const calendarContainer = document.querySelector(\".calendar-container\");\r\n    if (calendarContainer) {\r\n      calendarContainer.style.display = \"block\";\r\n    }\r\n    console.log(\"Calendar shown via DOM manipulation\");\r\n  };\r\n  \r\n  window.hideCalendar = () => {\r\n    const calendarContainer = document.querySelector(\".calendar-container\");\r\n    if (calendarContainer) {\r\n      calendarContainer.style.display = \"none\";\r\n    }\r\n    console.log(\"Calendar hidden via DOM manipulation\");\r\n  };\r\n  \r\n  // This one needs to actually work to clear selections when the modal closes\r\n  window.clearStopoverInfo = clearStopoverInfo;\r\n  \r\n  // REMOVING THIS ENTIRE EFFECT TO STOP INFINITE LOOP\r\n  // We'll manually initialize selections when needed\r\n\r\n  // Calendar navigation functions\r\n  const goToPrevMonth = () => {\r\n    if (currentMonth === 0) {\r\n      setCurrentMonth(11);\r\n      setCurrentYear(currentYear - 1);\r\n    } else {\r\n      setCurrentMonth(currentMonth - 1);\r\n    }\r\n  };\r\n\r\n  const goToNextMonth = () => {\r\n    if (currentMonth === 11) {\r\n      setCurrentMonth(0);\r\n      setCurrentYear(currentYear + 1);\r\n    } else {\r\n      setCurrentMonth(currentMonth + 1);\r\n    }\r\n  };\r\n\r\n  // Calendar utility functions\r\n  const getDaysInMonth = (year, month) => {\r\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\r\n  };\r\n\r\n  const getFirstDayOfMonth = (year, month) => {\r\n    return dayjs(`${year}-${month + 1}-01`).day();\r\n  };\r\n\r\n  const formatDate = (year, month, day) => {\r\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\r\n  };\r\n\r\n  // Date selection handling with stable state\r\n  const handleDateClick = (dateString) => {\r\n    console.log(\"Date clicked:\", dateString);\r\n    console.log(\"Current selection:\", { \r\n      start: selectionRef.current.start, \r\n      end: selectionRef.current.end \r\n    });\r\n    \r\n    if (!selectionRef.current.start) {\r\n      console.log(\"Setting selection start\");\r\n      // Update both the ref and state\r\n      selectionRef.current.start = dateString;\r\n      selectionRef.current.end = null;\r\n      \r\n      setLocalSelectionStart(dateString);\r\n      setLocalSelectionEnd(null);\r\n      setError('');\r\n    } else if (!selectionRef.current.end) {\r\n      console.log(\"Setting selection end\");\r\n      const start = dayjs(selectionRef.current.start);\r\n      const end = dayjs(dateString);\r\n      \r\n      if (end.isBefore(start)) {\r\n        setError('End date cannot be before start date');\r\n        return;\r\n      }\r\n      \r\n      if (end.diff(start, 'days') > 7) {\r\n        setError('Date range cannot exceed 7 days');\r\n        return;\r\n      }\r\n\r\n      // Update both the ref and state\r\n      selectionRef.current.end = dateString;\r\n      setLocalSelectionEnd(dateString);\r\n      \r\n      if (onDateRangeSelect) {\r\n        onDateRangeSelect([start, end]);\r\n      }\r\n    } else {\r\n      console.log(\"Resetting selection\");\r\n      // Update both the ref and state\r\n      selectionRef.current.start = dateString;\r\n      selectionRef.current.end = null;\r\n      \r\n      setLocalSelectionStart(dateString);\r\n      setLocalSelectionEnd(null);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const isDateInRange = (dateString) => {\r\n    const ref = selectionRef.current;\r\n    \r\n    if (!ref.start || !ref.end) {\r\n      // If only start date is selected, highlight just that day\r\n      if (ref.start && dateString === ref.start) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    \r\n    const date = dayjs(dateString);\r\n    const start = dayjs(ref.start);\r\n    const end = dayjs(ref.end);\r\n    \r\n    // Include the start and end dates themselves\r\n    return (date.isAfter(start.subtract(1, 'day')) || date.isSame(start, 'day')) && \r\n           (date.isBefore(end.add(1, 'day')) || date.isSame(end, 'day'));\r\n  };\r\n\r\n  // Search function using ref for stable state\r\n  const handleSearch = (stopoverInfo) => {\r\n    const ref = selectionRef.current;\r\n    \r\n    if (!ref.start || !ref.end) {\r\n      setError('Please select a date range');\r\n      return;\r\n    }\r\n    \r\n    if (selectedConnection && !stopoverDays) {\r\n      setError('Please specify stopover days');\r\n      return;\r\n    }\r\n    \r\n    setError('');\r\n    \r\n    // Create stopover info object if a connection is selected\r\n    const stopoverInfoObj = selectedConnection ? {\r\n      airport: selectedConnection,\r\n      days: stopoverDays\r\n    } : null;\r\n    \r\n    console.log('Search with date range:', {\r\n      start: ref.start,\r\n      end: ref.end,\r\n      stopover: stopoverInfoObj\r\n    });\r\n    \r\n    // Pass the selected date range to the parent component\r\n    if (onDateRangeSelect) {\r\n      onDateRangeSelect([ref.start, ref.end]);\r\n    }\r\n    \r\n    // Call the search function with stopover info\r\n    if (onSearch) {\r\n      onSearch(stopoverInfoObj, true, true);\r\n    }\r\n  };\r\n\r\n  // Calendar segments rendering logic\r\n  const sortSegments = (segments) => {\r\n    const validSegments = segments\r\n      .map(segment => ({\r\n        ...segment,\r\n        ...isValidSegment(segment)\r\n      }))\r\n      .filter(segment => segment.isValid);\r\n\r\n    return getRequiredSegments(validSegments);\r\n  };\r\n  \r\n  const isValidSegment = (segment) => {\r\n    const [from, to] = segment.route.split('-');\r\n    \r\n    for (let i = 0; i < currentRoute.length - 1; i++) {\r\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\r\n        return { isValid: true, index: i };\r\n      }\r\n    }\r\n    return { isValid: false, index: -1 };\r\n  };\r\n  \r\n  const getRequiredSegments = (existingSegments) => {\r\n    const segmentMap = new Map(\r\n      existingSegments.map(segment => [segment.route, segment])\r\n    );\r\n\r\n    const allSegments = [];\r\n    for (let i = 0; i < currentRoute.length - 1; i++) {\r\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\r\n      const segment = segmentMap.get(route) || {\r\n        route,\r\n        classes: { Y: false, J: false, F: false },\r\n        index: i\r\n      };\r\n      allSegments.push(segment);\r\n    }\r\n\r\n    return allSegments.sort((a, b) => a.index - b.index);\r\n  };\r\n  \r\n  const hasAnyAvailability = (segments) => {\r\n    return segments.some(segment => \r\n      segment.classes.Y || segment.classes.J || segment.classes.F\r\n    );\r\n  };\r\n\r\n  // Get unique connection points from currentRoute with full airport names\r\n  const connectionOptions = currentRoute\r\n    .slice(1, -1)\r\n    .map(iata => {\r\n      const airport = airports.find(a => a.IATA === iata);\r\n      return {\r\n        label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\r\n        value: iata\r\n      };\r\n    });\r\n\r\n  // Handle modal close\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Render availability badges\r\n  const renderAvailabilityBadges = (route, classes) => {\r\n    const getBackgroundColor = (classCode, available) => {\r\n      if (!available) return 'transparent';\r\n      switch (classCode) {\r\n        case 'Y': return '#E8E1F2';\r\n        case 'J': return '#F3CD87';\r\n        case 'F': return '#D88A3F';\r\n        default: return 'transparent';\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ display: 'flex', gap: '2px' }}>\r\n        {Object.entries(classes).map(([classCode, available]) => (\r\n          <div\r\n            key={classCode}\r\n            style={{\r\n              backgroundColor: getBackgroundColor(classCode, available),\r\n              color: available ? '#684634' : '#999',\r\n              padding: '0px 4px',\r\n              borderRadius: '4px',\r\n              fontSize: '13px',\r\n              fontFamily: 'Menlo',\r\n              width: '20px',\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            {available ? classCode : '-'}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Calendar constants\r\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\r\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  return (\r\n    <div>\r\n      {/* Show Calendar button - always visible */}\r\n      <div className=\"show-calendar-button\" style={{ marginBottom: '10px' }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            // Show calendar by modifying DOM directly\r\n            const calendarContainer = document.querySelector(\".calendar-container\");\r\n            \r\n            if (calendarContainer) {\r\n              calendarContainer.style.display = \"block\";\r\n            }\r\n            \r\n            console.log(\"Calendar shown via DOM manipulation\");\r\n          }}\r\n        >\r\n          Show Calendar\r\n        </Button>\r\n      </div>\r\n      \r\n      {/* Calendar container with a class for DOM manipulation */}\r\n      <div className=\"calendar-container\" style={{ padding: '20px' }}>\r\n          {/* Calendar header */}\r\n          <div style={{ \r\n            display: 'flex', \r\n            justifyContent: 'space-between', \r\n            alignItems: 'center', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <Button \r\n              type=\"primary\"\r\n              onClick={goToPrevMonth}\r\n              style={{ backgroundColor: '#1677ff' }}\r\n            >\r\n              &larr;\r\n            </Button>\r\n            <Title level={4} style={{ margin: 0 }}>{monthNames[currentMonth]} {currentYear}</Title>\r\n            <Button \r\n              type=\"primary\"\r\n              onClick={goToNextMonth}\r\n              style={{ backgroundColor: '#1677ff' }}\r\n            >\r\n              &rarr;\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Calendar grid */}\r\n          <div style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: 'repeat(7, 1fr)',\r\n            border: '1px solid #f0f0f0',\r\n            backgroundColor: '#f0f0f0',\r\n            gap: '1px',\r\n            fontFamily: 'Menlo, monospace'\r\n          }}>\r\n            {/* Day headers */}\r\n            {dayNames.map(day => (\r\n              <div key={day} style={{ \r\n                backgroundColor: '#f5f5f5',\r\n                padding: '8px',\r\n                textAlign: 'center',\r\n                fontWeight: '500'\r\n              }}>\r\n                {day}\r\n              </div>\r\n            ))}\r\n\r\n            {/* Empty cells for days of week before the first day of month */}\r\n            {Array.from({ length: firstDayOfMonth }).map((_, index) => (\r\n              <div key={`empty-${index}`} style={{ \r\n                backgroundColor: 'white',\r\n                minHeight: '120px',\r\n                padding: '8px'\r\n              }} />\r\n            ))}\r\n\r\n            {/* Calendar day cells */}\r\n            {Array.from({ length: daysInMonth }).map((_, index) => {\r\n              const day = index + 1;\r\n              const dateString = formatDate(currentYear, currentMonth, day);\r\n              const flights = flightData?.[dateString] || [];\r\n              const validFlights = flights.length > 0 ? sortSegments(flights) : [];\r\n              const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\r\n              const isSelected = isDateInRange(dateString);\r\n              const isStart = dateString === selectionRef.current.start;\r\n              const isEnd = dateString === selectionRef.current.end;\r\n\r\n              return (\r\n                <div\r\n                  key={`day-${day}`}\r\n                  style={{\r\n                    backgroundColor: isSelected ? '#e6f4ff' : 'white',\r\n                    minHeight: '120px',\r\n                    padding: '8px',\r\n                    fontFamily: 'Menlo, monospace',\r\n                    cursor: 'pointer',\r\n                    border: isStart || isEnd ? '2px solid #1890ff' : 'none'\r\n                  }}\r\n                  onClick={(e) => {\r\n                    // Prevent event bubbling\r\n                    e.stopPropagation();\r\n                    // Ensure click handler works properly\r\n                    console.log(`Clicking on day ${day} (${dateString})`);\r\n                    handleDateClick(dateString);\r\n                  }}\r\n                >\r\n                  <div style={{ \r\n                    fontWeight: 'bold', \r\n                    marginBottom: '8px',\r\n                    fontSize: '13px'\r\n                  }}>\r\n                    {day}\r\n                  </div>\r\n                  {showFlights ? (\r\n                    <div style={{ fontSize: '12px' }}>\r\n                      {validFlights.map((segment, idx) => (\r\n                        <div \r\n                          key={idx} \r\n                          style={{ \r\n                            marginBottom: '4px',\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center'\r\n                          }}\r\n                        >\r\n                          <div style={{ \r\n                            fontSize: '14px',\r\n                            fontFamily: 'Menlo, monospace'\r\n                          }}>\r\n                            {segment.route}\r\n                          </div>\r\n                          {renderAvailabilityBadges(segment.route, segment.classes)}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div style={{ \r\n                      textAlign: 'center', \r\n                      color: '#999', \r\n                      fontSize: '12px',\r\n                      marginTop: '32px',\r\n                      fontFamily: 'Menlo, monospace'\r\n                    }}>\r\n                      No flights\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Error message */}\r\n          {error && (\r\n            <div style={{ \r\n              color: '#ff4d4f', \r\n              marginTop: '16px',\r\n              textAlign: 'center' \r\n            }}>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {/* Controls */}\r\n          <div style={{ \r\n            marginTop: '16px',\r\n            display: 'flex',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n            gap: '8px'\r\n          }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n              <span>Stopover at</span>\r\n              <Select\r\n                style={{ width: 400 }}\r\n                value={selectedConnection}\r\n                onChange={(value) => {\r\n                  setSelectedConnection(value);\r\n                  if (!value) {\r\n                    setStopoverDays(null);\r\n                  }\r\n                }}\r\n                options={connectionOptions}\r\n                allowClear\r\n                placeholder=\"Select city\"\r\n              />\r\n              {selectedConnection && (\r\n                <>\r\n                  <span>for</span>\r\n                  <InputNumber\r\n                    style={{ width: 60 }}\r\n                    min={1}\r\n                    max={14}\r\n                    value={stopoverDays}\r\n                    onChange={(value) => setStopoverDays(value)}\r\n                    placeholder=\"Days\"\r\n                  />\r\n                  <span>days</span>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div style={{ marginLeft: 'auto', display: 'flex', gap: '8px' }}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => handleSearch(null)}\r\n                disabled={!selectionStart || !selectionEnd || (selectedConnection && !stopoverDays)}\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  // Hide calendar by adding CSS class directly to avoid state changes\r\n                  const calendarContainer = document.querySelector(\".calendar-container\");\r\n                  \r\n                  if (calendarContainer) {\r\n                    calendarContainer.style.display = \"none\";\r\n                  }\r\n                  \r\n                  console.log(\"Calendar hidden via DOM manipulation\");\r\n                }}\r\n              >\r\n                Hide Calendar\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      <FlightDetailsModal\r\n        isModalOpen={isModalOpen}\r\n        onClose={handleModalClose}\r\n        selectedFlights={selectedFlights}\r\n        pricingData={pricingData}\r\n        currentRoute={currentRoute}\r\n      />\r\n      \r\n      <div style={{ textAlign: 'center', marginTop: '20px', fontSize: '12px', color: '#888' }}>\r\n        Route Builder © Ha Nguyen @ 2025\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightAvailabilityCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}