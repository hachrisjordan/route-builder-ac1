{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguyen77\\\\docker-neo4j\\\\route-builder-ac1\\\\src\\\\components\\\\FlightSearch\\\\FlightAvailabilityCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Typography, Badge, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { airports } from './data/airports';\nimport FlightDetailsModal from './FlightDetailsModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst FlightAvailabilityCalendar = ({\n  flightData,\n  currentRoute,\n  onDateRangeSelect,\n  selectedRange,\n  onSearch,\n  selectedFlights,\n  pricingData\n}) => {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Get days in month\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n\n  // Get first day of month (0 = Sunday, 1 = Monday, etc.)\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n\n  // Helper to format date as \"YYYY-MM-DD\"\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n\n  // Previous and next month handlers\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  // Function to render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    // Helper function to get background color based on class code\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y':\n          return '#E8E1F2';\n        case 'J':\n          return '#F3CD87';\n        case 'F':\n          return '#D88A3F';\n        default:\n          return 'transparent';\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2px'\n      },\n      children: Object.entries(classes).map(([classCode, available]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: getBackgroundColor(classCode, available),\n          color: available ? '#684634' : '#999',\n          padding: '0px 4px',\n          borderRadius: '4px',\n          fontSize: '13px',\n          fontFamily: 'Menlo',\n          width: '20px',\n          textAlign: 'center'\n        },\n        children: available ? classCode : '-'\n      }, classCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to check if a segment is valid for the current route\n  const isValidSegment = segment => {\n    const [from, to] = segment.route.split('-');\n\n    // Check if this segment exists as consecutive airports in currentRoute\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return {\n          isValid: true,\n          index: i\n        };\n      }\n    }\n    return {\n      isValid: false,\n      index: -1\n    };\n  };\n\n  // Function to get all required segments for a date\n  const getRequiredSegments = existingSegments => {\n    // Create a map of existing segments for easy lookup\n    const segmentMap = new Map(existingSegments.map(segment => [segment.route, segment]));\n\n    // Generate all required segments\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: {\n          Y: false,\n          J: false,\n          F: false\n        },\n        // Default to all unavailable\n        index: i\n      };\n      allSegments.push(segment);\n    }\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n\n  // Function to sort segments by their position in the route\n  const sortSegments = segments => {\n    const validSegments = segments.map(segment => ({\n      ...segment,\n      ...isValidSegment(segment)\n    })).filter(segment => segment.isValid);\n    return getRequiredSegments(validSegments);\n  };\n\n  // Add function to check if any segment has availability\n  const hasAnyAvailability = segments => {\n    return segments.some(segment => segment.classes.Y || segment.classes.J || segment.classes.F);\n  };\n  const handleDateClick = dateString => {\n    if (!selectionStart) {\n      // First click - set start date\n      setSelectionStart(dateString);\n      setSelectionEnd(null);\n      setError('');\n    } else if (!selectionEnd) {\n      // Second click - set end date\n      const start = dayjs(selectionStart);\n      const end = dayjs(dateString);\n      if (end.isBefore(start)) {\n        // If end date is before start date, make it the new start date\n        setSelectionStart(dateString);\n        setSelectionEnd(null);\n        setError('');\n      } else if (end.diff(start, 'days') > 7) {\n        setError('Date range cannot exceed 7 days');\n        return;\n      } else {\n        // Normal case - end date is after start date\n        setSelectionEnd(dateString);\n        onDateRangeSelect([start, end]);\n      }\n    } else {\n      // Third click - reset and set new start date\n      setSelectionStart(dateString);\n      setSelectionEnd(null);\n      setError('');\n    }\n  };\n  const isDateInRange = dateString => {\n    if (!selectionStart || !selectionEnd) return false;\n    const date = dayjs(dateString);\n    const start = dayjs(selectionStart);\n    const end = dayjs(selectionEnd);\n    return date.isAfter(start.subtract(1, 'day')) && date.isBefore(end.add(1, 'day'));\n  };\n\n  // Add a function to handle the Apply button click\n  const handleApplyClick = (stopoverInfo, preserveCalendarData = false, clearSelections = false) => {\n    // Make sure the calendar is visible\n    setShowCalendar(true);\n\n    // If there are selected dates, move to the month of the first selected date\n    if (selectedRange && selectedRange[0]) {\n      const selectedDate = dayjs.isDayjs(selectedRange[0]) ? selectedRange[0] : dayjs(selectedRange[0]);\n\n      // Set the current month and year\n      setCurrentMonth(selectedDate.month());\n      setCurrentYear(selectedDate.year());\n      console.log('Moving calendar to:', selectedDate.format('YYYY-MM-DD'));\n      console.log('Month:', selectedDate.month(), 'Year:', selectedDate.year());\n    }\n\n    // Call the original onSearch function\n    onSearch(stopoverInfo, preserveCalendarData, clearSelections);\n  };\n\n  // Get unique connection points from currentRoute with full airport names\n  const connectionOptions = currentRoute.slice(1, -1).map(iata => {\n    const airport = airports.find(a => a.IATA === iata);\n    return {\n      label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\n      value: iata\n    };\n  });\n\n  // Add this function to directly set the calendar to a specific month/year\n  const setCalendarToDate = date => {\n    if (!date) return;\n\n    // Ensure we have a dayjs object\n    const dayjsDate = dayjs.isDayjs(date) ? date : dayjs(date);\n\n    // Log for debugging\n    console.log('Setting calendar to date:', dayjsDate.format('YYYY-MM-DD'));\n    console.log('Month:', dayjsDate.month(), 'Year:', dayjsDate.year());\n\n    // Force update the calendar view\n    setCurrentMonth(dayjsDate.month());\n    setCurrentYear(dayjsDate.year());\n  };\n\n  // Update the useEffect to use our new function\n  useEffect(() => {\n    if (selectedRange && selectedRange[0]) {\n      const selectedDate = dayjs.isDayjs(selectedRange[0]) ? selectedRange[0] : dayjs(selectedRange[0]);\n      setCurrentMonth(selectedDate.month());\n      setCurrentYear(selectedDate.year());\n\n      // Make sure the calendar is visible\n      setShowCalendar(true);\n    }\n  }, [selectedRange]);\n\n  // Update the handleSearch function to also set the calendar month\n  const handleSearch = (stopoverInfo, preserveCalendarData = false, clearSelections = false) => {\n    if (!selectionStart || !selectionEnd) {\n      setError('Please select a date range');\n      return;\n    }\n    if (selectedConnection && !stopoverDays) {\n      setError('Please specify stopover days');\n      return;\n    }\n    setError('');\n\n    // Set the calendar to the first selected date\n    setCalendarToDate(selectionStart);\n\n    // Create stopover info object if a connection is selected\n    const stopoverInfoObj = selectedConnection ? {\n      airport: selectedConnection,\n      days: stopoverDays\n    } : null;\n    console.log('Search with date range:', {\n      start: selectionStart,\n      end: selectionEnd,\n      stopover: stopoverInfoObj\n    });\n\n    // Pass the selected date range to the parent component\n    onDateRangeSelect([selectionStart, selectionEnd]);\n\n    // Call the search function with stopover info and clear selections flag\n    if (onSearch) {\n      onSearch(stopoverInfoObj, true, true); // Add flag to clear flight selections\n    }\n  };\n\n  // Add an effect to handle when the component receives new data\n  useEffect(() => {\n    if (flightData && flightData.length > 0) {\n      var _flightData$;\n      // Find the first date with data\n      const firstDateWithData = Object.keys(((_flightData$ = flightData[0]) === null || _flightData$ === void 0 ? void 0 : _flightData$.dates) || {}).sort().find(date => {\n        var _flightData$0$dates$d;\n        return ((_flightData$0$dates$d = flightData[0].dates[date]) === null || _flightData$0$dates$d === void 0 ? void 0 : _flightData$0$dates$d.length) > 0;\n      });\n      if (firstDateWithData) {\n        setCalendarToDate(firstDateWithData);\n      }\n    }\n  }, [flightData]);\n\n  // Clear function to reset stopover selections\n  const clearStopoverSelections = () => {\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Handle modal close\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    clearStopoverSelections();\n  };\n\n  // Add a function to clear stopover information\n  const clearStopoverInfo = () => {\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Add a function to hide the calendar\n  const hideCalendar = () => {\n    setShowCalendar(false);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setError('');\n  };\n\n  // Expose the functions globally\n  useEffect(() => {\n    window.clearStopoverInfo = clearStopoverInfo;\n    window.hideCalendar = hideCalendar;\n\n    // Cleanup on unmount\n    return () => {\n      delete window.clearStopoverInfo;\n      delete window.hideCalendar;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!showCalendar && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleApplyClick(),\n      children: \"Show Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this), showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToPrevMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 4,\n          style: {\n            margin: 0\n          },\n          children: [monthNames[currentMonth], \" \", currentYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToNextMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          border: '1px solid #f0f0f0',\n          backgroundColor: '#f0f0f0',\n          gap: '1px',\n          fontFamily: 'Menlo, monospace'\n        },\n        children: [dayNames.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '8px',\n            textAlign: 'center',\n            fontWeight: '500'\n          },\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: firstDayOfMonth\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            minHeight: '120px',\n            padding: '8px'\n          }\n        }, `empty-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: daysInMonth\n        }).map((_, index) => {\n          const day = index + 1;\n          const dateString = formatDate(currentYear, currentMonth, day);\n          const flights = flightData[dateString] || [];\n          const validFlights = flights.length > 0 ? sortSegments(flights) : [];\n          const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\n          const isSelected = isDateInRange(dateString);\n          const isStart = dateString === selectionStart;\n          const isEnd = dateString === selectionEnd;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: isSelected ? '#e6f4ff' : 'white',\n              minHeight: '120px',\n              padding: '8px',\n              fontFamily: 'Menlo, monospace',\n              cursor: 'pointer',\n              border: isStart || isEnd ? '2px solid #1890ff' : 'none'\n            },\n            onClick: () => handleDateClick(dateString),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '8px',\n                fontSize: '13px'\n              },\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, this), showFlights ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px'\n              },\n              children: validFlights.map((segment, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '4px',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '14px',\n                    fontFamily: 'Menlo, monospace'\n                  },\n                  children: segment.route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 27\n                }, this), renderAvailabilityBadges(segment.route, segment.classes)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                color: '#999',\n                fontSize: '12px',\n                marginTop: '32px',\n                fontFamily: 'Menlo, monospace'\n              },\n              children: \"No flights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 21\n            }, this)]\n          }, `day-${day}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#ff4d4f',\n          marginTop: '16px',\n          textAlign: 'center'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '16px',\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stopover at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: 400\n            },\n            value: selectedConnection,\n            onChange: value => {\n              setSelectedConnection(value);\n              if (!value) {\n                setStopoverDays(null);\n              }\n            },\n            options: connectionOptions,\n            allowClear: true,\n            placeholder: \"Select city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this), selectedConnection && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n              style: {\n                width: 60\n              },\n              min: 1,\n              max: 14,\n              value: stopoverDays,\n              onChange: value => setStopoverDays(value),\n              placeholder: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto',\n            display: 'flex',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleSearch(null),\n            disabled: !selectionStart || !selectionEnd || selectedConnection && !stopoverDays,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowCalendar(false),\n            children: \"Hide Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FlightDetailsModal, {\n      isModalOpen: isModalOpen,\n      onClose: handleModalClose,\n      selectedFlights: selectedFlights,\n      pricingData: pricingData,\n      currentRoute: currentRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightAvailabilityCalendar, \"ivlmfTYhlgf0phVpEhoCmHKZxXQ=\");\n_c = FlightAvailabilityCalendar;\nexport default FlightAvailabilityCalendar;\nvar _c;\n$RefreshReg$(_c, \"FlightAvailabilityCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Typography","Badge","Select","InputNumber","dayjs","airports","FlightDetailsModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","FlightAvailabilityCalendar","flightData","currentRoute","onDateRangeSelect","selectedRange","onSearch","selectedFlights","pricingData","_s","currentMonth","setCurrentMonth","month","currentYear","setCurrentYear","year","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","error","setError","showCalendar","setShowCalendar","selectedConnection","setSelectedConnection","stopoverDays","setStopoverDays","isModalOpen","setIsModalOpen","getDaysInMonth","daysInMonth","getFirstDayOfMonth","day","formatDate","format","firstDayOfMonth","goToPrevMonth","goToNextMonth","monthNames","dayNames","renderAvailabilityBadges","route","classes","getBackgroundColor","classCode","available","style","display","gap","children","Object","entries","map","backgroundColor","color","padding","borderRadius","fontSize","fontFamily","width","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","isValidSegment","segment","from","to","split","i","length","isValid","index","getRequiredSegments","existingSegments","segmentMap","Map","allSegments","get","Y","J","F","push","sort","a","b","sortSegments","segments","validSegments","filter","hasAnyAvailability","some","handleDateClick","dateString","start","end","isBefore","diff","isDateInRange","date","isAfter","subtract","add","handleApplyClick","stopoverInfo","preserveCalendarData","clearSelections","selectedDate","isDayjs","console","log","connectionOptions","slice","iata","airport","find","IATA","label","Name","value","setCalendarToDate","dayjsDate","handleSearch","stopoverInfoObj","days","stopover","_flightData$","firstDateWithData","keys","dates","_flightData$0$dates$d","clearStopoverSelections","handleModalClose","clearStopoverInfo","hideCalendar","window","onClick","justifyContent","alignItems","marginBottom","type","level","margin","gridTemplateColumns","border","fontWeight","Array","_","minHeight","flights","validFlights","showFlights","isSelected","isStart","isEnd","cursor","idx","marginTop","onChange","options","allowClear","placeholder","min","max","marginLeft","disabled","onClose","_c","$RefreshReg$"],"sources":["C:/Users/nguyen77/docker-neo4j/route-builder-ac1/src/components/FlightSearch/FlightAvailabilityCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Card, Typography, Badge, Select, InputNumber } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport { airports } from './data/airports';\r\nimport FlightDetailsModal from './FlightDetailsModal';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst FlightAvailabilityCalendar = ({ flightData, currentRoute, onDateRangeSelect, selectedRange, onSearch, selectedFlights, pricingData }) => {\r\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\r\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\r\n  const [selectionStart, setSelectionStart] = useState(null);\r\n  const [selectionEnd, setSelectionEnd] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const [selectedConnection, setSelectedConnection] = useState(null);\r\n  const [stopoverDays, setStopoverDays] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Get days in month\r\n  const getDaysInMonth = (year, month) => {\r\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\r\n  };\r\n\r\n  // Get first day of month (0 = Sunday, 1 = Monday, etc.)\r\n  const getFirstDayOfMonth = (year, month) => {\r\n    return dayjs(`${year}-${month + 1}-01`).day();\r\n  };\r\n\r\n  // Helper to format date as \"YYYY-MM-DD\"\r\n  const formatDate = (year, month, day) => {\r\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\r\n  };\r\n\r\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\r\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\r\n\r\n  // Previous and next month handlers\r\n  const goToPrevMonth = () => {\r\n    if (currentMonth === 0) {\r\n      setCurrentMonth(11);\r\n      setCurrentYear(currentYear - 1);\r\n    } else {\r\n      setCurrentMonth(currentMonth - 1);\r\n    }\r\n  };\r\n\r\n  const goToNextMonth = () => {\r\n    if (currentMonth === 11) {\r\n      setCurrentMonth(0);\r\n      setCurrentYear(currentYear + 1);\r\n    } else {\r\n      setCurrentMonth(currentMonth + 1);\r\n    }\r\n  };\r\n\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  // Function to render availability badges\r\n  const renderAvailabilityBadges = (route, classes) => {\r\n    // Helper function to get background color based on class code\r\n    const getBackgroundColor = (classCode, available) => {\r\n      if (!available) return 'transparent';\r\n      switch (classCode) {\r\n        case 'Y': return '#E8E1F2';\r\n        case 'J': return '#F3CD87';\r\n        case 'F': return '#D88A3F';\r\n        default: return 'transparent';\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ display: 'flex', gap: '2px' }}>\r\n        {Object.entries(classes).map(([classCode, available]) => (\r\n          <div\r\n            key={classCode}\r\n            style={{\r\n              backgroundColor: getBackgroundColor(classCode, available),\r\n              color: available ? '#684634' : '#999',\r\n              padding: '0px 4px',\r\n              borderRadius: '4px',\r\n              fontSize: '13px',\r\n              fontFamily: 'Menlo',\r\n              width: '20px',\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            {available ? classCode : '-'}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Function to check if a segment is valid for the current route\r\n  const isValidSegment = (segment) => {\r\n    const [from, to] = segment.route.split('-');\r\n    \r\n    // Check if this segment exists as consecutive airports in currentRoute\r\n    for (let i = 0; i < currentRoute.length - 1; i++) {\r\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\r\n        return { isValid: true, index: i };\r\n      }\r\n    }\r\n    return { isValid: false, index: -1 };\r\n  };\r\n\r\n  // Function to get all required segments for a date\r\n  const getRequiredSegments = (existingSegments) => {\r\n    // Create a map of existing segments for easy lookup\r\n    const segmentMap = new Map(\r\n      existingSegments.map(segment => [segment.route, segment])\r\n    );\r\n\r\n    // Generate all required segments\r\n    const allSegments = [];\r\n    for (let i = 0; i < currentRoute.length - 1; i++) {\r\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\r\n      const segment = segmentMap.get(route) || {\r\n        route,\r\n        classes: { Y: false, J: false, F: false }, // Default to all unavailable\r\n        index: i\r\n      };\r\n      allSegments.push(segment);\r\n    }\r\n\r\n    return allSegments.sort((a, b) => a.index - b.index);\r\n  };\r\n\r\n  // Function to sort segments by their position in the route\r\n  const sortSegments = (segments) => {\r\n    const validSegments = segments\r\n      .map(segment => ({\r\n        ...segment,\r\n        ...isValidSegment(segment)\r\n      }))\r\n      .filter(segment => segment.isValid);\r\n\r\n    return getRequiredSegments(validSegments);\r\n  };\r\n\r\n  // Add function to check if any segment has availability\r\n  const hasAnyAvailability = (segments) => {\r\n    return segments.some(segment => \r\n      segment.classes.Y || segment.classes.J || segment.classes.F\r\n    );\r\n  };\r\n\r\n  const handleDateClick = (dateString) => {\r\n    if (!selectionStart) {\r\n      // First click - set start date\r\n      setSelectionStart(dateString);\r\n      setSelectionEnd(null);\r\n      setError('');\r\n    } else if (!selectionEnd) {\r\n      // Second click - set end date\r\n      const start = dayjs(selectionStart);\r\n      const end = dayjs(dateString);\r\n      \r\n      if (end.isBefore(start)) {\r\n        // If end date is before start date, make it the new start date\r\n        setSelectionStart(dateString);\r\n        setSelectionEnd(null);\r\n        setError('');\r\n      } else if (end.diff(start, 'days') > 7) {\r\n        setError('Date range cannot exceed 7 days');\r\n        return;\r\n      } else {\r\n        // Normal case - end date is after start date\r\n        setSelectionEnd(dateString);\r\n        onDateRangeSelect([start, end]);\r\n      }\r\n    } else {\r\n      // Third click - reset and set new start date\r\n      setSelectionStart(dateString);\r\n      setSelectionEnd(null);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const isDateInRange = (dateString) => {\r\n    if (!selectionStart || !selectionEnd) return false;\r\n    const date = dayjs(dateString);\r\n    const start = dayjs(selectionStart);\r\n    const end = dayjs(selectionEnd);\r\n    return date.isAfter(start.subtract(1, 'day')) && \r\n           date.isBefore(end.add(1, 'day'));\r\n  };\r\n\r\n  // Add a function to handle the Apply button click\r\n  const handleApplyClick = (stopoverInfo, preserveCalendarData = false, clearSelections = false) => {\r\n    // Make sure the calendar is visible\r\n    setShowCalendar(true);\r\n    \r\n    // If there are selected dates, move to the month of the first selected date\r\n    if (selectedRange && selectedRange[0]) {\r\n      const selectedDate = dayjs.isDayjs(selectedRange[0]) \r\n        ? selectedRange[0] \r\n        : dayjs(selectedRange[0]);\r\n      \r\n      // Set the current month and year\r\n      setCurrentMonth(selectedDate.month());\r\n      setCurrentYear(selectedDate.year());\r\n      \r\n      console.log('Moving calendar to:', selectedDate.format('YYYY-MM-DD'));\r\n      console.log('Month:', selectedDate.month(), 'Year:', selectedDate.year());\r\n    }\r\n    \r\n    // Call the original onSearch function\r\n    onSearch(stopoverInfo, preserveCalendarData, clearSelections);\r\n  };\r\n\r\n  // Get unique connection points from currentRoute with full airport names\r\n  const connectionOptions = currentRoute\r\n    .slice(1, -1)\r\n    .map(iata => {\r\n      const airport = airports.find(a => a.IATA === iata);\r\n      return {\r\n        label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\r\n        value: iata\r\n      };\r\n    });\r\n\r\n  // Add this function to directly set the calendar to a specific month/year\r\n  const setCalendarToDate = (date) => {\r\n    if (!date) return;\r\n    \r\n    // Ensure we have a dayjs object\r\n    const dayjsDate = dayjs.isDayjs(date) ? date : dayjs(date);\r\n    \r\n    // Log for debugging\r\n    console.log('Setting calendar to date:', dayjsDate.format('YYYY-MM-DD'));\r\n    console.log('Month:', dayjsDate.month(), 'Year:', dayjsDate.year());\r\n    \r\n    // Force update the calendar view\r\n    setCurrentMonth(dayjsDate.month());\r\n    setCurrentYear(dayjsDate.year());\r\n  };\r\n\r\n  // Update the useEffect to use our new function\r\n  useEffect(() => {\r\n    if (selectedRange && selectedRange[0]) {\r\n      const selectedDate = dayjs.isDayjs(selectedRange[0]) \r\n        ? selectedRange[0] \r\n        : dayjs(selectedRange[0]);\r\n      \r\n      setCurrentMonth(selectedDate.month());\r\n      setCurrentYear(selectedDate.year());\r\n      \r\n      // Make sure the calendar is visible\r\n      setShowCalendar(true);\r\n    }\r\n  }, [selectedRange]);\r\n\r\n  // Update the handleSearch function to also set the calendar month\r\n  const handleSearch = (stopoverInfo, preserveCalendarData = false, clearSelections = false) => {\r\n    if (!selectionStart || !selectionEnd) {\r\n      setError('Please select a date range');\r\n      return;\r\n    }\r\n    \r\n    if (selectedConnection && !stopoverDays) {\r\n      setError('Please specify stopover days');\r\n      return;\r\n    }\r\n    \r\n    setError('');\r\n    \r\n    // Set the calendar to the first selected date\r\n    setCalendarToDate(selectionStart);\r\n    \r\n    // Create stopover info object if a connection is selected\r\n    const stopoverInfoObj = selectedConnection ? {\r\n      airport: selectedConnection,\r\n      days: stopoverDays\r\n    } : null;\r\n    \r\n    console.log('Search with date range:', {\r\n      start: selectionStart,\r\n      end: selectionEnd,\r\n      stopover: stopoverInfoObj\r\n    });\r\n    \r\n    // Pass the selected date range to the parent component\r\n    onDateRangeSelect([selectionStart, selectionEnd]);\r\n    \r\n    // Call the search function with stopover info and clear selections flag\r\n    if (onSearch) {\r\n      onSearch(stopoverInfoObj, true, true); // Add flag to clear flight selections\r\n    }\r\n  };\r\n\r\n  // Add an effect to handle when the component receives new data\r\n  useEffect(() => {\r\n    if (flightData && flightData.length > 0) {\r\n      // Find the first date with data\r\n      const firstDateWithData = Object.keys(flightData[0]?.dates || {})\r\n        .sort()\r\n        .find(date => flightData[0].dates[date]?.length > 0);\r\n        \r\n      if (firstDateWithData) {\r\n        setCalendarToDate(firstDateWithData);\r\n      }\r\n    }\r\n  }, [flightData]);\r\n\r\n  // Clear function to reset stopover selections\r\n  const clearStopoverSelections = () => {\r\n    setSelectedConnection(null);\r\n    setStopoverDays(null);\r\n  };\r\n\r\n  // Handle modal close\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n    clearStopoverSelections();\r\n  };\r\n\r\n  // Add a function to clear stopover information\r\n  const clearStopoverInfo = () => {\r\n    setSelectedConnection(null);\r\n    setStopoverDays(null);\r\n  };\r\n  \r\n  // Add a function to hide the calendar\r\n  const hideCalendar = () => {\r\n    setShowCalendar(false);\r\n    setSelectionStart(null);\r\n    setSelectionEnd(null);\r\n    setError('');\r\n  };\r\n  \r\n  // Expose the functions globally\r\n  useEffect(() => {\r\n    window.clearStopoverInfo = clearStopoverInfo;\r\n    window.hideCalendar = hideCalendar;\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      delete window.clearStopoverInfo;\r\n      delete window.hideCalendar;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!showCalendar && (\r\n        <Button onClick={() => handleApplyClick()}>\r\n          Show Calendar\r\n        </Button>\r\n      )}\r\n      \r\n      {showCalendar && (\r\n        <div style={{ padding: '20px' }}>\r\n          {/* Calendar header */}\r\n          <div style={{ \r\n            display: 'flex', \r\n            justifyContent: 'space-between', \r\n            alignItems: 'center', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <Button \r\n              type=\"primary\"\r\n              onClick={goToPrevMonth}\r\n              style={{ backgroundColor: '#1677ff' }}\r\n            >\r\n              &larr;\r\n            </Button>\r\n            <Title level={4} style={{ margin: 0 }}>{monthNames[currentMonth]} {currentYear}</Title>\r\n            <Button \r\n              type=\"primary\"\r\n              onClick={goToNextMonth}\r\n              style={{ backgroundColor: '#1677ff' }}\r\n            >\r\n              &rarr;\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Calendar grid */}\r\n          <div style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: 'repeat(7, 1fr)',\r\n            border: '1px solid #f0f0f0',\r\n            backgroundColor: '#f0f0f0',\r\n            gap: '1px',\r\n            fontFamily: 'Menlo, monospace'\r\n          }}>\r\n            {/* Day headers */}\r\n            {dayNames.map(day => (\r\n              <div key={day} style={{ \r\n                backgroundColor: '#f5f5f5',\r\n                padding: '8px',\r\n                textAlign: 'center',\r\n                fontWeight: '500'\r\n              }}>\r\n                {day}\r\n              </div>\r\n            ))}\r\n\r\n            {/* Calendar cells */}\r\n            {Array.from({ length: firstDayOfMonth }).map((_, index) => (\r\n              <div key={`empty-${index}`} style={{ \r\n                backgroundColor: 'white',\r\n                minHeight: '120px',\r\n                padding: '8px'\r\n              }} />\r\n            ))}\r\n\r\n            {Array.from({ length: daysInMonth }).map((_, index) => {\r\n              const day = index + 1;\r\n              const dateString = formatDate(currentYear, currentMonth, day);\r\n              const flights = flightData[dateString] || [];\r\n              const validFlights = flights.length > 0 ? sortSegments(flights) : [];\r\n              const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\r\n              const isSelected = isDateInRange(dateString);\r\n              const isStart = dateString === selectionStart;\r\n              const isEnd = dateString === selectionEnd;\r\n\r\n              return (\r\n                <div\r\n                  key={`day-${day}`}\r\n                  style={{\r\n                    backgroundColor: isSelected ? '#e6f4ff' : 'white',\r\n                    minHeight: '120px',\r\n                    padding: '8px',\r\n                    fontFamily: 'Menlo, monospace',\r\n                    cursor: 'pointer',\r\n                    border: isStart || isEnd ? '2px solid #1890ff' : 'none'\r\n                  }}\r\n                  onClick={() => handleDateClick(dateString)}\r\n                >\r\n                  <div style={{ \r\n                    fontWeight: 'bold', \r\n                    marginBottom: '8px',\r\n                    fontSize: '13px'\r\n                  }}>\r\n                    {day}\r\n                  </div>\r\n                  {showFlights ? (\r\n                    <div style={{ fontSize: '12px' }}>\r\n                      {validFlights.map((segment, idx) => (\r\n                        <div \r\n                          key={idx} \r\n                          style={{ \r\n                            marginBottom: '4px',\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center'\r\n                          }}\r\n                        >\r\n                          <div style={{ \r\n                            fontSize: '14px',\r\n                            fontFamily: 'Menlo, monospace'\r\n                          }}>\r\n                            {segment.route}\r\n                          </div>\r\n                          {renderAvailabilityBadges(segment.route, segment.classes)}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div style={{ \r\n                      textAlign: 'center', \r\n                      color: '#999', \r\n                      fontSize: '12px',\r\n                      marginTop: '32px',\r\n                      fontFamily: 'Menlo, monospace'\r\n                    }}>\r\n                      No flights\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {error && (\r\n            <div style={{ \r\n              color: '#ff4d4f', \r\n              marginTop: '16px',\r\n              textAlign: 'center' \r\n            }}>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ \r\n            marginTop: '16px',\r\n            display: 'flex',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n            gap: '8px'\r\n          }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n              <span>Stopover at</span>\r\n              <Select\r\n                style={{ width: 400 }}\r\n                value={selectedConnection}\r\n                onChange={(value) => {\r\n                  setSelectedConnection(value);\r\n                  if (!value) {\r\n                    setStopoverDays(null);\r\n                  }\r\n                }}\r\n                options={connectionOptions}\r\n                allowClear\r\n                placeholder=\"Select city\"\r\n              />\r\n              {selectedConnection && (\r\n                <>\r\n                  <span>for</span>\r\n                  <InputNumber\r\n                    style={{ width: 60 }}\r\n                    min={1}\r\n                    max={14}\r\n                    value={stopoverDays}\r\n                    onChange={(value) => setStopoverDays(value)}\r\n                    placeholder=\"Days\"\r\n                  />\r\n                  <span>days</span>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div style={{ marginLeft: 'auto', display: 'flex', gap: '8px' }}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => handleSearch(null)}\r\n                disabled={!selectionStart || !selectionEnd || (selectedConnection && !stopoverDays)}\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button\r\n                onClick={() => setShowCalendar(false)}\r\n              >\r\n                Hide Calendar\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <FlightDetailsModal\r\n        isModalOpen={isModalOpen}\r\n        onClose={handleModalClose}\r\n        selectedFlights={selectedFlights}\r\n        pricingData={pricingData}\r\n        currentRoute={currentRoute}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightAvailabilityCalendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}