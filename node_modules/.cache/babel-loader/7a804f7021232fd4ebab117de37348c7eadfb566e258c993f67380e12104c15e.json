{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightAvailabilityCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Typography, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { airports } from './data/airports';\nimport FlightDetailsModal from './FlightDetailsModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst FlightAvailabilityCalendar = ({\n  flightData,\n  currentRoute,\n  onDateRangeSelect,\n  selectedRange,\n  onSearch,\n  selectedFlights,\n  pricingData\n}) => {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Get days in month\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n\n  // Get first day of month (0 = Sunday, 1 = Monday, etc.)\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n\n  // Helper to format date as \"YYYY-MM-DD\"\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n\n  // Previous and next month handlers\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  // Function to render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    // Helper function to get background color based on class code\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y':\n          return '#E8E1F2';\n        case 'J':\n          return '#F3CD87';\n        case 'F':\n          return '#D88A3F';\n        default:\n          return 'transparent';\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2px'\n      },\n      children: Object.entries(classes).map(([classCode, available]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: getBackgroundColor(classCode, available),\n          color: available ? '#684634' : '#999',\n          padding: '0px 4px',\n          borderRadius: '4px',\n          fontSize: '13px',\n          fontFamily: 'Menlo',\n          width: '20px',\n          textAlign: 'center'\n        },\n        children: available ? classCode : '-'\n      }, classCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to check if a segment is valid for the current route\n  const isValidSegment = segment => {\n    const [from, to] = segment.route.split('-');\n\n    // Check if this segment exists as consecutive airports in currentRoute\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return {\n          isValid: true,\n          index: i\n        };\n      }\n    }\n    return {\n      isValid: false,\n      index: -1\n    };\n  };\n\n  // Function to get all required segments for a date\n  const getRequiredSegments = existingSegments => {\n    // Create a map of existing segments for easy lookup\n    const segmentMap = new Map(existingSegments.map(segment => [segment.route, segment]));\n\n    // Generate all required segments\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: {\n          Y: false,\n          J: false,\n          F: false\n        },\n        // Default to all unavailable\n        index: i\n      };\n      allSegments.push(segment);\n    }\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n\n  // Function to sort segments by their position in the route\n  const sortSegments = segments => {\n    const validSegments = segments.map(segment => ({\n      ...segment,\n      ...isValidSegment(segment)\n    })).filter(segment => segment.isValid);\n    return getRequiredSegments(validSegments);\n  };\n\n  // Add function to check if any segment has availability\n  const hasAnyAvailability = segments => {\n    return segments.some(segment => segment.classes.Y || segment.classes.J || segment.classes.F);\n  };\n  const handleDateClick = dateString => {\n    if (!selectionStart) {\n      setSelectionStart(dateString);\n      setSelectionEnd(null);\n      setError('');\n    } else if (!selectionEnd) {\n      const start = dayjs(selectionStart);\n      const end = dayjs(dateString);\n      if (end.isBefore(start)) {\n        setError('End date cannot be before start date');\n        return;\n      }\n      if (end.diff(start, 'days') > 7) {\n        setError('Date range cannot exceed 7 days');\n        return;\n      }\n      setSelectionEnd(dateString);\n      onDateRangeSelect([start, end]);\n    } else {\n      setSelectionStart(dateString);\n      setSelectionEnd(null);\n      setError('');\n    }\n  };\n  const isDateInRange = dateString => {\n    if (!selectionStart || !selectionEnd) return false;\n    const date = dayjs(dateString);\n    const start = dayjs(selectionStart);\n    const end = dayjs(selectionEnd);\n    return date.isAfter(start.subtract(1, 'day')) && date.isBefore(end.add(1, 'day'));\n  };\n\n  // Add a function to handle the Apply button click\n  const handleApplyClick = (stopoverInfo, preserveCalendarData = false, clearSelections = false) => {\n    console.log('handleApplyClick called with:', {\n      stopoverInfo,\n      preserveCalendarData,\n      clearSelections\n    });\n\n    // Make sure the calendar is visible without any race conditions\n    setShowCalendar(true);\n\n    // If there are selected dates, move to the month of the first selected date\n    if (selectedRange && selectedRange[0]) {\n      const selectedDate = dayjs.isDayjs(selectedRange[0]) ? selectedRange[0] : dayjs(selectedRange[0]);\n\n      // Set the current month and year\n      setCurrentMonth(selectedDate.month());\n      setCurrentYear(selectedDate.year());\n      console.log('Moving calendar to:', selectedDate.format('YYYY-MM-DD'));\n      console.log('Month:', selectedDate.month(), 'Year:', selectedDate.year());\n    }\n\n    // Only call onSearch if we're not already showing the calendar\n    // This prevents potential infinite loops\n    if (onSearch && preserveCalendarData) {\n      onSearch(stopoverInfo, preserveCalendarData, clearSelections);\n    }\n  };\n\n  // Get unique connection points from currentRoute with full airport names\n  const connectionOptions = currentRoute.slice(1, -1).map(iata => {\n    const airport = airports.find(a => a.IATA === iata);\n    return {\n      label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\n      value: iata\n    };\n  });\n\n  // Add this function to directly set the calendar to a specific month/year\n  const setCalendarToDate = date => {\n    if (!date) return;\n\n    // Ensure we have a dayjs object\n    const dayjsDate = dayjs.isDayjs(date) ? date : dayjs(date);\n\n    // Log for debugging\n    console.log('Setting calendar to date:', dayjsDate.format('YYYY-MM-DD'));\n    console.log('Month:', dayjsDate.month(), 'Year:', dayjsDate.year());\n\n    // Force update the calendar view\n    setCurrentMonth(dayjsDate.month());\n    setCurrentYear(dayjsDate.year());\n  };\n\n  // Use a ref to track if we've already shown the calendar\n  const calendarShownRef = useRef(false);\n\n  // Update the useEffect to use our new function and prevent infinite updates\n  useEffect(() => {\n    if (selectedRange && selectedRange[0] && !calendarShownRef.current) {\n      const selectedDate = dayjs.isDayjs(selectedRange[0]) ? selectedRange[0] : dayjs(selectedRange[0]);\n      setCurrentMonth(selectedDate.month());\n      setCurrentYear(selectedDate.year());\n\n      // Set the ref before setting the state to prevent loops\n      calendarShownRef.current = true;\n      setShowCalendar(true);\n    }\n  }, [selectedRange]);\n\n  // Modified effect to prevent infinite updates\n  useEffect(() => {\n    if (showCalendar && !calendarShownRef.current) {\n      // Mark that we've shown the calendar\n      calendarShownRef.current = true;\n    } else if (!showCalendar) {\n      // Reset the ref when calendar is hidden\n      calendarShownRef.current = false;\n    }\n  }, [showCalendar]);\n\n  // Update the handleSearch function to also set the calendar month\n  const handleSearch = (stopoverInfo, preserveCalendarData = false, clearSelections = false) => {\n    if (!selectionStart || !selectionEnd) {\n      setError('Please select a date range');\n      return;\n    }\n    if (selectedConnection && !stopoverDays) {\n      setError('Please specify stopover days');\n      return;\n    }\n    setError('');\n\n    // Set the calendar to the first selected date\n    setCalendarToDate(selectionStart);\n\n    // Create stopover info object if a connection is selected\n    const stopoverInfoObj = selectedConnection ? {\n      airport: selectedConnection,\n      days: stopoverDays\n    } : null;\n    console.log('Search with date range:', {\n      start: selectionStart,\n      end: selectionEnd,\n      stopover: stopoverInfoObj\n    });\n\n    // Pass the selected date range to the parent component\n    onDateRangeSelect([selectionStart, selectionEnd]);\n\n    // Call the search function with stopover info and clear selections flag\n    if (onSearch) {\n      onSearch(stopoverInfoObj, true, true); // Add flag to clear flight selections\n    }\n  };\n\n  // Add an effect to handle when the component receives new data\n  useEffect(() => {\n    if (flightData && flightData.length > 0) {\n      var _flightData$;\n      // Find the first date with data\n      const firstDateWithData = Object.keys(((_flightData$ = flightData[0]) === null || _flightData$ === void 0 ? void 0 : _flightData$.dates) || {}).sort().find(date => {\n        var _flightData$0$dates$d;\n        return ((_flightData$0$dates$d = flightData[0].dates[date]) === null || _flightData$0$dates$d === void 0 ? void 0 : _flightData$0$dates$d.length) > 0;\n      });\n      if (firstDateWithData) {\n        setCalendarToDate(firstDateWithData);\n      }\n    }\n  }, [flightData]);\n\n  // Clear function to reset stopover selections\n  const clearStopoverSelections = () => {\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Handle modal close\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    clearStopoverSelections();\n  };\n\n  // Add a function to clear stopover information\n  const clearStopoverInfo = () => {\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Add a function to hide the calendar\n  const hideCalendar = () => {\n    setShowCalendar(false);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setError('');\n  };\n\n  // Expose the functions globally \n  // We're intentionally not including dependencies in this array\n  // because we want these functions to be defined only once\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    // Create stable function references that won't change on re-renders\n    const showCalendarFn = () => {\n      if (!calendarShownRef.current) {\n        calendarShownRef.current = true;\n        setShowCalendar(true);\n      }\n    };\n    window.showCalendar = showCalendarFn;\n    window.clearStopoverInfo = clearStopoverInfo;\n    window.hideCalendar = hideCalendar;\n\n    // Cleanup on unmount\n    return () => {\n      delete window.clearStopoverInfo;\n      delete window.hideCalendar;\n      delete window.showCalendar;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!showCalendar && /*#__PURE__*/_jsxDEV(Button, {\n      className: \"force-show-calendar\",\n      onClick: e => {\n        // Prevent event propagation\n        e.stopPropagation();\n\n        // Use the ref to track state and prevent infinite updates\n        if (!calendarShownRef.current) {\n          calendarShownRef.current = true;\n          setShowCalendar(true);\n        }\n      },\n      children: \"Show Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this), showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToPrevMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 4,\n          style: {\n            margin: 0\n          },\n          children: [monthNames[currentMonth], \" \", currentYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToNextMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          border: '1px solid #f0f0f0',\n          backgroundColor: '#f0f0f0',\n          gap: '1px',\n          fontFamily: 'Menlo, monospace'\n        },\n        children: [dayNames.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '8px',\n            textAlign: 'center',\n            fontWeight: '500'\n          },\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: firstDayOfMonth\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            minHeight: '120px',\n            padding: '8px'\n          }\n        }, `empty-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: daysInMonth\n        }).map((_, index) => {\n          const day = index + 1;\n          const dateString = formatDate(currentYear, currentMonth, day);\n          const flights = flightData[dateString] || [];\n          const validFlights = flights.length > 0 ? sortSegments(flights) : [];\n          const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\n          const isSelected = isDateInRange(dateString);\n          const isStart = dateString === selectionStart;\n          const isEnd = dateString === selectionEnd;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: isSelected ? '#e6f4ff' : 'white',\n              minHeight: '120px',\n              padding: '8px',\n              fontFamily: 'Menlo, monospace',\n              cursor: 'pointer',\n              border: isStart || isEnd ? '2px solid #1890ff' : 'none'\n            },\n            onClick: () => handleDateClick(dateString),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '8px',\n                fontSize: '13px'\n              },\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this), showFlights ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px'\n              },\n              children: validFlights.map((segment, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '4px',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '14px',\n                    fontFamily: 'Menlo, monospace'\n                  },\n                  children: segment.route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 27\n                }, this), renderAvailabilityBadges(segment.route, segment.classes)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                color: '#999',\n                fontSize: '12px',\n                marginTop: '32px',\n                fontFamily: 'Menlo, monospace'\n              },\n              children: \"No flights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 21\n            }, this)]\n          }, `day-${day}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#ff4d4f',\n          marginTop: '16px',\n          textAlign: 'center'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '16px',\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stopover at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: 400\n            },\n            value: selectedConnection,\n            onChange: value => {\n              setSelectedConnection(value);\n              if (!value) {\n                setStopoverDays(null);\n              }\n            },\n            options: connectionOptions,\n            allowClear: true,\n            placeholder: \"Select city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), selectedConnection && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n              style: {\n                width: 60\n              },\n              min: 1,\n              max: 14,\n              value: stopoverDays,\n              onChange: value => setStopoverDays(value),\n              placeholder: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto',\n            display: 'flex',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleSearch(null),\n            disabled: !selectionStart || !selectionEnd || selectedConnection && !stopoverDays,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowCalendar(false),\n            children: \"Hide Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FlightDetailsModal, {\n      isModalOpen: isModalOpen,\n      onClose: handleModalClose,\n      selectedFlights: selectedFlights,\n      pricingData: pricingData,\n      currentRoute: currentRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightAvailabilityCalendar, \"KkLgq95ifFZyHAA/eC7zPddtiFs=\");\n_c = FlightAvailabilityCalendar;\nexport default FlightAvailabilityCalendar;\nvar _c;\n$RefreshReg$(_c, \"FlightAvailabilityCalendar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Typography","Select","InputNumber","dayjs","airports","FlightDetailsModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","FlightAvailabilityCalendar","flightData","currentRoute","onDateRangeSelect","selectedRange","onSearch","selectedFlights","pricingData","_s","currentMonth","setCurrentMonth","month","currentYear","setCurrentYear","year","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","error","setError","showCalendar","setShowCalendar","selectedConnection","setSelectedConnection","stopoverDays","setStopoverDays","isModalOpen","setIsModalOpen","getDaysInMonth","daysInMonth","getFirstDayOfMonth","day","formatDate","format","firstDayOfMonth","goToPrevMonth","goToNextMonth","monthNames","dayNames","renderAvailabilityBadges","route","classes","getBackgroundColor","classCode","available","style","display","gap","children","Object","entries","map","backgroundColor","color","padding","borderRadius","fontSize","fontFamily","width","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","isValidSegment","segment","from","to","split","i","length","isValid","index","getRequiredSegments","existingSegments","segmentMap","Map","allSegments","get","Y","J","F","push","sort","a","b","sortSegments","segments","validSegments","filter","hasAnyAvailability","some","handleDateClick","dateString","start","end","isBefore","diff","isDateInRange","date","isAfter","subtract","add","handleApplyClick","stopoverInfo","preserveCalendarData","clearSelections","console","log","selectedDate","isDayjs","connectionOptions","slice","iata","airport","find","IATA","label","Name","value","setCalendarToDate","dayjsDate","calendarShownRef","current","handleSearch","stopoverInfoObj","days","stopover","_flightData$","firstDateWithData","keys","dates","_flightData$0$dates$d","clearStopoverSelections","handleModalClose","clearStopoverInfo","hideCalendar","showCalendarFn","window","className","onClick","e","stopPropagation","justifyContent","alignItems","marginBottom","type","level","margin","gridTemplateColumns","border","fontWeight","Array","_","minHeight","flights","validFlights","showFlights","isSelected","isStart","isEnd","cursor","idx","marginTop","onChange","options","allowClear","placeholder","min","max","marginLeft","disabled","onClose","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightAvailabilityCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Typography, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { airports } from './data/airports';\nimport FlightDetailsModal from './FlightDetailsModal';\n\nconst { Title } = Typography;\n\nconst FlightAvailabilityCalendar = ({ flightData, currentRoute, onDateRangeSelect, selectedRange, onSearch, selectedFlights, pricingData }) => {\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Get days in month\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n\n  // Get first day of month (0 = Sunday, 1 = Monday, etc.)\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n\n  // Helper to format date as \"YYYY-MM-DD\"\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n\n  // Previous and next month handlers\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  // Function to render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    // Helper function to get background color based on class code\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y': return '#E8E1F2';\n        case 'J': return '#F3CD87';\n        case 'F': return '#D88A3F';\n        default: return 'transparent';\n      }\n    };\n\n    return (\n      <div style={{ display: 'flex', gap: '2px' }}>\n        {Object.entries(classes).map(([classCode, available]) => (\n          <div\n            key={classCode}\n            style={{\n              backgroundColor: getBackgroundColor(classCode, available),\n              color: available ? '#684634' : '#999',\n              padding: '0px 4px',\n              borderRadius: '4px',\n              fontSize: '13px',\n              fontFamily: 'Menlo',\n              width: '20px',\n              textAlign: 'center'\n            }}\n          >\n            {available ? classCode : '-'}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // Function to check if a segment is valid for the current route\n  const isValidSegment = (segment) => {\n    const [from, to] = segment.route.split('-');\n    \n    // Check if this segment exists as consecutive airports in currentRoute\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return { isValid: true, index: i };\n      }\n    }\n    return { isValid: false, index: -1 };\n  };\n\n  // Function to get all required segments for a date\n  const getRequiredSegments = (existingSegments) => {\n    // Create a map of existing segments for easy lookup\n    const segmentMap = new Map(\n      existingSegments.map(segment => [segment.route, segment])\n    );\n\n    // Generate all required segments\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: { Y: false, J: false, F: false }, // Default to all unavailable\n        index: i\n      };\n      allSegments.push(segment);\n    }\n\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n\n  // Function to sort segments by their position in the route\n  const sortSegments = (segments) => {\n    const validSegments = segments\n      .map(segment => ({\n        ...segment,\n        ...isValidSegment(segment)\n      }))\n      .filter(segment => segment.isValid);\n\n    return getRequiredSegments(validSegments);\n  };\n\n  // Add function to check if any segment has availability\n  const hasAnyAvailability = (segments) => {\n    return segments.some(segment => \n      segment.classes.Y || segment.classes.J || segment.classes.F\n    );\n  };\n\n  const handleDateClick = (dateString) => {\n    if (!selectionStart) {\n      setSelectionStart(dateString);\n      setSelectionEnd(null);\n      setError('');\n    } else if (!selectionEnd) {\n      const start = dayjs(selectionStart);\n      const end = dayjs(dateString);\n      \n      if (end.isBefore(start)) {\n        setError('End date cannot be before start date');\n        return;\n      }\n      \n      if (end.diff(start, 'days') > 7) {\n        setError('Date range cannot exceed 7 days');\n        return;\n      }\n\n      setSelectionEnd(dateString);\n      onDateRangeSelect([start, end]);\n    } else {\n      setSelectionStart(dateString);\n      setSelectionEnd(null);\n      setError('');\n    }\n  };\n\n  const isDateInRange = (dateString) => {\n    if (!selectionStart || !selectionEnd) return false;\n    const date = dayjs(dateString);\n    const start = dayjs(selectionStart);\n    const end = dayjs(selectionEnd);\n    return date.isAfter(start.subtract(1, 'day')) && \n           date.isBefore(end.add(1, 'day'));\n  };\n\n  // Add a function to handle the Apply button click\n  const handleApplyClick = (stopoverInfo, preserveCalendarData = false, clearSelections = false) => {\n    console.log('handleApplyClick called with:', { stopoverInfo, preserveCalendarData, clearSelections });\n    \n    // Make sure the calendar is visible without any race conditions\n    setShowCalendar(true);\n    \n    // If there are selected dates, move to the month of the first selected date\n    if (selectedRange && selectedRange[0]) {\n      const selectedDate = dayjs.isDayjs(selectedRange[0]) \n        ? selectedRange[0] \n        : dayjs(selectedRange[0]);\n      \n      // Set the current month and year\n      setCurrentMonth(selectedDate.month());\n      setCurrentYear(selectedDate.year());\n      \n      console.log('Moving calendar to:', selectedDate.format('YYYY-MM-DD'));\n      console.log('Month:', selectedDate.month(), 'Year:', selectedDate.year());\n    }\n    \n    // Only call onSearch if we're not already showing the calendar\n    // This prevents potential infinite loops\n    if (onSearch && preserveCalendarData) {\n      onSearch(stopoverInfo, preserveCalendarData, clearSelections);\n    }\n  };\n\n  // Get unique connection points from currentRoute with full airport names\n  const connectionOptions = currentRoute\n    .slice(1, -1)\n    .map(iata => {\n      const airport = airports.find(a => a.IATA === iata);\n      return {\n        label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\n        value: iata\n      };\n    });\n\n  // Add this function to directly set the calendar to a specific month/year\n  const setCalendarToDate = (date) => {\n    if (!date) return;\n    \n    // Ensure we have a dayjs object\n    const dayjsDate = dayjs.isDayjs(date) ? date : dayjs(date);\n    \n    // Log for debugging\n    console.log('Setting calendar to date:', dayjsDate.format('YYYY-MM-DD'));\n    console.log('Month:', dayjsDate.month(), 'Year:', dayjsDate.year());\n    \n    // Force update the calendar view\n    setCurrentMonth(dayjsDate.month());\n    setCurrentYear(dayjsDate.year());\n  };\n\n  // Use a ref to track if we've already shown the calendar\n  const calendarShownRef = useRef(false);\n  \n  // Update the useEffect to use our new function and prevent infinite updates\n  useEffect(() => {\n    if (selectedRange && selectedRange[0] && !calendarShownRef.current) {\n      const selectedDate = dayjs.isDayjs(selectedRange[0]) \n        ? selectedRange[0] \n        : dayjs(selectedRange[0]);\n      \n      setCurrentMonth(selectedDate.month());\n      setCurrentYear(selectedDate.year());\n      \n      // Set the ref before setting the state to prevent loops\n      calendarShownRef.current = true;\n      setShowCalendar(true);\n    }\n  }, [selectedRange]);\n  \n  // Modified effect to prevent infinite updates\n  useEffect(() => {\n    if (showCalendar && !calendarShownRef.current) {\n      // Mark that we've shown the calendar\n      calendarShownRef.current = true;\n    } else if (!showCalendar) {\n      // Reset the ref when calendar is hidden\n      calendarShownRef.current = false;\n    }\n  }, [showCalendar]);\n\n  // Update the handleSearch function to also set the calendar month\n  const handleSearch = (stopoverInfo, preserveCalendarData = false, clearSelections = false) => {\n    if (!selectionStart || !selectionEnd) {\n      setError('Please select a date range');\n      return;\n    }\n    \n    if (selectedConnection && !stopoverDays) {\n      setError('Please specify stopover days');\n      return;\n    }\n    \n    setError('');\n    \n    // Set the calendar to the first selected date\n    setCalendarToDate(selectionStart);\n    \n    // Create stopover info object if a connection is selected\n    const stopoverInfoObj = selectedConnection ? {\n      airport: selectedConnection,\n      days: stopoverDays\n    } : null;\n    \n    console.log('Search with date range:', {\n      start: selectionStart,\n      end: selectionEnd,\n      stopover: stopoverInfoObj\n    });\n    \n    // Pass the selected date range to the parent component\n    onDateRangeSelect([selectionStart, selectionEnd]);\n    \n    // Call the search function with stopover info and clear selections flag\n    if (onSearch) {\n      onSearch(stopoverInfoObj, true, true); // Add flag to clear flight selections\n    }\n  };\n\n  // Add an effect to handle when the component receives new data\n  useEffect(() => {\n    if (flightData && flightData.length > 0) {\n      // Find the first date with data\n      const firstDateWithData = Object.keys(flightData[0]?.dates || {})\n        .sort()\n        .find(date => flightData[0].dates[date]?.length > 0);\n        \n      if (firstDateWithData) {\n        setCalendarToDate(firstDateWithData);\n      }\n    }\n  }, [flightData]);\n\n  // Clear function to reset stopover selections\n  const clearStopoverSelections = () => {\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Handle modal close\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    clearStopoverSelections();\n  };\n\n  // Add a function to clear stopover information\n  const clearStopoverInfo = () => {\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n  \n  // Add a function to hide the calendar\n  const hideCalendar = () => {\n    setShowCalendar(false);\n    setSelectionStart(null);\n    setSelectionEnd(null);\n    setError('');\n  };\n  \n  // Expose the functions globally \n  // We're intentionally not including dependencies in this array\n  // because we want these functions to be defined only once\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    // Create stable function references that won't change on re-renders\n    const showCalendarFn = () => {\n      if (!calendarShownRef.current) {\n        calendarShownRef.current = true;\n        setShowCalendar(true);\n      }\n    };\n    \n    window.showCalendar = showCalendarFn;\n    window.clearStopoverInfo = clearStopoverInfo;\n    window.hideCalendar = hideCalendar;\n    \n    // Cleanup on unmount\n    return () => {\n      delete window.clearStopoverInfo;\n      delete window.hideCalendar;\n      delete window.showCalendar;\n    };\n  }, []);\n\n  return (\n    <div>\n      {!showCalendar && (\n        <Button \n          className=\"force-show-calendar\"\n          onClick={(e) => {\n            // Prevent event propagation\n            e.stopPropagation();\n            \n            // Use the ref to track state and prevent infinite updates\n            if (!calendarShownRef.current) {\n              calendarShownRef.current = true;\n              setShowCalendar(true);\n            }\n          }}\n        >\n          Show Calendar\n        </Button>\n      )}\n      \n      {showCalendar && (\n        <div style={{ padding: '20px' }}>\n          {/* Calendar header */}\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center', \n            marginBottom: '20px' \n          }}>\n            <Button \n              type=\"primary\"\n              onClick={goToPrevMonth}\n              style={{ backgroundColor: '#1677ff' }}\n            >\n              &larr;\n            </Button>\n            <Title level={4} style={{ margin: 0 }}>{monthNames[currentMonth]} {currentYear}</Title>\n            <Button \n              type=\"primary\"\n              onClick={goToNextMonth}\n              style={{ backgroundColor: '#1677ff' }}\n            >\n              &rarr;\n            </Button>\n          </div>\n\n          {/* Calendar grid */}\n          <div style={{ \n            display: 'grid', \n            gridTemplateColumns: 'repeat(7, 1fr)',\n            border: '1px solid #f0f0f0',\n            backgroundColor: '#f0f0f0',\n            gap: '1px',\n            fontFamily: 'Menlo, monospace'\n          }}>\n            {/* Day headers */}\n            {dayNames.map(day => (\n              <div key={day} style={{ \n                backgroundColor: '#f5f5f5',\n                padding: '8px',\n                textAlign: 'center',\n                fontWeight: '500'\n              }}>\n                {day}\n              </div>\n            ))}\n\n            {/* Calendar cells */}\n            {Array.from({ length: firstDayOfMonth }).map((_, index) => (\n              <div key={`empty-${index}`} style={{ \n                backgroundColor: 'white',\n                minHeight: '120px',\n                padding: '8px'\n              }} />\n            ))}\n\n            {Array.from({ length: daysInMonth }).map((_, index) => {\n              const day = index + 1;\n              const dateString = formatDate(currentYear, currentMonth, day);\n              const flights = flightData[dateString] || [];\n              const validFlights = flights.length > 0 ? sortSegments(flights) : [];\n              const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\n              const isSelected = isDateInRange(dateString);\n              const isStart = dateString === selectionStart;\n              const isEnd = dateString === selectionEnd;\n\n              return (\n                <div\n                  key={`day-${day}`}\n                  style={{\n                    backgroundColor: isSelected ? '#e6f4ff' : 'white',\n                    minHeight: '120px',\n                    padding: '8px',\n                    fontFamily: 'Menlo, monospace',\n                    cursor: 'pointer',\n                    border: isStart || isEnd ? '2px solid #1890ff' : 'none'\n                  }}\n                  onClick={() => handleDateClick(dateString)}\n                >\n                  <div style={{ \n                    fontWeight: 'bold', \n                    marginBottom: '8px',\n                    fontSize: '13px'\n                  }}>\n                    {day}\n                  </div>\n                  {showFlights ? (\n                    <div style={{ fontSize: '12px' }}>\n                      {validFlights.map((segment, idx) => (\n                        <div \n                          key={idx} \n                          style={{ \n                            marginBottom: '4px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center'\n                          }}\n                        >\n                          <div style={{ \n                            fontSize: '14px',\n                            fontFamily: 'Menlo, monospace'\n                          }}>\n                            {segment.route}\n                          </div>\n                          {renderAvailabilityBadges(segment.route, segment.classes)}\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div style={{ \n                      textAlign: 'center', \n                      color: '#999', \n                      fontSize: '12px',\n                      marginTop: '32px',\n                      fontFamily: 'Menlo, monospace'\n                    }}>\n                      No flights\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n\n          {error && (\n            <div style={{ \n              color: '#ff4d4f', \n              marginTop: '16px',\n              textAlign: 'center' \n            }}>\n              {error}\n            </div>\n          )}\n\n          <div style={{ \n            marginTop: '16px',\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            gap: '8px'\n          }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n              <span>Stopover at</span>\n              <Select\n                style={{ width: 400 }}\n                value={selectedConnection}\n                onChange={(value) => {\n                  setSelectedConnection(value);\n                  if (!value) {\n                    setStopoverDays(null);\n                  }\n                }}\n                options={connectionOptions}\n                allowClear\n                placeholder=\"Select city\"\n              />\n              {selectedConnection && (\n                <>\n                  <span>for</span>\n                  <InputNumber\n                    style={{ width: 60 }}\n                    min={1}\n                    max={14}\n                    value={stopoverDays}\n                    onChange={(value) => setStopoverDays(value)}\n                    placeholder=\"Days\"\n                  />\n                  <span>days</span>\n                </>\n              )}\n            </div>\n            <div style={{ marginLeft: 'auto', display: 'flex', gap: '8px' }}>\n              <Button\n                type=\"primary\"\n                onClick={() => handleSearch(null)}\n                disabled={!selectionStart || !selectionEnd || (selectedConnection && !stopoverDays)}\n              >\n                Search\n              </Button>\n              <Button\n                onClick={() => setShowCalendar(false)}\n              >\n                Hide Calendar\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <FlightDetailsModal\n        isModalOpen={isModalOpen}\n        onClose={handleModalClose}\n        selectedFlights={selectedFlights}\n        pricingData={pricingData}\n        currentRoute={currentRoute}\n      />\n    </div>\n  );\n};\n\nexport default FlightAvailabilityCalendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}