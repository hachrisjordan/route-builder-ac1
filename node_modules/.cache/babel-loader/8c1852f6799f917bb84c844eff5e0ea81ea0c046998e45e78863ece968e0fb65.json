{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst FlightDetailsModal = ({\n  isModalOpen,\n  onClose,\n  selectedFlights = {},\n  pricingData = [],\n  currentRoute,\n  startDay\n}) => {\n  _s();\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    availabilityData,\n    isLoadingAvailability\n  } = useFlightDetails(getSegmentColumns, startDay);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isModalOpen) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isModalOpen]);\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n  const handleCancel = () => {\n    if (onClose) {\n      onClose(); // This will trigger handleModalClose in parent which clears the fields\n    }\n  };\n  const handleCalendarDateSelect = dateRange => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  // Function to group flights by segment with safety checks\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    // Group flights by segment and filter out hidden flights\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc; // Skip hidden flights\n\n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n    return Object.values(segments);\n  };\n\n  // Add pagination settings\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n\n  // Add null checks for selectedFlights\n  const segments = selectedFlights ? Object.keys(selectedFlights).map(Number).sort((a, b) => a - b) : [];\n\n  // Add null checks in the dataSource calculation\n  const dataSource = (() => {\n    try {\n      if (!selectedFlights || !segments || segments.length === 0) return [];\n      const firstSegmentIndex = Math.min(...segments);\n      const lastSegmentIndex = Math.max(...segments);\n\n      // Find stopover point\n      let stopoverIndex = null;\n      for (let i = firstSegmentIndex; i < lastSegmentIndex; i++) {\n        var _selectedFlights$i, _selectedFlights;\n        const currentFlight = (_selectedFlights$i = selectedFlights[i]) === null || _selectedFlights$i === void 0 ? void 0 : _selectedFlights$i[0];\n        const nextFlight = (_selectedFlights = selectedFlights[i + 1]) === null || _selectedFlights === void 0 ? void 0 : _selectedFlights[0];\n        if (currentFlight && nextFlight) {\n          const arrivalTime = dayjs(currentFlight.ArrivesAt);\n          const departureTime = dayjs(nextFlight.DepartsAt);\n          const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n          if (layoverMinutes >= 24 * 60) {\n            stopoverIndex = i;\n            break;\n          }\n        }\n      }\n\n      // Calculate prices with null checks\n      const calculatePrices = hasStopover => {\n        try {\n          if (!selectedFlights || Object.keys(selectedFlights).length === 0) {\n            return {\n              economyPrice: '-',\n              businessPrice: '-',\n              firstPrice: '-'\n            };\n          }\n          // ... rest of price calculation ...\n        } catch (error) {\n          console.error('Error calculating prices:', error);\n          return {\n            economyPrice: '-',\n            businessPrice: '-',\n            firstPrice: '-'\n          };\n        }\n      };\n\n      // Return data with null checks\n      return segments.map(segmentIndex => {\n        var _selectedFlights$segm, _selectedFlights$segm2, _selectedFlights$segm3, _selectedFlights$segm4, _selectedFlights$segm5, _selectedFlights$segm6, _selectedFlights$segm7, _selectedFlights$segm8, _selectedFlights$segm9, _selectedFlights$segm10, _selectedFlights$segm11;\n        return {\n          key: segmentIndex,\n          from: ((_selectedFlights$segm = selectedFlights[segmentIndex]) === null || _selectedFlights$segm === void 0 ? void 0 : (_selectedFlights$segm2 = _selectedFlights$segm[0]) === null || _selectedFlights$segm2 === void 0 ? void 0 : _selectedFlights$segm2.from) || '-',\n          to: ((_selectedFlights$segm3 = selectedFlights[segmentIndex]) === null || _selectedFlights$segm3 === void 0 ? void 0 : (_selectedFlights$segm4 = _selectedFlights$segm3[0]) === null || _selectedFlights$segm4 === void 0 ? void 0 : _selectedFlights$segm4.to) || '-',\n          airlines: ((_selectedFlights$segm5 = selectedFlights[segmentIndex]) === null || _selectedFlights$segm5 === void 0 ? void 0 : _selectedFlights$segm5.map(f => f.airlines).filter(Boolean).join(', ')) || '-',\n          duration: ((_selectedFlights$segm6 = selectedFlights[segmentIndex]) === null || _selectedFlights$segm6 === void 0 ? void 0 : (_selectedFlights$segm7 = _selectedFlights$segm6[0]) === null || _selectedFlights$segm7 === void 0 ? void 0 : _selectedFlights$segm7.duration) || '-',\n          departs: (_selectedFlights$segm8 = selectedFlights[segmentIndex]) !== null && _selectedFlights$segm8 !== void 0 && (_selectedFlights$segm9 = _selectedFlights$segm8[0]) !== null && _selectedFlights$segm9 !== void 0 && _selectedFlights$segm9.DepartsAt ? dayjs(selectedFlights[segmentIndex][0].DepartsAt).format('HH:mm MM-DD') : '-',\n          arrives: (_selectedFlights$segm10 = selectedFlights[segmentIndex]) !== null && _selectedFlights$segm10 !== void 0 && (_selectedFlights$segm11 = _selectedFlights$segm10[0]) !== null && _selectedFlights$segm11 !== void 0 && _selectedFlights$segm11.ArrivesAt ? dayjs(selectedFlights[segmentIndex][0].ArrivesAt).format('HH:mm MM-DD') : '-'\n        };\n      });\n    } catch (error) {\n      console.error('Error generating dataSource:', error);\n      return [];\n    }\n  })();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Flight Details\",\n    open: isModalOpen,\n    onCancel: handleCancel,\n    footer: null,\n    width: 1600,\n    styles: {\n      body: {\n        padding: '12px',\n        maxHeight: '90vh',\n        overflow: 'auto'\n      },\n      content: {\n        maxWidth: '100vw'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          marginBottom: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your yapping password (Under Development)\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            disabled: !apiKey || !apiKey.toLowerCase().startsWith('pro'),\n            onClick: () => handleCalendarSearch(currentRoute),\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), dateRangeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Please select a date range in the calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightAvailabilityCalendar, {\n      flightData: availabilityData,\n      currentRoute: currentRoute,\n      onDateRangeSelect: handleCalendarDateSelect,\n      selectedRange: selectedDates,\n      onSearch: handleCalendarSearchClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), isLoadingSegments ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this) : (segmentDetails === null || segmentDetails === void 0 ? void 0 : segmentDetails.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        style: {\n          marginBottom: 16\n        },\n        children: \"Flights By Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this), getSegmentTables().map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n            level: 5,\n            style: {\n              margin: 0\n            },\n            children: [\"Segment \", segment.index + 1, \" (\", segment.route, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              size: \"small\",\n              total: segment.flights.length,\n              pageSize: paginationConfig.pageSize,\n              showSizeChanger: true,\n              showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n              style: {\n                display: 'inline-block',\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: segment.flights,\n          pagination: {\n            total: segment.flights.length,\n            pageSize: 5,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n            pageSizeOptions: ['5', '10', '20', '50']\n          },\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this), index < getSegmentTables().length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '0px',\n            margin: '16px',\n            textAlign: 'center',\n            fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n            strong: true,\n            children: (() => {\n              const currentSegmentFlights = selectedFlights[segment.index];\n              const nextSegmentFlights = selectedFlights[segment.index + 1];\n              if (!(currentSegmentFlights !== null && currentSegmentFlights !== void 0 && currentSegmentFlights[0]) || !(nextSegmentFlights !== null && nextSegmentFlights !== void 0 && nextSegmentFlights[0])) {\n                return 'Select flights to see connection time';\n              }\n              const currentFlight = currentSegmentFlights[0];\n              const nextFlight = nextSegmentFlights[0];\n              const arrivalTime = dayjs(currentFlight.ArrivesAt);\n              const departureTime = dayjs(nextFlight.DepartsAt);\n              const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n\n              // If layover is more than 24 hours, show as stopover\n              if (layoverMinutes >= 24 * 60) {\n                const days = Math.floor(layoverMinutes / (24 * 60));\n                const remainingHours = Math.floor(layoverMinutes % (24 * 60) / 60);\n                const remainingMinutes = layoverMinutes % 60;\n                return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n              } else {\n                // Regular layover display\n                const hours = Math.floor(layoverMinutes / 60);\n                const minutes = layoverMinutes % 60;\n                return `Layover duration: ${hours}h ${minutes}m`;\n              }\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }, this)]\n      }, segment.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }, this), Object.keys(selectedFlights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: \"Journey Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: [{\n          title: 'From',\n          dataIndex: 'from',\n          key: 'from'\n        }, {\n          title: 'To',\n          dataIndex: 'to',\n          key: 'to'\n        }, {\n          title: 'Airlines',\n          dataIndex: 'airlines',\n          key: 'airlines',\n          render: airlinesList => {\n            // More thorough safety checks\n            if (!airlinesList || airlinesList === '-') return '-';\n            try {\n              const airlineArray = Array.isArray(airlinesList) ? airlinesList : airlinesList.split(', ');\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '4px'\n                },\n                children: airlineArray.map((airlineName, index) => {\n                  if (!airlineName) return null;\n                  const airline = airlines.find(a => {\n                    var _a$label;\n                    return airlineName.startsWith((_a$label = a.label) === null || _a$label === void 0 ? void 0 : _a$label.replace(` (${a.value})`, ''));\n                  });\n                  const airlineCode = airline === null || airline === void 0 ? void 0 : airline.value;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '8px'\n                    },\n                    children: [airlineCode && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `${process.env.PUBLIC_URL}/${airlineCode}.png`,\n                      alt: airlineCode,\n                      style: {\n                        width: '24px',\n                        height: '24px',\n                        objectFit: 'contain',\n                        borderRadius: '4px'\n                      },\n                      onError: e => {\n                        e.target.style.display = 'none';\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 33\n                    }, this), airlineName]\n                  }, `${airlineCode}-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this);\n            } catch (error) {\n              console.error('Error rendering airlines:', error);\n              return '-';\n            }\n          }\n        }, {\n          title: 'Duration',\n          dataIndex: 'duration',\n          key: 'duration'\n        }, {\n          title: 'Departs',\n          dataIndex: 'departs',\n          key: 'departs'\n        }, {\n          title: 'Arrives',\n          dataIndex: 'arrives',\n          key: 'arrives'\n        }, {\n          title: 'Economy Price',\n          dataIndex: 'economyPrice',\n          key: 'economyPrice',\n          onCell: (_, index) => ({\n            rowSpan: index === 0 ? 2 : 0 // Show only in first row\n          })\n        }, {\n          title: 'Business Price (Max %)',\n          dataIndex: 'businessPrice',\n          key: 'businessPrice',\n          onCell: (_, index) => ({\n            rowSpan: index === 0 ? 2 : 0 // Show only in first row\n          }),\n          render: text => {\n            if (!text || text === 'N/A') return text;\n            try {\n              const [price, percentage] = text.split(' (');\n              if (!percentage) return text;\n              return `${price} (${percentage}`;\n            } catch (error) {\n              return text;\n            }\n          }\n        }, {\n          title: 'First Price (Max %)',\n          dataIndex: 'firstPrice',\n          key: 'firstPrice',\n          onCell: (_, index) => ({\n            rowSpan: index === 0 ? 2 : 0 // Show only in first row\n          }),\n          render: text => {\n            if (!text || text === 'N/A') return text;\n            try {\n              const [price, percentage] = text.split(' (');\n              if (!percentage) return text;\n              return `${price} (${percentage}`;\n            } catch (error) {\n              return text;\n            }\n          }\n        }],\n        dataSource: dataSource,\n        pagination: false,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n          children: (() => {\n            const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n            const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n            const originAirport = airports.find(a => {\n              var _selectedFlights$firs, _selectedFlights$firs2;\n              return a.IATA === ((_selectedFlights$firs = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs === void 0 ? void 0 : (_selectedFlights$firs2 = _selectedFlights$firs[0]) === null || _selectedFlights$firs2 === void 0 ? void 0 : _selectedFlights$firs2.from);\n            });\n            const destAirport = airports.find(a => {\n              var _selectedFlights$last, _selectedFlights$last2;\n              return a.IATA === ((_selectedFlights$last = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last === void 0 ? void 0 : (_selectedFlights$last2 = _selectedFlights$last[0]) === null || _selectedFlights$last2 === void 0 ? void 0 : _selectedFlights$last2.to);\n            });\n            if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n            // Haversine formula\n            const R = 3959; // Earth's radius in miles\n            const lat1 = originAirport.Latitude * Math.PI / 180;\n            const lat2 = destAirport.Latitude * Math.PI / 180;\n            const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n            const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n            const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            const directDistance = Math.round(R * c);\n\n            // Calculate total segment distance\n            let totalSegmentDistance = 0;\n            Object.values(selectedFlights).forEach(flights => {\n              flights.forEach(flight => {\n                totalSegmentDistance += parseInt(flight.distance || 0);\n              });\n            });\n            const isValid = totalSegmentDistance <= 2 * directDistance;\n            const percentage = Math.round(totalSegmentDistance / directDistance * 100);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8,\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  color: isValid ? '#52c41a' : '#f5222d',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '8px',\n                  width: '100%'\n                },\n                children: isValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"ROUTING VALIDATED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2717\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"THIS ROUTING IS INVALID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetailsModal, \"xE6Fpkd6JutPAY6dIHMG0UN4oyM=\", false, function () {\n  return [useFlightDetails];\n});\n_c = FlightDetailsModal;\nexport default FlightDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"FlightDetailsModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","DatePicker","Input","Spin","Table","Button","Typography","Pagination","dayjs","getSegmentColumns","useFlightDetails","FlightAvailabilityCalendar","airlines","airports","pricingData","jsxDEV","_jsxDEV","Fragment","_Fragment","RangePicker","FlightDetailsModal","isModalOpen","onClose","selectedFlights","currentRoute","startDay","_s","dateRangeError","setDateRangeError","selectedDates","setSelectedDates","apiKey","setApiKey","segmentDetails","isLoadingSegments","handleDateSearch","handleCalendarSearch","resetDetails","columns","availabilityData","isLoadingAvailability","handleOk","handleCancel","handleCalendarDateSelect","dateRange","handleCalendarSearchClick","startDate","endDate","stopoverInfo","console","log","JSON","stringify","getSegmentTables","length","segments","reduce","acc","flight","hidden","segmentIndex","index","route","from","to","flights","push","Object","values","paginationConfig","pageSize","showSizeChanger","showTotal","total","range","pageSizeOptions","position","keys","map","Number","sort","a","b","dataSource","firstSegmentIndex","Math","min","lastSegmentIndex","max","stopoverIndex","i","_selectedFlights$i","_selectedFlights","currentFlight","nextFlight","arrivalTime","ArrivesAt","departureTime","DepartsAt","layoverMinutes","diff","calculatePrices","hasStopover","economyPrice","businessPrice","firstPrice","error","_selectedFlights$segm","_selectedFlights$segm2","_selectedFlights$segm3","_selectedFlights$segm4","_selectedFlights$segm5","_selectedFlights$segm6","_selectedFlights$segm7","_selectedFlights$segm8","_selectedFlights$segm9","_selectedFlights$segm10","_selectedFlights$segm11","key","f","filter","Boolean","join","duration","departs","format","arrives","title","open","onCancel","footer","width","styles","body","padding","maxHeight","overflow","content","maxWidth","children","style","marginBottom","display","gap","flex","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","toLowerCase","startsWith","onClick","color","flightData","onDateRangeSelect","selectedRange","onSearch","textAlign","margin","marginTop","Title","level","segment","justifyContent","alignItems","size","pagination","showQuickJumper","fontFamily","Text","strong","currentSegmentFlights","nextSegmentFlights","days","floor","remainingHours","remainingMinutes","hours","minutes","dataIndex","render","airlinesList","airlineArray","Array","isArray","split","flexDirection","airlineName","airline","find","_a$label","label","replace","airlineCode","src","process","env","PUBLIC_URL","alt","height","objectFit","borderRadius","onError","onCell","_","rowSpan","text","price","percentage","originAirport","_selectedFlights$firs","_selectedFlights$firs2","IATA","destAirport","_selectedFlights$last","_selectedFlights$last2","R","lat1","Latitude","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","directDistance","round","totalSegmentDistance","forEach","parseInt","distance","isValid","fontSize","fontWeight","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nconst { RangePicker } = DatePicker;\n\nconst FlightDetailsModal = ({ \n  isModalOpen, \n  onClose, \n  selectedFlights = {}, \n  pricingData = [], \n  currentRoute,\n  startDay\n}) => {\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    availabilityData,\n    isLoadingAvailability,\n  } = useFlightDetails(getSegmentColumns, startDay);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isModalOpen) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isModalOpen]);\n\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n\n  const handleCancel = () => {\n    if (onClose) {\n      onClose(); // This will trigger handleModalClose in parent which clears the fields\n    }\n  };\n\n  const handleCalendarDateSelect = (dateRange) => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  // Function to group flights by segment with safety checks\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    // Group flights by segment and filter out hidden flights\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc; // Skip hidden flights\n      \n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n\n    return Object.values(segments);\n  };\n\n  // Add pagination settings\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n\n  // Add null checks for selectedFlights\n  const segments = selectedFlights ? Object.keys(selectedFlights).map(Number).sort((a, b) => a - b) : [];\n  \n  // Add null checks in the dataSource calculation\n  const dataSource = (() => {\n    try {\n      if (!selectedFlights || !segments || segments.length === 0) return [];\n      \n      const firstSegmentIndex = Math.min(...segments);\n      const lastSegmentIndex = Math.max(...segments);\n\n      // Find stopover point\n      let stopoverIndex = null;\n      for (let i = firstSegmentIndex; i < lastSegmentIndex; i++) {\n        const currentFlight = selectedFlights[i]?.[0];\n        const nextFlight = selectedFlights[i + 1]?.[0];\n        \n        if (currentFlight && nextFlight) {\n          const arrivalTime = dayjs(currentFlight.ArrivesAt);\n          const departureTime = dayjs(nextFlight.DepartsAt);\n          const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n          \n          if (layoverMinutes >= 24 * 60) {\n            stopoverIndex = i;\n            break;\n          }\n        }\n      }\n\n      // Calculate prices with null checks\n      const calculatePrices = (hasStopover) => {\n        try {\n          if (!selectedFlights || Object.keys(selectedFlights).length === 0) {\n            return {\n              economyPrice: '-',\n              businessPrice: '-',\n              firstPrice: '-'\n            };\n          }\n          // ... rest of price calculation ...\n        } catch (error) {\n          console.error('Error calculating prices:', error);\n          return {\n            economyPrice: '-',\n            businessPrice: '-',\n            firstPrice: '-'\n          };\n        }\n      };\n\n      // Return data with null checks\n      return segments.map(segmentIndex => ({\n        key: segmentIndex,\n        from: selectedFlights[segmentIndex]?.[0]?.from || '-',\n        to: selectedFlights[segmentIndex]?.[0]?.to || '-',\n        airlines: selectedFlights[segmentIndex]?.map(f => f.airlines).filter(Boolean).join(', ') || '-',\n        duration: selectedFlights[segmentIndex]?.[0]?.duration || '-',\n        departs: selectedFlights[segmentIndex]?.[0]?.DepartsAt \n          ? dayjs(selectedFlights[segmentIndex][0].DepartsAt).format('HH:mm MM-DD')\n          : '-',\n        arrives: selectedFlights[segmentIndex]?.[0]?.ArrivesAt\n          ? dayjs(selectedFlights[segmentIndex][0].ArrivesAt).format('HH:mm MM-DD')\n          : '-',\n      }));\n    } catch (error) {\n      console.error('Error generating dataSource:', error);\n      return [];\n    }\n  })();\n\n  return (\n    <Modal\n      title=\"Flight Details\"\n      open={isModalOpen}\n      onCancel={handleCancel}\n      footer={null}\n      width={1600}\n      styles={{\n        body: { \n          padding: '12px',\n          maxHeight: '90vh',\n          overflow: 'auto'\n        },\n        content: {\n          maxWidth: '100vw'\n        }\n      }}\n    >\n      <div style={{ marginBottom: 16 }}>\n        <div style={{ display: 'flex', gap: '8px', marginBottom: 16 }}>\n          <div style={{ display: 'flex', gap: '8px', flex: 1 }}>\n            <Input\n              placeholder=\"Enter your yapping password (Under Development)\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              style={{ flex: 1 }}\n            />\n            <Button\n              type=\"primary\"\n              disabled={!apiKey || !apiKey.toLowerCase().startsWith('pro')}\n              onClick={() => handleCalendarSearch(currentRoute)}\n            >\n              Apply\n            </Button>\n          </div>\n        </div>\n        {dateRangeError && (\n          <div style={{ color: 'red' }}>\n            Please select a date range in the calendar\n          </div>\n        )}\n      </div>\n\n      <FlightAvailabilityCalendar \n        flightData={availabilityData}\n        currentRoute={currentRoute}\n        onDateRangeSelect={handleCalendarDateSelect}\n        selectedRange={selectedDates}\n        onSearch={handleCalendarSearchClick}\n      />\n\n      {isLoadingSegments ? (\n        <div style={{ textAlign: 'center', margin: '20px 0' }}>\n          <Spin />\n        </div>\n      ) : (\n        segmentDetails?.length > 0 && (\n          <div style={{ marginTop: 0 }}>\n            <Typography.Title level={4} style={{ marginBottom: 16 }}>\n              Flights By Segment\n            </Typography.Title>\n            {getSegmentTables().map((segment, index) => (\n              <div key={segment.index} style={{ marginBottom: 16 }}>\n                <div style={{ \n                  display: 'flex', \n                  justifyContent: 'space-between', \n                  alignItems: 'center',\n                  marginBottom: 12 \n                }}>\n                  <Typography.Title level={5} style={{ margin: 0 }}>\n                    Segment {segment.index+1} ({segment.route}):\n                  </Typography.Title>\n                  <div>\n                    {/* Pagination controls */}\n                    <Pagination\n                      size=\"small\"\n                      total={segment.flights.length}\n                      pageSize={paginationConfig.pageSize}\n                      showSizeChanger={true}\n                      showTotal={(total, range) => `${range[0]}-${range[1]} of ${total}`}\n                      style={{ \n                        display: 'inline-block',\n                        marginBottom: 0\n                      }}\n                    />\n                  </div>\n                </div>\n                <Table\n                  columns={columns}\n                  dataSource={segment.flights}\n                  pagination={{\n                    total: segment.flights.length,\n                    pageSize: 5,\n                    showSizeChanger: true,\n                    showQuickJumper: true,\n                    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n                    pageSizeOptions: ['5', '10', '20', '50']\n                  }}\n                  size=\"small\"\n                />\n                \n                {/* Add layover duration if there's a next segment and flights are selected */}\n                {index < getSegmentTables().length - 1 && (\n                  <div style={{ \n                    padding: '0px',\n                    margin: '16px',\n                    textAlign: 'center',\n                    fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n                  }}>\n                    <Typography.Text strong>\n                      {(() => {\n                        const currentSegmentFlights = selectedFlights[segment.index];\n                        const nextSegmentFlights = selectedFlights[segment.index + 1];\n                        \n                        if (!currentSegmentFlights?.[0] || !nextSegmentFlights?.[0]) {\n                          return 'Select flights to see connection time';\n                        }\n\n                        const currentFlight = currentSegmentFlights[0];\n                        const nextFlight = nextSegmentFlights[0];\n                        \n                        const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                        const departureTime = dayjs(nextFlight.DepartsAt);\n                        const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                        \n                        // If layover is more than 24 hours, show as stopover\n                        if (layoverMinutes >= 24 * 60) {\n                          const days = Math.floor(layoverMinutes / (24 * 60));\n                          const remainingHours = Math.floor((layoverMinutes % (24 * 60)) / 60);\n                          const remainingMinutes = layoverMinutes % 60;\n                          \n                          return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n                        } else {\n                          // Regular layover display\n                          const hours = Math.floor(layoverMinutes / 60);\n                          const minutes = layoverMinutes % 60;\n                          return `Layover duration: ${hours}h ${minutes}m`;\n                        }\n                      })()}\n                    </Typography.Text>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )\n      )}\n\n      {/* Add Summary Table */}\n      {Object.keys(selectedFlights).length > 0 && (\n        <div style={{ marginTop: 24 }}>\n          <Typography.Title level={4}>Journey Summary</Typography.Title>\n          <Table\n            columns={[\n              {\n                title: 'From',\n                dataIndex: 'from',\n                key: 'from',\n              },\n              {\n                title: 'To',\n                dataIndex: 'to',\n                key: 'to',\n              },\n              {\n                title: 'Airlines',\n                dataIndex: 'airlines',\n                key: 'airlines',\n                render: (airlinesList) => {\n                  // More thorough safety checks\n                  if (!airlinesList || airlinesList === '-') return '-';\n                  \n                  try {\n                    const airlineArray = Array.isArray(airlinesList) ? airlinesList : airlinesList.split(', ');\n                    \n                    return (\n                      <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n                        {airlineArray.map((airlineName, index) => {\n                          if (!airlineName) return null;\n                          \n                          const airline = airlines.find(a => \n                            airlineName.startsWith(a.label?.replace(` (${a.value})`, ''))\n                          );\n                          const airlineCode = airline?.value;\n                          \n                          return (\n                            <div key={`${airlineCode}-${index}`} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                              {airlineCode && (\n                                <img \n                                  src={`${process.env.PUBLIC_URL}/${airlineCode}.png`}\n                                  alt={airlineCode}\n                                  style={{ \n                                    width: '24px', \n                                    height: '24px',\n                                    objectFit: 'contain',\n                                    borderRadius: '4px'\n                                  }} \n                                  onError={(e) => {\n                                    e.target.style.display = 'none';\n                                  }}\n                                />\n                              )}\n                              {airlineName}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    );\n                  } catch (error) {\n                    console.error('Error rendering airlines:', error);\n                    return '-';\n                  }\n                },\n              },\n              {\n                title: 'Duration',\n                dataIndex: 'duration',\n                key: 'duration',\n              },\n              {\n                title: 'Departs',\n                dataIndex: 'departs',\n                key: 'departs',\n              },\n              {\n                title: 'Arrives',\n                dataIndex: 'arrives',\n                key: 'arrives',\n              },\n              {\n                title: 'Economy Price',\n                dataIndex: 'economyPrice',\n                key: 'economyPrice',\n                onCell: (_, index) => ({\n                  rowSpan: index === 0 ? 2 : 0, // Show only in first row\n                }),\n              },\n              {\n                title: 'Business Price (Max %)',\n                dataIndex: 'businessPrice',\n                key: 'businessPrice',\n                onCell: (_, index) => ({\n                  rowSpan: index === 0 ? 2 : 0, // Show only in first row\n                }),\n                render: (text) => {\n                  if (!text || text === 'N/A') return text;\n                  try {\n                    const [price, percentage] = text.split(' (');\n                    if (!percentage) return text;\n                    return `${price} (${percentage}`;\n                  } catch (error) {\n                    return text;\n                  }\n                }\n              },\n              {\n                title: 'First Price (Max %)',\n                dataIndex: 'firstPrice',\n                key: 'firstPrice',\n                onCell: (_, index) => ({\n                  rowSpan: index === 0 ? 2 : 0, // Show only in first row\n                }),\n                render: (text) => {\n                  if (!text || text === 'N/A') return text;\n                  try {\n                    const [price, percentage] = text.split(' (');\n                    if (!percentage) return text;\n                    return `${price} (${percentage}`;\n                  } catch (error) {\n                    return text;\n                  }\n                }\n              },\n            ]}\n            dataSource={dataSource}\n            pagination={false}\n            size=\"small\"\n          />\n          \n          {/* Add Route Validation */}\n          <div style={{ marginTop: 12, fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace' }}>\n            <Typography.Text>\n              {(() => {\n                const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n                const originAirport = airports.find(a => a.IATA === selectedFlights[firstSegmentIndex]?.[0]?.from);\n                const destAirport = airports.find(a => a.IATA === selectedFlights[lastSegmentIndex]?.[0]?.to);\n\n                if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n                // Haversine formula\n                const R = 3959; // Earth's radius in miles\n                const lat1 = originAirport.Latitude * Math.PI / 180;\n                const lat2 = destAirport.Latitude * Math.PI / 180;\n                const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n                const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n                const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n                          Math.cos(lat1) * Math.cos(lat2) *\n                          Math.sin(dLon/2) * Math.sin(dLon/2);\n                \n                const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n                const directDistance = Math.round(R * c);\n\n                // Calculate total segment distance\n                let totalSegmentDistance = 0;\n                Object.values(selectedFlights).forEach(flights => {\n                  flights.forEach(flight => {\n                    totalSegmentDistance += parseInt(flight.distance || 0);\n                  });\n                });\n\n                const isValid = totalSegmentDistance <= (2 * directDistance);\n                const percentage = Math.round(totalSegmentDistance/directDistance * 100);\n\n                return (\n                  <>\n                    <div style={{ \n                      marginTop: 8,\n                      fontSize: '16px',\n                      fontWeight: 'bold',\n                      color: isValid ? '#52c41a' : '#f5222d',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      gap: '8px',\n                      width: '100%'\n                    }}>\n                      {isValid ? (\n                        <>\n                          <span>✓</span>\n                          <span>ROUTING VALIDATED</span>\n                        </>\n                      ) : (\n                        <>\n                          <span>✗</span>\n                          <span>THIS ROUTING IS INVALID</span>\n                        </>\n                      )}\n                    </div>\n                  </>\n                );\n              })()}\n            </Typography.Text>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `}</style>\n    </Modal>\n  );\n};\n\nexport default FlightDetailsModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}