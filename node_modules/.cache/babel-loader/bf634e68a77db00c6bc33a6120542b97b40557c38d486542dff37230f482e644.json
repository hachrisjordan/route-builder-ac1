{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst FlightDetailsModal = ({\n  isVisible,\n  currentRoute,\n  onClose\n}) => {\n  _s();\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    selectedFlights,\n    availabilityData,\n    isLoadingAvailability\n  } = useFlightDetails(getSegmentColumns);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isVisible) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isVisible]);\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n  const handleCancel = () => {\n    onClose();\n  };\n  const handleCalendarDateSelect = dateRange => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  // Function to group flights by segment with safety checks\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    // Group flights by segment and filter out hidden flights\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc; // Skip hidden flights\n\n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n    return Object.values(segments);\n  };\n\n  // Add pagination settings\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Flight Details\",\n    open: isVisible,\n    onCancel: handleCancel,\n    footer: null,\n    width: 1600,\n    styles: {\n      body: {\n        padding: '12px',\n        maxHeight: '90vh',\n        overflow: 'auto'\n      },\n      content: {\n        maxWidth: '100vw'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          marginBottom: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your yapping password (Under Development)\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            disabled: !apiKey || !apiKey.toLowerCase().startsWith('pro'),\n            onClick: () => handleCalendarSearch(currentRoute),\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), dateRangeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Please select a date range in the calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightAvailabilityCalendar, {\n      flightData: availabilityData,\n      currentRoute: currentRoute,\n      onDateRangeSelect: handleCalendarDateSelect,\n      selectedRange: selectedDates,\n      onSearch: handleCalendarSearchClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), isLoadingSegments ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this) : (segmentDetails === null || segmentDetails === void 0 ? void 0 : segmentDetails.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        style: {\n          marginBottom: 16\n        },\n        children: \"Flights By Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), getSegmentTables().map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n            level: 5,\n            style: {\n              margin: 0\n            },\n            children: [\"Segment \", segment.index + 1, \" (\", segment.route, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              size: \"small\",\n              total: segment.flights.length,\n              pageSize: paginationConfig.pageSize,\n              showSizeChanger: true,\n              showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n              style: {\n                display: 'inline-block',\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: segment.flights,\n          pagination: false // Remove pagination from table\n          ,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), index < getSegmentTables().length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '0px',\n            margin: '16px',\n            textAlign: 'center',\n            fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n            strong: true,\n            children: (() => {\n              const currentSegmentFlights = selectedFlights[segment.index];\n              const nextSegmentFlights = selectedFlights[segment.index + 1];\n              if (!(currentSegmentFlights !== null && currentSegmentFlights !== void 0 && currentSegmentFlights[0]) || !(nextSegmentFlights !== null && nextSegmentFlights !== void 0 && nextSegmentFlights[0])) {\n                return 'Select flights to see connection time';\n              }\n              const currentFlight = currentSegmentFlights[0];\n              const nextFlight = nextSegmentFlights[0];\n              const arrivalTime = dayjs(currentFlight.ArrivesAt);\n              const departureTime = dayjs(nextFlight.DepartsAt);\n              const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n\n              // If layover is more than 24 hours, show as stopover\n              if (layoverMinutes >= 24 * 60) {\n                const days = Math.floor(layoverMinutes / (24 * 60));\n                const remainingHours = Math.floor(layoverMinutes % (24 * 60) / 60);\n                const remainingMinutes = layoverMinutes % 60;\n                return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n              } else {\n                // Regular layover display\n                const hours = Math.floor(layoverMinutes / 60);\n                const minutes = layoverMinutes % 60;\n                return `Layover duration: ${hours}h ${minutes}m`;\n              }\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }, this)]\n      }, segment.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }, this), Object.keys(selectedFlights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: \"Journey Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: [{\n          title: 'From',\n          dataIndex: 'from',\n          key: 'from'\n        }, {\n          title: 'To',\n          dataIndex: 'to',\n          key: 'to'\n        }, {\n          title: 'Airlines',\n          dataIndex: 'airlines',\n          key: 'airlines',\n          render: airlinesList => {\n            if (!airlinesList) return '-';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '4px'\n              },\n              children: airlinesList.split(', ').map(airlineName => {\n                const airline = airlines.find(a => airlineName.startsWith(a.label.replace(` (${a.value})`, '')));\n                const airlineCode = airline === null || airline === void 0 ? void 0 : airline.value;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `${process.env.PUBLIC_URL}/${airlineCode}.png`,\n                    alt: airlineCode,\n                    style: {\n                      width: '24px',\n                      height: '24px',\n                      objectFit: 'contain',\n                      borderRadius: '4px'\n                    },\n                    onError: e => {\n                      e.target.style.display = 'none';\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 29\n                  }, this), airlineName]\n                }, airlineCode, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this);\n          }\n        }, {\n          title: 'Duration',\n          dataIndex: 'duration',\n          key: 'duration'\n        }, {\n          title: 'Departs',\n          dataIndex: 'departs',\n          key: 'departs'\n        }, {\n          title: 'Arrives',\n          dataIndex: 'arrives',\n          key: 'arrives'\n        }, {\n          title: 'Economy Price',\n          dataIndex: 'economyPrice',\n          key: 'economyPrice'\n        }, {\n          title: 'Business Price (Max %)',\n          dataIndex: 'businessPrice',\n          key: 'businessPrice',\n          render: (text, record) => {\n            if (text === 'N/A') return text;\n            const [price, percentage] = text.split(' (');\n            if (!percentage) return text;\n            return `${price} (${percentage}`;\n          }\n        }, {\n          title: 'First Price (Max %)',\n          dataIndex: 'firstPrice',\n          key: 'firstPrice',\n          render: (text, record) => {\n            if (text === 'N/A') return text;\n            const [price, percentage] = text.split(' (');\n            if (!percentage) return text;\n            return `${price} (${percentage}`;\n          }\n        }],\n        dataSource: ((_selectedFlights$firs3, _selectedFlights$firs4, _selectedFlights$stop, _selectedFlights$stop2, _selectedFlights$firs7, _selectedFlights$firs8, _selectedFlights$stop5, _selectedFlights$stop6, _selectedFlights, _selectedFlights$, _selectedFlights$last3, _selectedFlights$last4, _selectedFlights3, _selectedFlights3$, _selectedFlights$last7, _selectedFlights$last8) => {\n          const segments = Object.keys(selectedFlights).map(Number).sort((a, b) => a - b);\n          const firstSegmentIndex = Math.min(...segments);\n          const lastSegmentIndex = Math.max(...segments);\n\n          // Find stopover point\n          let stopoverIndex = null;\n          for (let i = firstSegmentIndex; i <= lastSegmentIndex; i++) {\n            var _selectedFlights$i;\n            const flight = (_selectedFlights$i = selectedFlights[i]) === null || _selectedFlights$i === void 0 ? void 0 : _selectedFlights$i[0];\n            if (flight && flight.to === currentRoute.find((airport, idx) => idx > 0 && idx < currentRoute.length - 1 && currentRoute[idx] === flight.to)) {\n              stopoverIndex = i;\n              break;\n            }\n          }\n\n          // If no stopover found, return single row\n          if (!stopoverIndex) {\n            var _selectedFlights$firs, _selectedFlights$firs2, _selectedFlights$last, _selectedFlights$last2;\n            const airlines = segments.flatMap(i => {\n              var _selectedFlights$i2;\n              return ((_selectedFlights$i2 = selectedFlights[i]) === null || _selectedFlights$i2 === void 0 ? void 0 : _selectedFlights$i2.map(f => f.airlines)) || [];\n            }).filter(Boolean) // Remove any undefined/null values\n            .join(', ') || '-'; // Default to '-' if no airlines\n\n            return [{\n              key: '1',\n              from: ((_selectedFlights$firs = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs === void 0 ? void 0 : (_selectedFlights$firs2 = _selectedFlights$firs[0]) === null || _selectedFlights$firs2 === void 0 ? void 0 : _selectedFlights$firs2.from) || '-',\n              to: ((_selectedFlights$last = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last === void 0 ? void 0 : (_selectedFlights$last2 = _selectedFlights$last[0]) === null || _selectedFlights$last2 === void 0 ? void 0 : _selectedFlights$last2.to) || '-',\n              airlines\n              // ... other fields remain the same ...\n            }];\n          }\n\n          // Split journey at stopover\n          return [\n          // First part: Origin to Stopover\n          {\n            key: '1',\n            from: ((_selectedFlights$firs3 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs3 === void 0 ? void 0 : (_selectedFlights$firs4 = _selectedFlights$firs3[0]) === null || _selectedFlights$firs4 === void 0 ? void 0 : _selectedFlights$firs4.from) || '-',\n            to: ((_selectedFlights$stop = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop === void 0 ? void 0 : (_selectedFlights$stop2 = _selectedFlights$stop[0]) === null || _selectedFlights$stop2 === void 0 ? void 0 : _selectedFlights$stop2.to) || '-',\n            airlines: [...new Set(segments.filter(i => i <= stopoverIndex).flatMap(i => {\n              var _selectedFlights$i3;\n              return ((_selectedFlights$i3 = selectedFlights[i]) === null || _selectedFlights$i3 === void 0 ? void 0 : _selectedFlights$i3.map(f => f.airlines)) || [];\n            }))].filter(Boolean).join(', ') || '-',\n            // Add safety check\n            duration: ((_selectedFlights$firs5, _selectedFlights$firs6, _selectedFlights$stop3, _selectedFlights$stop4) => {\n              const firstDeparture = dayjs((_selectedFlights$firs5 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs5 === void 0 ? void 0 : (_selectedFlights$firs6 = _selectedFlights$firs5[0]) === null || _selectedFlights$firs6 === void 0 ? void 0 : _selectedFlights$firs6.DepartsAt);\n              const stopoverArrival = dayjs((_selectedFlights$stop3 = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop3 === void 0 ? void 0 : (_selectedFlights$stop4 = _selectedFlights$stop3[0]) === null || _selectedFlights$stop4 === void 0 ? void 0 : _selectedFlights$stop4.ArrivesAt);\n              const minutes = stopoverArrival.diff(firstDeparture, 'minute');\n              const hours = Math.floor(minutes / 60);\n              const remainingMinutes = minutes % 60;\n              return `${hours}h ${remainingMinutes}m`;\n            })(),\n            departs: dayjs((_selectedFlights$firs7 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs7 === void 0 ? void 0 : (_selectedFlights$firs8 = _selectedFlights$firs7[0]) === null || _selectedFlights$firs8 === void 0 ? void 0 : _selectedFlights$firs8.DepartsAt).format('HH:mm MM-DD'),\n            arrives: dayjs((_selectedFlights$stop5 = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop5 === void 0 ? void 0 : (_selectedFlights$stop6 = _selectedFlights$stop5[0]) === null || _selectedFlights$stop6 === void 0 ? void 0 : _selectedFlights$stop6.ArrivesAt).format('HH:mm MM-DD')\n          },\n          // Second part: Stopover to Destination\n          {\n            key: '2',\n            from: ((_selectedFlights = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights === void 0 ? void 0 : (_selectedFlights$ = _selectedFlights[0]) === null || _selectedFlights$ === void 0 ? void 0 : _selectedFlights$.from) || '-',\n            to: ((_selectedFlights$last3 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last3 === void 0 ? void 0 : (_selectedFlights$last4 = _selectedFlights$last3[0]) === null || _selectedFlights$last4 === void 0 ? void 0 : _selectedFlights$last4.to) || '-',\n            airlines: [...new Set(segments.filter(i => i > stopoverIndex).flatMap(i => {\n              var _selectedFlights$i4;\n              return ((_selectedFlights$i4 = selectedFlights[i]) === null || _selectedFlights$i4 === void 0 ? void 0 : _selectedFlights$i4.map(f => f.airlines)) || [];\n            }))].filter(Boolean).join(', ') || '-',\n            // Add safety check\n            duration: ((_selectedFlights2, _selectedFlights2$, _selectedFlights$last5, _selectedFlights$last6) => {\n              const stopoverDeparture = dayjs((_selectedFlights2 = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights2 === void 0 ? void 0 : (_selectedFlights2$ = _selectedFlights2[0]) === null || _selectedFlights2$ === void 0 ? void 0 : _selectedFlights2$.DepartsAt);\n              const finalArrival = dayjs((_selectedFlights$last5 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last5 === void 0 ? void 0 : (_selectedFlights$last6 = _selectedFlights$last5[0]) === null || _selectedFlights$last6 === void 0 ? void 0 : _selectedFlights$last6.ArrivesAt);\n              const minutes = finalArrival.diff(stopoverDeparture, 'minute');\n              const hours = Math.floor(minutes / 60);\n              const remainingMinutes = minutes % 60;\n              return `${hours}h ${remainingMinutes}m`;\n            })(),\n            departs: dayjs((_selectedFlights3 = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights3 === void 0 ? void 0 : (_selectedFlights3$ = _selectedFlights3[0]) === null || _selectedFlights3$ === void 0 ? void 0 : _selectedFlights3$.DepartsAt).format('HH:mm MM-DD'),\n            arrives: dayjs((_selectedFlights$last7 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last7 === void 0 ? void 0 : (_selectedFlights$last8 = _selectedFlights$last7[0]) === null || _selectedFlights$last8 === void 0 ? void 0 : _selectedFlights$last8.ArrivesAt).format('HH:mm MM-DD')\n          }];\n        })(),\n        pagination: false,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n          children: (() => {\n            const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n            const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n            const originAirport = airports.find(a => {\n              var _selectedFlights$firs9, _selectedFlights$firs10;\n              return a.IATA === ((_selectedFlights$firs9 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs9 === void 0 ? void 0 : (_selectedFlights$firs10 = _selectedFlights$firs9[0]) === null || _selectedFlights$firs10 === void 0 ? void 0 : _selectedFlights$firs10.from);\n            });\n            const destAirport = airports.find(a => {\n              var _selectedFlights$last9, _selectedFlights$last10;\n              return a.IATA === ((_selectedFlights$last9 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last9 === void 0 ? void 0 : (_selectedFlights$last10 = _selectedFlights$last9[0]) === null || _selectedFlights$last10 === void 0 ? void 0 : _selectedFlights$last10.to);\n            });\n            if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n            // Haversine formula\n            const R = 3959; // Earth's radius in miles\n            const lat1 = originAirport.Latitude * Math.PI / 180;\n            const lat2 = destAirport.Latitude * Math.PI / 180;\n            const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n            const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n            const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            const directDistance = Math.round(R * c);\n\n            // Calculate total segment distance\n            let totalSegmentDistance = 0;\n            Object.values(selectedFlights).forEach(flights => {\n              flights.forEach(flight => {\n                totalSegmentDistance += parseInt(flight.distance || 0);\n              });\n            });\n            const isValid = totalSegmentDistance <= 2 * directDistance;\n            const percentage = Math.round(totalSegmentDistance / directDistance * 100);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8,\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  color: isValid ? '#52c41a' : '#f5222d',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '8px',\n                  width: '100%'\n                },\n                children: isValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"ROUTING VALIDATED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2717\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"THIS ROUTING IS INVALID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetailsModal, \"jtObapP9L2kEIaLNZxXPSlgOMxk=\", false, function () {\n  return [useFlightDetails];\n});\n_c = FlightDetailsModal;\nexport default FlightDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"FlightDetailsModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","DatePicker","Input","Spin","Table","Button","Typography","Pagination","dayjs","getSegmentColumns","useFlightDetails","FlightAvailabilityCalendar","airlines","airports","pricingData","jsxDEV","_jsxDEV","Fragment","_Fragment","RangePicker","FlightDetailsModal","isVisible","currentRoute","onClose","_s","dateRangeError","setDateRangeError","selectedDates","setSelectedDates","apiKey","setApiKey","segmentDetails","isLoadingSegments","handleDateSearch","handleCalendarSearch","resetDetails","columns","selectedFlights","availabilityData","isLoadingAvailability","handleOk","handleCancel","handleCalendarDateSelect","dateRange","handleCalendarSearchClick","startDate","endDate","stopoverInfo","console","log","JSON","stringify","getSegmentTables","length","segments","reduce","acc","flight","hidden","segmentIndex","index","route","from","to","flights","push","Object","values","paginationConfig","pageSize","showSizeChanger","showTotal","total","range","pageSizeOptions","position","title","open","onCancel","footer","width","styles","body","padding","maxHeight","overflow","content","maxWidth","children","style","marginBottom","display","gap","flex","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","toLowerCase","startsWith","onClick","color","flightData","onDateRangeSelect","selectedRange","onSearch","textAlign","margin","marginTop","Title","level","map","segment","justifyContent","alignItems","size","dataSource","pagination","fontFamily","Text","strong","currentSegmentFlights","nextSegmentFlights","currentFlight","nextFlight","arrivalTime","ArrivesAt","departureTime","DepartsAt","layoverMinutes","diff","days","Math","floor","remainingHours","remainingMinutes","hours","minutes","keys","dataIndex","key","render","airlinesList","flexDirection","split","airlineName","airline","find","a","label","replace","airlineCode","src","process","env","PUBLIC_URL","alt","height","objectFit","borderRadius","onError","text","record","price","percentage","_selectedFlights$firs3","_selectedFlights$firs4","_selectedFlights$stop","_selectedFlights$stop2","_selectedFlights$firs7","_selectedFlights$firs8","_selectedFlights$stop5","_selectedFlights$stop6","_selectedFlights","_selectedFlights$","_selectedFlights$last3","_selectedFlights$last4","_selectedFlights3","_selectedFlights3$","_selectedFlights$last7","_selectedFlights$last8","Number","sort","b","firstSegmentIndex","min","lastSegmentIndex","max","stopoverIndex","i","_selectedFlights$i","airport","idx","_selectedFlights$firs","_selectedFlights$firs2","_selectedFlights$last","_selectedFlights$last2","flatMap","_selectedFlights$i2","f","filter","Boolean","join","Set","_selectedFlights$i3","duration","_selectedFlights$firs5","_selectedFlights$firs6","_selectedFlights$stop3","_selectedFlights$stop4","firstDeparture","stopoverArrival","departs","format","arrives","_selectedFlights$i4","_selectedFlights2","_selectedFlights2$","_selectedFlights$last5","_selectedFlights$last6","stopoverDeparture","finalArrival","originAirport","_selectedFlights$firs9","_selectedFlights$firs10","IATA","destAirport","_selectedFlights$last9","_selectedFlights$last10","R","lat1","Latitude","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","directDistance","round","totalSegmentDistance","forEach","parseInt","distance","isValid","fontSize","fontWeight","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nconst { RangePicker } = DatePicker;\n\nconst FlightDetailsModal = ({ isVisible, currentRoute, onClose }) => {\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    selectedFlights,\n    availabilityData,\n    isLoadingAvailability,\n  } = useFlightDetails(getSegmentColumns);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isVisible) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isVisible]);\n\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleCalendarDateSelect = (dateRange) => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  // Function to group flights by segment with safety checks\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    // Group flights by segment and filter out hidden flights\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc; // Skip hidden flights\n      \n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n\n    return Object.values(segments);\n  };\n\n  // Add pagination settings\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n\n  return (\n    <Modal\n      title=\"Flight Details\"\n      open={isVisible}\n      onCancel={handleCancel}\n      footer={null}\n      width={1600}\n      styles={{\n        body: { \n          padding: '12px',\n          maxHeight: '90vh',\n          overflow: 'auto'\n        },\n        content: {\n          maxWidth: '100vw'\n        }\n      }}\n    >\n      <div style={{ marginBottom: 16 }}>\n        <div style={{ display: 'flex', gap: '8px', marginBottom: 16 }}>\n          <div style={{ display: 'flex', gap: '8px', flex: 1 }}>\n            <Input\n              placeholder=\"Enter your yapping password (Under Development)\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              style={{ flex: 1 }}\n            />\n            <Button\n              type=\"primary\"\n              disabled={!apiKey || !apiKey.toLowerCase().startsWith('pro')}\n              onClick={() => handleCalendarSearch(currentRoute)}\n            >\n              Apply\n            </Button>\n          </div>\n        </div>\n        {dateRangeError && (\n          <div style={{ color: 'red' }}>\n            Please select a date range in the calendar\n          </div>\n        )}\n      </div>\n\n      <FlightAvailabilityCalendar \n        flightData={availabilityData}\n        currentRoute={currentRoute}\n        onDateRangeSelect={handleCalendarDateSelect}\n        selectedRange={selectedDates}\n        onSearch={handleCalendarSearchClick}\n      />\n\n      {isLoadingSegments ? (\n        <div style={{ textAlign: 'center', margin: '20px 0' }}>\n          <Spin />\n        </div>\n      ) : (\n        segmentDetails?.length > 0 && (\n          <div style={{ marginTop: 0 }}>\n            <Typography.Title level={4} style={{ marginBottom: 16 }}>\n              Flights By Segment\n            </Typography.Title>\n            {getSegmentTables().map((segment, index) => (\n              <div key={segment.index} style={{ marginBottom: 16 }}>\n                <div style={{ \n                  display: 'flex', \n                  justifyContent: 'space-between', \n                  alignItems: 'center',\n                  marginBottom: 12 \n                }}>\n                  <Typography.Title level={5} style={{ margin: 0 }}>\n                    Segment {segment.index+1} ({segment.route}):\n                  </Typography.Title>\n                  <div>\n                    {/* Pagination controls */}\n                    <Pagination\n                      size=\"small\"\n                      total={segment.flights.length}\n                      pageSize={paginationConfig.pageSize}\n                      showSizeChanger={true}\n                      showTotal={(total, range) => `${range[0]}-${range[1]} of ${total}`}\n                      style={{ \n                        display: 'inline-block',\n                        marginBottom: 0\n                      }}\n                    />\n                  </div>\n                </div>\n                <Table\n                  columns={columns}\n                  dataSource={segment.flights}\n                  pagination={false} // Remove pagination from table\n                  size=\"small\"\n                />\n                \n                {/* Add layover duration if there's a next segment and flights are selected */}\n                {index < getSegmentTables().length - 1 && (\n                  <div style={{ \n                    padding: '0px',\n                    margin: '16px',\n                    textAlign: 'center',\n                    fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n                  }}>\n                    <Typography.Text strong>\n                      {(() => {\n                        const currentSegmentFlights = selectedFlights[segment.index];\n                        const nextSegmentFlights = selectedFlights[segment.index + 1];\n                        \n                        if (!currentSegmentFlights?.[0] || !nextSegmentFlights?.[0]) {\n                          return 'Select flights to see connection time';\n                        }\n\n                        const currentFlight = currentSegmentFlights[0];\n                        const nextFlight = nextSegmentFlights[0];\n                        \n                        const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                        const departureTime = dayjs(nextFlight.DepartsAt);\n                        const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                        \n                        // If layover is more than 24 hours, show as stopover\n                        if (layoverMinutes >= 24 * 60) {\n                          const days = Math.floor(layoverMinutes / (24 * 60));\n                          const remainingHours = Math.floor((layoverMinutes % (24 * 60)) / 60);\n                          const remainingMinutes = layoverMinutes % 60;\n                          \n                          return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n                        } else {\n                          // Regular layover display\n                          const hours = Math.floor(layoverMinutes / 60);\n                          const minutes = layoverMinutes % 60;\n                          return `Layover duration: ${hours}h ${minutes}m`;\n                        }\n                      })()}\n                    </Typography.Text>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )\n      )}\n\n      {/* Add Summary Table */}\n      {Object.keys(selectedFlights).length > 0 && (\n        <div style={{ marginTop: 24 }}>\n          <Typography.Title level={4}>Journey Summary</Typography.Title>\n          <Table\n            columns={[\n              {\n                title: 'From',\n                dataIndex: 'from',\n                key: 'from',\n              },\n              {\n                title: 'To',\n                dataIndex: 'to',\n                key: 'to',\n              },\n              {\n                title: 'Airlines',\n                dataIndex: 'airlines',\n                key: 'airlines',\n                render: (airlinesList) => {\n                  if (!airlinesList) return '-';\n                  \n                  return (\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n                      {airlinesList.split(', ').map(airlineName => {\n                        const airline = airlines.find(a => airlineName.startsWith(a.label.replace(` (${a.value})`, '')));\n                        const airlineCode = airline?.value;\n                        return (\n                          <div key={airlineCode} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                            <img \n                              src={`${process.env.PUBLIC_URL}/${airlineCode}.png`}\n                              alt={airlineCode}\n                              style={{ \n                                width: '24px', \n                                height: '24px',\n                                objectFit: 'contain',\n                                borderRadius: '4px'\n                              }} \n                              onError={(e) => {\n                                e.target.style.display = 'none';\n                              }}\n                            />\n                            {airlineName}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                },\n              },\n              {\n                title: 'Duration',\n                dataIndex: 'duration',\n                key: 'duration',\n              },\n              {\n                title: 'Departs',\n                dataIndex: 'departs',\n                key: 'departs',\n              },\n              {\n                title: 'Arrives',\n                dataIndex: 'arrives',\n                key: 'arrives',\n              },\n              {\n                title: 'Economy Price',\n                dataIndex: 'economyPrice',\n                key: 'economyPrice',\n              },\n              {\n                title: 'Business Price (Max %)',\n                dataIndex: 'businessPrice',\n                key: 'businessPrice',\n                render: (text, record) => {\n                  if (text === 'N/A') return text;\n                  const [price, percentage] = text.split(' (');\n                  if (!percentage) return text;\n                  return `${price} (${percentage}`;\n                }\n              },\n              {\n                title: 'First Price (Max %)',\n                dataIndex: 'firstPrice',\n                key: 'firstPrice',\n                render: (text, record) => {\n                  if (text === 'N/A') return text;\n                  const [price, percentage] = text.split(' (');\n                  if (!percentage) return text;\n                  return `${price} (${percentage}`;\n                }\n              },\n            ]}\n            dataSource={(() => {\n              const segments = Object.keys(selectedFlights).map(Number).sort((a, b) => a - b);\n              const firstSegmentIndex = Math.min(...segments);\n              const lastSegmentIndex = Math.max(...segments);\n              \n              // Find stopover point\n              let stopoverIndex = null;\n              for (let i = firstSegmentIndex; i <= lastSegmentIndex; i++) {\n                const flight = selectedFlights[i]?.[0];\n                if (flight && flight.to === currentRoute.find((airport, idx) => idx > 0 && idx < currentRoute.length - 1 && currentRoute[idx] === flight.to)) {\n                  stopoverIndex = i;\n                  break;\n                }\n              }\n\n              // If no stopover found, return single row\n              if (!stopoverIndex) {\n                const airlines = segments\n                  .flatMap(i => selectedFlights[i]?.map(f => f.airlines) || [])\n                  .filter(Boolean)  // Remove any undefined/null values\n                  .join(', ') || '-';  // Default to '-' if no airlines\n\n                return [{\n                  key: '1',\n                  from: selectedFlights[firstSegmentIndex]?.[0]?.from || '-',\n                  to: selectedFlights[lastSegmentIndex]?.[0]?.to || '-',\n                  airlines,\n                  // ... other fields remain the same ...\n                }];\n              }\n\n              // Split journey at stopover\n              return [\n                // First part: Origin to Stopover\n                {\n                  key: '1',\n                  from: selectedFlights[firstSegmentIndex]?.[0]?.from || '-',\n                  to: selectedFlights[stopoverIndex]?.[0]?.to || '-',\n                  airlines: [...new Set(segments\n                    .filter(i => i <= stopoverIndex)\n                    .flatMap(i => selectedFlights[i]?.map(f => f.airlines) || [])\n                  )].filter(Boolean).join(', ') || '-',  // Add safety check\n                  duration: (() => {\n                    const firstDeparture = dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt);\n                    const stopoverArrival = dayjs(selectedFlights[stopoverIndex]?.[0]?.ArrivesAt);\n                    const minutes = stopoverArrival.diff(firstDeparture, 'minute');\n                    const hours = Math.floor(minutes / 60);\n                    const remainingMinutes = minutes % 60;\n                    return `${hours}h ${remainingMinutes}m`;\n                  })(),\n                  departs: dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n                  arrives: dayjs(selectedFlights[stopoverIndex]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n                },\n                // Second part: Stopover to Destination\n                {\n                  key: '2',\n                  from: selectedFlights[stopoverIndex + 1]?.[0]?.from || '-',\n                  to: selectedFlights[lastSegmentIndex]?.[0]?.to || '-',\n                  airlines: [...new Set(segments\n                    .filter(i => i > stopoverIndex)\n                    .flatMap(i => selectedFlights[i]?.map(f => f.airlines) || [])\n                  )].filter(Boolean).join(', ') || '-',  // Add safety check\n                  duration: (() => {\n                    const stopoverDeparture = dayjs(selectedFlights[stopoverIndex + 1]?.[0]?.DepartsAt);\n                    const finalArrival = dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt);\n                    const minutes = finalArrival.diff(stopoverDeparture, 'minute');\n                    const hours = Math.floor(minutes / 60);\n                    const remainingMinutes = minutes % 60;\n                    return `${hours}h ${remainingMinutes}m`;\n                  })(),\n                  departs: dayjs(selectedFlights[stopoverIndex + 1]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n                  arrives: dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n                }\n              ];\n            })()}\n            pagination={false}\n            size=\"small\"\n          />\n          \n          {/* Add Route Validation */}\n          <div style={{ marginTop: 12, fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace' }}>\n            <Typography.Text>\n              {(() => {\n                const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n                const originAirport = airports.find(a => a.IATA === selectedFlights[firstSegmentIndex]?.[0]?.from);\n                const destAirport = airports.find(a => a.IATA === selectedFlights[lastSegmentIndex]?.[0]?.to);\n\n                if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n                // Haversine formula\n                const R = 3959; // Earth's radius in miles\n                const lat1 = originAirport.Latitude * Math.PI / 180;\n                const lat2 = destAirport.Latitude * Math.PI / 180;\n                const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n                const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n                const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n                          Math.cos(lat1) * Math.cos(lat2) *\n                          Math.sin(dLon/2) * Math.sin(dLon/2);\n                \n                const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n                const directDistance = Math.round(R * c);\n\n                // Calculate total segment distance\n                let totalSegmentDistance = 0;\n                Object.values(selectedFlights).forEach(flights => {\n                  flights.forEach(flight => {\n                    totalSegmentDistance += parseInt(flight.distance || 0);\n                  });\n                });\n\n                const isValid = totalSegmentDistance <= (2 * directDistance);\n                const percentage = Math.round(totalSegmentDistance/directDistance * 100);\n\n                return (\n                  <>\n                    <div style={{ \n                      marginTop: 8,\n                      fontSize: '16px',\n                      fontWeight: 'bold',\n                      color: isValid ? '#52c41a' : '#f5222d',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      gap: '8px',\n                      width: '100%'\n                    }}>\n                      {isValid ? (\n                        <>\n                          <span>✓</span>\n                          <span>ROUTING VALIDATED</span>\n                        </>\n                      ) : (\n                        <>\n                          <span>✗</span>\n                          <span>THIS ROUTING IS INVALID</span>\n                        </>\n                      )}\n                    </div>\n                  </>\n                );\n              })()}\n            </Typography.Text>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `}</style>\n    </Modal>\n  );\n};\n\nexport default FlightDetailsModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}