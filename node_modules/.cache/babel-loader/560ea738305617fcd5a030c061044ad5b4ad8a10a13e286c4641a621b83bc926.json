{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguyen77\\\\docker-neo4j\\\\route-builder-ac1\\\\src\\\\components\\\\FlightSearch\\\\FlightAvailabilityCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Typography, Badge, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst FlightAvailabilityCalendar = ({\n  flightData,\n  currentRoute,\n  onDateRangeSelect,\n  selectedRange,\n  onSearch\n}) => {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n\n  // Get days in month\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n\n  // Get first day of month (0 = Sunday, 1 = Monday, etc.)\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n\n  // Helper to format date as \"YYYY-MM-DD\"\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n\n  // Previous and next month handlers\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  // Function to render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    // Helper function to get background color based on class code\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y':\n          return '#E8E1F2';\n        case 'J':\n          return '#F3CD87';\n        case 'F':\n          return '#D88A3F';\n        default:\n          return 'transparent';\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2px'\n      },\n      children: Object.entries(classes).map(([classCode, available]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: getBackgroundColor(classCode, available),\n          color: available ? '#684634' : '#999',\n          padding: '0px 4px',\n          borderRadius: '4px',\n          fontSize: '13px',\n          fontFamily: 'Menlo',\n          width: '20px',\n          textAlign: 'center'\n        },\n        children: available ? classCode : '-'\n      }, classCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to check if a segment is valid for the current route\n  const isValidSegment = segment => {\n    const [from, to] = segment.route.split('-');\n\n    // Check if this segment exists as consecutive airports in currentRoute\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return {\n          isValid: true,\n          index: i\n        };\n      }\n    }\n    return {\n      isValid: false,\n      index: -1\n    };\n  };\n\n  // Function to get all required segments for a date\n  const getRequiredSegments = existingSegments => {\n    // Create a map of existing segments for easy lookup\n    const segmentMap = new Map(existingSegments.map(segment => [segment.route, segment]));\n\n    // Generate all required segments\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: {\n          Y: false,\n          J: false,\n          F: false\n        },\n        // Default to all unavailable\n        index: i\n      };\n      allSegments.push(segment);\n    }\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n\n  // Function to sort segments by their position in the route\n  const sortSegments = segments => {\n    const validSegments = segments.map(segment => ({\n      ...segment,\n      ...isValidSegment(segment)\n    })).filter(segment => segment.isValid);\n    return getRequiredSegments(validSegments);\n  };\n\n  // Add function to check if any segment has availability\n  const hasAnyAvailability = segments => {\n    return segments.some(segment => segment.classes.Y || segment.classes.J || segment.classes.F);\n  };\n  const handleDateClick = dateString => {\n    if (!selectionStart) {\n      setSelectionStart(dateString);\n      setSelectionEnd(null);\n      setError('');\n    } else if (!selectionEnd) {\n      const start = dayjs(selectionStart);\n      const end = dayjs(dateString);\n      if (end.isBefore(start)) {\n        setError('End date cannot be before start date');\n        return;\n      }\n      if (end.diff(start, 'days') > 7) {\n        setError('Date range cannot exceed 7 days');\n        return;\n      }\n      setSelectionEnd(dateString);\n      onDateRangeSelect([start, end]);\n    } else {\n      setSelectionStart(dateString);\n      setSelectionEnd(null);\n      setError('');\n    }\n  };\n  const isDateInRange = dateString => {\n    if (!selectionStart || !selectionEnd) return false;\n    const date = dayjs(dateString);\n    const start = dayjs(selectionStart);\n    const end = dayjs(selectionEnd);\n    return date.isAfter(start.subtract(1, 'day')) && date.isBefore(end.add(1, 'day'));\n  };\n  const handleApplyClick = () => {\n    setShowCalendar(true);\n  };\n\n  // Get unique connection points from currentRoute (excluding first and last points)\n  const connectionOptions = currentRoute.slice(1, -1).map(airport => ({\n    label: airport,\n    value: airport\n  }));\n\n  // Add useEffect to show calendar when flightData changes\n  useEffect(() => {\n    if (flightData && Object.keys(flightData).length > 0) {\n      setShowCalendar(true);\n    }\n  }, [flightData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!showCalendar && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleApplyClick,\n      children: \"Show Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToPrevMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 4,\n          style: {\n            margin: 0\n          },\n          children: [monthNames[currentMonth], \" \", currentYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToNextMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          border: '1px solid #f0f0f0',\n          backgroundColor: '#f0f0f0',\n          gap: '1px',\n          fontFamily: 'Menlo, monospace'\n        },\n        children: [dayNames.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '8px',\n            textAlign: 'center',\n            fontWeight: '500'\n          },\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: firstDayOfMonth\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            minHeight: '120px',\n            padding: '8px'\n          }\n        }, `empty-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: daysInMonth\n        }).map((_, index) => {\n          const day = index + 1;\n          const dateString = formatDate(currentYear, currentMonth, day);\n          const flights = flightData[dateString] || [];\n          const validFlights = flights.length > 0 ? sortSegments(flights) : [];\n          const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\n          const isSelected = isDateInRange(dateString);\n          const isStart = dateString === selectionStart;\n          const isEnd = dateString === selectionEnd;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: isSelected ? '#e6f4ff' : 'white',\n              minHeight: '120px',\n              padding: '8px',\n              fontFamily: 'Menlo, monospace',\n              cursor: 'pointer',\n              border: isStart || isEnd ? '2px solid #1890ff' : 'none'\n            },\n            onClick: () => handleDateClick(dateString),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '8px',\n                fontSize: '13px'\n              },\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), showFlights ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px'\n              },\n              children: validFlights.map((segment, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '4px',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '14px',\n                    fontFamily: 'Menlo, monospace'\n                  },\n                  children: segment.route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 27\n                }, this), renderAvailabilityBadges(segment.route, segment.classes)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                color: '#999',\n                fontSize: '12px',\n                marginTop: '32px',\n                fontFamily: 'Menlo, monospace'\n              },\n              children: \"No flights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 21\n            }, this)]\n          }, `day-${day}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#ff4d4f',\n          marginTop: '16px',\n          textAlign: 'center'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '16px',\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stopover at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: 120\n            },\n            value: selectedConnection,\n            onChange: setSelectedConnection,\n            options: connectionOptions,\n            allowClear: true,\n            placeholder: \"Select city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), selectedConnection && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n              style: {\n                width: 60\n              },\n              min: 1,\n              max: 14,\n              value: stopoverDays,\n              onChange: setStopoverDays,\n              placeholder: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto',\n            display: 'flex',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: onSearch,\n            disabled: !selectionStart || !selectionEnd,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowCalendar(false),\n            children: \"Hide Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightAvailabilityCalendar, \"HYBEXVyoqeI0UyrdTbvUxTTJVTY=\");\n_c = FlightAvailabilityCalendar;\nexport default FlightAvailabilityCalendar;\nvar _c;\n$RefreshReg$(_c, \"FlightAvailabilityCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Typography","Badge","Select","InputNumber","dayjs","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","FlightAvailabilityCalendar","flightData","currentRoute","onDateRangeSelect","selectedRange","onSearch","_s","currentMonth","setCurrentMonth","month","currentYear","setCurrentYear","year","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","error","setError","showCalendar","setShowCalendar","selectedConnection","setSelectedConnection","stopoverDays","setStopoverDays","getDaysInMonth","daysInMonth","getFirstDayOfMonth","day","formatDate","format","firstDayOfMonth","goToPrevMonth","goToNextMonth","monthNames","dayNames","renderAvailabilityBadges","route","classes","getBackgroundColor","classCode","available","style","display","gap","children","Object","entries","map","backgroundColor","color","padding","borderRadius","fontSize","fontFamily","width","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","isValidSegment","segment","from","to","split","i","length","isValid","index","getRequiredSegments","existingSegments","segmentMap","Map","allSegments","get","Y","J","F","push","sort","a","b","sortSegments","segments","validSegments","filter","hasAnyAvailability","some","handleDateClick","dateString","start","end","isBefore","diff","isDateInRange","date","isAfter","subtract","add","handleApplyClick","connectionOptions","slice","airport","label","value","keys","onClick","justifyContent","alignItems","marginBottom","type","level","margin","gridTemplateColumns","border","fontWeight","Array","_","minHeight","flights","validFlights","showFlights","isSelected","isStart","isEnd","cursor","idx","marginTop","onChange","options","allowClear","placeholder","min","max","marginLeft","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nguyen77/docker-neo4j/route-builder-ac1/src/components/FlightSearch/FlightAvailabilityCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Card, Typography, Badge, Select, InputNumber } from 'antd';\r\nimport dayjs from 'dayjs';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst FlightAvailabilityCalendar = ({ flightData, currentRoute, onDateRangeSelect, selectedRange, onSearch }) => {\r\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\r\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\r\n  const [selectionStart, setSelectionStart] = useState(null);\r\n  const [selectionEnd, setSelectionEnd] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const [selectedConnection, setSelectedConnection] = useState(null);\r\n  const [stopoverDays, setStopoverDays] = useState(null);\r\n\r\n  // Get days in month\r\n  const getDaysInMonth = (year, month) => {\r\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\r\n  };\r\n\r\n  // Get first day of month (0 = Sunday, 1 = Monday, etc.)\r\n  const getFirstDayOfMonth = (year, month) => {\r\n    return dayjs(`${year}-${month + 1}-01`).day();\r\n  };\r\n\r\n  // Helper to format date as \"YYYY-MM-DD\"\r\n  const formatDate = (year, month, day) => {\r\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\r\n  };\r\n\r\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\r\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\r\n\r\n  // Previous and next month handlers\r\n  const goToPrevMonth = () => {\r\n    if (currentMonth === 0) {\r\n      setCurrentMonth(11);\r\n      setCurrentYear(currentYear - 1);\r\n    } else {\r\n      setCurrentMonth(currentMonth - 1);\r\n    }\r\n  };\r\n\r\n  const goToNextMonth = () => {\r\n    if (currentMonth === 11) {\r\n      setCurrentMonth(0);\r\n      setCurrentYear(currentYear + 1);\r\n    } else {\r\n      setCurrentMonth(currentMonth + 1);\r\n    }\r\n  };\r\n\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  // Function to render availability badges\r\n  const renderAvailabilityBadges = (route, classes) => {\r\n    // Helper function to get background color based on class code\r\n    const getBackgroundColor = (classCode, available) => {\r\n      if (!available) return 'transparent';\r\n      switch (classCode) {\r\n        case 'Y': return '#E8E1F2';\r\n        case 'J': return '#F3CD87';\r\n        case 'F': return '#D88A3F';\r\n        default: return 'transparent';\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ display: 'flex', gap: '2px' }}>\r\n        {Object.entries(classes).map(([classCode, available]) => (\r\n          <div\r\n            key={classCode}\r\n            style={{\r\n              backgroundColor: getBackgroundColor(classCode, available),\r\n              color: available ? '#684634' : '#999',\r\n              padding: '0px 4px',\r\n              borderRadius: '4px',\r\n              fontSize: '13px',\r\n              fontFamily: 'Menlo',\r\n              width: '20px',\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            {available ? classCode : '-'}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Function to check if a segment is valid for the current route\r\n  const isValidSegment = (segment) => {\r\n    const [from, to] = segment.route.split('-');\r\n    \r\n    // Check if this segment exists as consecutive airports in currentRoute\r\n    for (let i = 0; i < currentRoute.length - 1; i++) {\r\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\r\n        return { isValid: true, index: i };\r\n      }\r\n    }\r\n    return { isValid: false, index: -1 };\r\n  };\r\n\r\n  // Function to get all required segments for a date\r\n  const getRequiredSegments = (existingSegments) => {\r\n    // Create a map of existing segments for easy lookup\r\n    const segmentMap = new Map(\r\n      existingSegments.map(segment => [segment.route, segment])\r\n    );\r\n\r\n    // Generate all required segments\r\n    const allSegments = [];\r\n    for (let i = 0; i < currentRoute.length - 1; i++) {\r\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\r\n      const segment = segmentMap.get(route) || {\r\n        route,\r\n        classes: { Y: false, J: false, F: false }, // Default to all unavailable\r\n        index: i\r\n      };\r\n      allSegments.push(segment);\r\n    }\r\n\r\n    return allSegments.sort((a, b) => a.index - b.index);\r\n  };\r\n\r\n  // Function to sort segments by their position in the route\r\n  const sortSegments = (segments) => {\r\n    const validSegments = segments\r\n      .map(segment => ({\r\n        ...segment,\r\n        ...isValidSegment(segment)\r\n      }))\r\n      .filter(segment => segment.isValid);\r\n\r\n    return getRequiredSegments(validSegments);\r\n  };\r\n\r\n  // Add function to check if any segment has availability\r\n  const hasAnyAvailability = (segments) => {\r\n    return segments.some(segment => \r\n      segment.classes.Y || segment.classes.J || segment.classes.F\r\n    );\r\n  };\r\n\r\n  const handleDateClick = (dateString) => {\r\n    if (!selectionStart) {\r\n      setSelectionStart(dateString);\r\n      setSelectionEnd(null);\r\n      setError('');\r\n    } else if (!selectionEnd) {\r\n      const start = dayjs(selectionStart);\r\n      const end = dayjs(dateString);\r\n      \r\n      if (end.isBefore(start)) {\r\n        setError('End date cannot be before start date');\r\n        return;\r\n      }\r\n      \r\n      if (end.diff(start, 'days') > 7) {\r\n        setError('Date range cannot exceed 7 days');\r\n        return;\r\n      }\r\n\r\n      setSelectionEnd(dateString);\r\n      onDateRangeSelect([start, end]);\r\n    } else {\r\n      setSelectionStart(dateString);\r\n      setSelectionEnd(null);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const isDateInRange = (dateString) => {\r\n    if (!selectionStart || !selectionEnd) return false;\r\n    const date = dayjs(dateString);\r\n    const start = dayjs(selectionStart);\r\n    const end = dayjs(selectionEnd);\r\n    return date.isAfter(start.subtract(1, 'day')) && \r\n           date.isBefore(end.add(1, 'day'));\r\n  };\r\n\r\n  const handleApplyClick = () => {\r\n    setShowCalendar(true);\r\n  };\r\n\r\n  // Get unique connection points from currentRoute (excluding first and last points)\r\n  const connectionOptions = currentRoute\r\n    .slice(1, -1)\r\n    .map(airport => ({\r\n      label: airport,\r\n      value: airport\r\n    }));\r\n\r\n  // Add useEffect to show calendar when flightData changes\r\n  useEffect(() => {\r\n    if (flightData && Object.keys(flightData).length > 0) {\r\n      setShowCalendar(true);\r\n    }\r\n  }, [flightData]);\r\n\r\n  return (\r\n    <div>\r\n      {!showCalendar && (\r\n        <Button onClick={handleApplyClick}>\r\n          Show Calendar\r\n        </Button>\r\n      )}\r\n      \r\n      {showCalendar && (\r\n        <div style={{ padding: '20px' }}>\r\n          {/* Calendar header */}\r\n          <div style={{ \r\n            display: 'flex', \r\n            justifyContent: 'space-between', \r\n            alignItems: 'center', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <Button \r\n              type=\"primary\"\r\n              onClick={goToPrevMonth}\r\n              style={{ backgroundColor: '#1677ff' }}\r\n            >\r\n              &larr;\r\n            </Button>\r\n            <Title level={4} style={{ margin: 0 }}>{monthNames[currentMonth]} {currentYear}</Title>\r\n            <Button \r\n              type=\"primary\"\r\n              onClick={goToNextMonth}\r\n              style={{ backgroundColor: '#1677ff' }}\r\n            >\r\n              &rarr;\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Calendar grid */}\r\n          <div style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: 'repeat(7, 1fr)',\r\n            border: '1px solid #f0f0f0',\r\n            backgroundColor: '#f0f0f0',\r\n            gap: '1px',\r\n            fontFamily: 'Menlo, monospace'\r\n          }}>\r\n            {/* Day headers */}\r\n            {dayNames.map(day => (\r\n              <div key={day} style={{ \r\n                backgroundColor: '#f5f5f5',\r\n                padding: '8px',\r\n                textAlign: 'center',\r\n                fontWeight: '500'\r\n              }}>\r\n                {day}\r\n              </div>\r\n            ))}\r\n\r\n            {/* Calendar cells */}\r\n            {Array.from({ length: firstDayOfMonth }).map((_, index) => (\r\n              <div key={`empty-${index}`} style={{ \r\n                backgroundColor: 'white',\r\n                minHeight: '120px',\r\n                padding: '8px'\r\n              }} />\r\n            ))}\r\n\r\n            {Array.from({ length: daysInMonth }).map((_, index) => {\r\n              const day = index + 1;\r\n              const dateString = formatDate(currentYear, currentMonth, day);\r\n              const flights = flightData[dateString] || [];\r\n              const validFlights = flights.length > 0 ? sortSegments(flights) : [];\r\n              const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\r\n              const isSelected = isDateInRange(dateString);\r\n              const isStart = dateString === selectionStart;\r\n              const isEnd = dateString === selectionEnd;\r\n\r\n              return (\r\n                <div\r\n                  key={`day-${day}`}\r\n                  style={{\r\n                    backgroundColor: isSelected ? '#e6f4ff' : 'white',\r\n                    minHeight: '120px',\r\n                    padding: '8px',\r\n                    fontFamily: 'Menlo, monospace',\r\n                    cursor: 'pointer',\r\n                    border: isStart || isEnd ? '2px solid #1890ff' : 'none'\r\n                  }}\r\n                  onClick={() => handleDateClick(dateString)}\r\n                >\r\n                  <div style={{ \r\n                    fontWeight: 'bold', \r\n                    marginBottom: '8px',\r\n                    fontSize: '13px'\r\n                  }}>\r\n                    {day}\r\n                  </div>\r\n                  {showFlights ? (\r\n                    <div style={{ fontSize: '12px' }}>\r\n                      {validFlights.map((segment, idx) => (\r\n                        <div \r\n                          key={idx} \r\n                          style={{ \r\n                            marginBottom: '4px',\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center'\r\n                          }}\r\n                        >\r\n                          <div style={{ \r\n                            fontSize: '14px',\r\n                            fontFamily: 'Menlo, monospace'\r\n                          }}>\r\n                            {segment.route}\r\n                          </div>\r\n                          {renderAvailabilityBadges(segment.route, segment.classes)}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div style={{ \r\n                      textAlign: 'center', \r\n                      color: '#999', \r\n                      fontSize: '12px',\r\n                      marginTop: '32px',\r\n                      fontFamily: 'Menlo, monospace'\r\n                    }}>\r\n                      No flights\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {error && (\r\n            <div style={{ \r\n              color: '#ff4d4f', \r\n              marginTop: '16px',\r\n              textAlign: 'center' \r\n            }}>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ \r\n            marginTop: '16px',\r\n            display: 'flex',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n            gap: '8px'\r\n          }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n              <span>Stopover at</span>\r\n              <Select\r\n                style={{ width: 120 }}\r\n                value={selectedConnection}\r\n                onChange={setSelectedConnection}\r\n                options={connectionOptions}\r\n                allowClear\r\n                placeholder=\"Select city\"\r\n              />\r\n              {selectedConnection && (\r\n                <>\r\n                  <span>for</span>\r\n                  <InputNumber\r\n                    style={{ width: 60 }}\r\n                    min={1}\r\n                    max={14}\r\n                    value={stopoverDays}\r\n                    onChange={setStopoverDays}\r\n                    placeholder=\"Days\"\r\n                  />\r\n                  <span>days</span>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div style={{ marginLeft: 'auto', display: 'flex', gap: '8px' }}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={onSearch}\r\n                disabled={!selectionStart || !selectionEnd}\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button\r\n                onClick={() => setShowCalendar(false)}\r\n              >\r\n                Hide Calendar\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightAvailabilityCalendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}