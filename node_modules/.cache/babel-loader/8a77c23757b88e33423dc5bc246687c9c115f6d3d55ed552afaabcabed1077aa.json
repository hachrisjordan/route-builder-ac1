{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst FlightDetailsModal = ({\n  isVisible,\n  currentRoute,\n  onClose\n}) => {\n  _s();\n  var _selectedFlights$, _selectedFlights$$, _selectedFlights, _selectedFlights$2;\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    selectedFlights,\n    availabilityData,\n    isLoadingAvailability\n  } = useFlightDetails(getSegmentColumns);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isVisible) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isVisible]);\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n  const handleCancel = () => {\n    onClose();\n  };\n  const handleCalendarDateSelect = dateRange => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  // Function to group flights by segment with safety checks\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    // Group flights by segment and filter out hidden flights\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc; // Skip hidden flights\n\n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n    return Object.values(segments);\n  };\n\n  // Add pagination settings\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Flight Details\",\n    open: isVisible,\n    onCancel: handleCancel,\n    footer: null,\n    width: 1600,\n    styles: {\n      body: {\n        padding: '12px',\n        maxHeight: '90vh',\n        overflow: 'auto'\n      },\n      content: {\n        maxWidth: '100vw'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          marginBottom: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your yapping password (Under Development)\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            disabled: !apiKey || !apiKey.toLowerCase().startsWith('pro'),\n            onClick: () => handleCalendarSearch(currentRoute),\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), dateRangeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Please select a date range in the calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightAvailabilityCalendar, {\n      flightData: availabilityData,\n      currentRoute: currentRoute,\n      onDateRangeSelect: handleCalendarDateSelect,\n      selectedRange: selectedDates,\n      onSearch: handleCalendarSearchClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), isLoadingSegments ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this) : (segmentDetails === null || segmentDetails === void 0 ? void 0 : segmentDetails.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        style: {\n          marginBottom: 16\n        },\n        children: \"Flights By Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), getSegmentTables().map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n            level: 5,\n            style: {\n              margin: 0\n            },\n            children: [\"Segment \", segment.index + 1, \" (\", segment.route, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              size: \"small\",\n              total: segment.flights.length,\n              pageSize: paginationConfig.pageSize,\n              showSizeChanger: true,\n              showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n              style: {\n                display: 'inline-block',\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: segment.flights,\n          pagination: false // Remove pagination from table\n          ,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), index < getSegmentTables().length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '0px',\n            margin: '16px',\n            textAlign: 'center',\n            fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n            strong: true,\n            children: (() => {\n              const currentSegmentFlights = selectedFlights[segment.index];\n              const nextSegmentFlights = selectedFlights[segment.index + 1];\n              if (!(currentSegmentFlights !== null && currentSegmentFlights !== void 0 && currentSegmentFlights[0]) || !(nextSegmentFlights !== null && nextSegmentFlights !== void 0 && nextSegmentFlights[0])) {\n                return 'Select flights to see connection time';\n              }\n              const currentFlight = currentSegmentFlights[0];\n              const nextFlight = nextSegmentFlights[0];\n              const arrivalTime = dayjs(currentFlight.ArrivesAt);\n              const departureTime = dayjs(nextFlight.DepartsAt);\n              const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n\n              // If layover is more than 24 hours, show as stopover\n              if (layoverMinutes >= 24 * 60) {\n                const days = Math.floor(layoverMinutes / (24 * 60));\n                const remainingHours = Math.floor(layoverMinutes % (24 * 60) / 60);\n                const remainingMinutes = layoverMinutes % 60;\n                return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n              } else {\n                // Regular layover display\n                const hours = Math.floor(layoverMinutes / 60);\n                const minutes = layoverMinutes % 60;\n                return `Layover duration: ${hours}h ${minutes}m`;\n              }\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }, this)]\n      }, segment.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }, this), Object.keys(selectedFlights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: \"Journey Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: [{\n          title: 'From',\n          dataIndex: 'from',\n          key: 'from',\n          render: () => {\n            var _selectedFlights$firs;\n            const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n            const firstFlight = (_selectedFlights$firs = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs === void 0 ? void 0 : _selectedFlights$firs[0];\n            return (firstFlight === null || firstFlight === void 0 ? void 0 : firstFlight.from) || '-';\n          }\n        }, {\n          title: 'To',\n          dataIndex: 'to',\n          key: 'to'\n        }, {\n          title: 'Airlines',\n          dataIndex: 'airlines',\n          key: 'airlines',\n          render: airlinesList => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '4px'\n            },\n            children: airlinesList.split(', ').map(airlineName => {\n              const airline = airlines.find(a => airlineName.startsWith(a.label.replace(` (${a.value})`, '')));\n              const airlineCode = airline === null || airline === void 0 ? void 0 : airline.value;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${process.env.PUBLIC_URL}/${airlineCode}.png`,\n                  alt: airlineCode,\n                  style: {\n                    width: '24px',\n                    height: '24px',\n                    objectFit: 'contain',\n                    borderRadius: '4px'\n                  },\n                  onError: e => {\n                    e.target.style.display = 'none';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 27\n                }, this), airlineName]\n              }, airlineCode, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this)\n        }, {\n          title: 'Duration',\n          dataIndex: 'duration',\n          key: 'duration'\n        }, {\n          title: 'Departs',\n          dataIndex: 'departs',\n          key: 'departs'\n        }, {\n          title: 'Arrives',\n          dataIndex: 'arrives',\n          key: 'arrives'\n        }, {\n          title: 'Economy Price',\n          dataIndex: 'economyPrice',\n          key: 'economyPrice'\n        }, {\n          title: 'Business Price (Max %)',\n          dataIndex: 'businessPrice',\n          key: 'businessPrice',\n          render: (text, record) => {\n            if (text === 'N/A') return text;\n            const [price, percentage] = text.split(' (');\n            if (!percentage) return text;\n            return `${price} (${percentage}`;\n          }\n        }, {\n          title: 'First Price (Max %)',\n          dataIndex: 'firstPrice',\n          key: 'firstPrice',\n          render: (text, record) => {\n            if (text === 'N/A') return text;\n            const [price, percentage] = text.split(' (');\n            if (!percentage) return text;\n            return `${price} (${percentage}`;\n          }\n        }],\n        dataSource: [{\n          key: '1',\n          from: (_selectedFlights$firs2 => {\n            const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n            const firstFlight = (_selectedFlights$firs2 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs2 === void 0 ? void 0 : _selectedFlights$firs2[0];\n            return (firstFlight === null || firstFlight === void 0 ? void 0 : firstFlight.from) || '-';\n          })(),\n          to: (_selectedFlights$last => {\n            const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n            const lastFlight = (_selectedFlights$last = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last === void 0 ? void 0 : _selectedFlights$last[0];\n            return (lastFlight === null || lastFlight === void 0 ? void 0 : lastFlight.to) || '-';\n          })(),\n          airlines: [...new Set(Object.values(selectedFlights).flatMap(flights => flights.map(f => f.airlines)))].join(', '),\n          duration: (() => {\n            let totalMinutes = 0;\n            const segments = Object.keys(selectedFlights).sort((a, b) => parseInt(a) - parseInt(b));\n            segments.forEach(segmentIndex => {\n              const flight = selectedFlights[segmentIndex][0];\n              totalMinutes += parseInt(flight.duration);\n              const nextSegmentIndex = (parseInt(segmentIndex) + 1).toString();\n              if (selectedFlights[nextSegmentIndex]) {\n                const currentFlight = selectedFlights[segmentIndex][0];\n                const nextFlight = selectedFlights[nextSegmentIndex][0];\n                const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                const departureTime = dayjs(nextFlight.DepartsAt);\n                const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                totalMinutes += layoverMinutes;\n              }\n            });\n            const hours = Math.floor(totalMinutes / 60);\n            const minutes = totalMinutes % 60;\n            return `${hours}h ${minutes}m`;\n          })(),\n          departs: dayjs((_selectedFlights$ = selectedFlights[0]) === null || _selectedFlights$ === void 0 ? void 0 : (_selectedFlights$$ = _selectedFlights$[0]) === null || _selectedFlights$$ === void 0 ? void 0 : _selectedFlights$$.DepartsAt).format('HH:mm MM-DD'),\n          arrives: dayjs((_selectedFlights = selectedFlights[Object.keys(selectedFlights).length - 1]) === null || _selectedFlights === void 0 ? void 0 : (_selectedFlights$2 = _selectedFlights[0]) === null || _selectedFlights$2 === void 0 ? void 0 : _selectedFlights$2.ArrivesAt).format('HH:mm MM-DD'),\n          economyPrice: (() => {\n            // Get origin and destination airports\n            const originAirport = airports.find(a => {\n              var _selectedFlights$3, _selectedFlights$3$;\n              return a.IATA === ((_selectedFlights$3 = selectedFlights[0]) === null || _selectedFlights$3 === void 0 ? void 0 : (_selectedFlights$3$ = _selectedFlights$3[0]) === null || _selectedFlights$3$ === void 0 ? void 0 : _selectedFlights$3$.from);\n            });\n            const destAirport = airports.find(a => {\n              var _selectedFlights2, _selectedFlights2$;\n              return a.IATA === ((_selectedFlights2 = selectedFlights[Object.keys(selectedFlights).length - 1]) === null || _selectedFlights2 === void 0 ? void 0 : (_selectedFlights2$ = _selectedFlights2[0]) === null || _selectedFlights2$ === void 0 ? void 0 : _selectedFlights2$.to);\n            });\n            if (!originAirport || !destAirport) return '-';\n\n            // Calculate total distance\n            let totalDistance = 0;\n            Object.values(selectedFlights).forEach(flights => {\n              flights.forEach(flight => {\n                totalDistance += parseInt(flight.distance || 0);\n              });\n            });\n\n            // Find matching price in pricing data\n            const pricing = pricingData.find(p => p[\"From Region\"] === originAirport.Zone && p[\"To Region\"] === destAirport.Zone && totalDistance >= p[\"Min Distance\"] && totalDistance <= p[\"Max Distance\"]);\n            return pricing ? pricing.Economy.toLocaleString() : '-';\n          })(),\n          businessPrice: (() => {\n            const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n            const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n            const originAirport = airports.find(a => {\n              var _selectedFlights$firs3, _selectedFlights$firs4;\n              return a.IATA === ((_selectedFlights$firs3 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs3 === void 0 ? void 0 : (_selectedFlights$firs4 = _selectedFlights$firs3[0]) === null || _selectedFlights$firs4 === void 0 ? void 0 : _selectedFlights$firs4.from);\n            });\n            const destAirport = airports.find(a => {\n              var _selectedFlights$last2, _selectedFlights$last3;\n              return a.IATA === ((_selectedFlights$last2 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last2 === void 0 ? void 0 : (_selectedFlights$last3 = _selectedFlights$last2[0]) === null || _selectedFlights$last3 === void 0 ? void 0 : _selectedFlights$last3.to);\n            });\n            if (!originAirport || !destAirport) return '-';\n            let totalDistance = 0;\n            let businessDistance = 0;\n            Object.entries(selectedFlights).forEach(([index, flights]) => {\n              flights.forEach(flight => {\n                const distance = parseInt(flight.distance || 0);\n                totalDistance += distance;\n                if (flight.business) businessDistance += distance;\n              });\n            });\n            const businessPercentage = Math.round(businessDistance / totalDistance * 100);\n            const pricing = pricingData.find(p => p[\"From Region\"] === originAirport.Zone && p[\"To Region\"] === destAirport.Zone && totalDistance >= p[\"Min Distance\"] && totalDistance <= p[\"Max Distance\"]);\n            if (!pricing || !pricing.Business) return '-';\n            return `${pricing.Business.toLocaleString()} (${businessPercentage}% J)`;\n          })(),\n          firstPrice: (() => {\n            const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n            const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n            const originAirport = airports.find(a => {\n              var _selectedFlights$firs5, _selectedFlights$firs6;\n              return a.IATA === ((_selectedFlights$firs5 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs5 === void 0 ? void 0 : (_selectedFlights$firs6 = _selectedFlights$firs5[0]) === null || _selectedFlights$firs6 === void 0 ? void 0 : _selectedFlights$firs6.from);\n            });\n            const destAirport = airports.find(a => {\n              var _selectedFlights$last4, _selectedFlights$last5;\n              return a.IATA === ((_selectedFlights$last4 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last4 === void 0 ? void 0 : (_selectedFlights$last5 = _selectedFlights$last4[0]) === null || _selectedFlights$last5 === void 0 ? void 0 : _selectedFlights$last5.to);\n            });\n            if (!originAirport || !destAirport) return '-';\n            let totalDistance = 0;\n            let businessDistance = 0;\n            let firstDistance = 0;\n            Object.entries(selectedFlights).forEach(([index, flights]) => {\n              flights.forEach(flight => {\n                const distance = parseInt(flight.distance || 0);\n                totalDistance += distance;\n                if (flight.business && !flight.first) businessDistance += distance;\n                if (flight.first) firstDistance += distance;\n              });\n            });\n            const businessPercentage = Math.round(businessDistance / totalDistance * 100);\n            const firstPercentage = Math.round(firstDistance / totalDistance * 100);\n            const pricing = pricingData.find(p => p[\"From Region\"] === originAirport.Zone && p[\"To Region\"] === destAirport.Zone && totalDistance >= p[\"Min Distance\"] && totalDistance <= p[\"Max Distance\"]);\n\n            // Return '-' if there are no First Class segments or no pricing data\n            if (!pricing || !pricing.First || firstPercentage === 0) return '-';\n            let percentageText = '';\n            if (businessPercentage > 0 && firstPercentage > 0) {\n              percentageText = `${firstPercentage}% F, ${businessPercentage}% J)`;\n            } else if (firstPercentage > 0) {\n              percentageText = `${firstPercentage}% F)`;\n            } else {\n              percentageText = '0%)';\n            }\n            return `${pricing.First.toLocaleString()} (${percentageText}`;\n          })()\n        }],\n        pagination: false,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n          children: (() => {\n            const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n            const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n            const originAirport = airports.find(a => {\n              var _selectedFlights$firs7, _selectedFlights$firs8;\n              return a.IATA === ((_selectedFlights$firs7 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs7 === void 0 ? void 0 : (_selectedFlights$firs8 = _selectedFlights$firs7[0]) === null || _selectedFlights$firs8 === void 0 ? void 0 : _selectedFlights$firs8.from);\n            });\n            const destAirport = airports.find(a => {\n              var _selectedFlights$last6, _selectedFlights$last7;\n              return a.IATA === ((_selectedFlights$last6 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last6 === void 0 ? void 0 : (_selectedFlights$last7 = _selectedFlights$last6[0]) === null || _selectedFlights$last7 === void 0 ? void 0 : _selectedFlights$last7.to);\n            });\n            if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n            // Haversine formula\n            const R = 3959; // Earth's radius in miles\n            const lat1 = originAirport.Latitude * Math.PI / 180;\n            const lat2 = destAirport.Latitude * Math.PI / 180;\n            const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n            const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n            const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            const directDistance = Math.round(R * c);\n\n            // Calculate total segment distance\n            let totalSegmentDistance = 0;\n            Object.values(selectedFlights).forEach(flights => {\n              flights.forEach(flight => {\n                totalSegmentDistance += parseInt(flight.distance || 0);\n              });\n            });\n            const isValid = totalSegmentDistance <= 2 * directDistance;\n            const percentage = Math.round(totalSegmentDistance / directDistance * 100);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8,\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  color: isValid ? '#52c41a' : '#f5222d',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '8px',\n                  width: '100%'\n                },\n                children: isValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"ROUTING VALIDATED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2717\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"THIS ROUTING IS INVALID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetailsModal, \"jtObapP9L2kEIaLNZxXPSlgOMxk=\", false, function () {\n  return [useFlightDetails];\n});\n_c = FlightDetailsModal;\nexport default FlightDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"FlightDetailsModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","DatePicker","Input","Spin","Table","Button","Typography","Pagination","dayjs","getSegmentColumns","useFlightDetails","FlightAvailabilityCalendar","airlines","airports","pricingData","jsxDEV","_jsxDEV","Fragment","_Fragment","RangePicker","FlightDetailsModal","isVisible","currentRoute","onClose","_s","_selectedFlights$","_selectedFlights$$","_selectedFlights","_selectedFlights$2","dateRangeError","setDateRangeError","selectedDates","setSelectedDates","apiKey","setApiKey","segmentDetails","isLoadingSegments","handleDateSearch","handleCalendarSearch","resetDetails","columns","selectedFlights","availabilityData","isLoadingAvailability","handleOk","handleCancel","handleCalendarDateSelect","dateRange","handleCalendarSearchClick","startDate","endDate","stopoverInfo","console","log","JSON","stringify","getSegmentTables","length","segments","reduce","acc","flight","hidden","segmentIndex","index","route","from","to","flights","push","Object","values","paginationConfig","pageSize","showSizeChanger","showTotal","total","range","pageSizeOptions","position","title","open","onCancel","footer","width","styles","body","padding","maxHeight","overflow","content","maxWidth","children","style","marginBottom","display","gap","flex","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","toLowerCase","startsWith","onClick","color","flightData","onDateRangeSelect","selectedRange","onSearch","textAlign","margin","marginTop","Title","level","map","segment","justifyContent","alignItems","size","dataSource","pagination","fontFamily","Text","strong","currentSegmentFlights","nextSegmentFlights","currentFlight","nextFlight","arrivalTime","ArrivesAt","departureTime","DepartsAt","layoverMinutes","diff","days","Math","floor","remainingHours","remainingMinutes","hours","minutes","keys","dataIndex","key","render","_selectedFlights$firs","firstSegmentIndex","min","Number","firstFlight","airlinesList","flexDirection","split","airlineName","airline","find","a","label","replace","airlineCode","src","process","env","PUBLIC_URL","alt","height","objectFit","borderRadius","onError","text","record","price","percentage","_selectedFlights$firs2","_selectedFlights$last","lastSegmentIndex","max","lastFlight","Set","flatMap","f","join","duration","totalMinutes","sort","b","parseInt","forEach","nextSegmentIndex","toString","departs","format","arrives","economyPrice","originAirport","_selectedFlights$3","_selectedFlights$3$","IATA","destAirport","_selectedFlights2","_selectedFlights2$","totalDistance","distance","pricing","p","Zone","Economy","toLocaleString","businessPrice","_selectedFlights$firs3","_selectedFlights$firs4","_selectedFlights$last2","_selectedFlights$last3","businessDistance","entries","business","businessPercentage","round","Business","firstPrice","_selectedFlights$firs5","_selectedFlights$firs6","_selectedFlights$last4","_selectedFlights$last5","firstDistance","first","firstPercentage","First","percentageText","_selectedFlights$firs7","_selectedFlights$firs8","_selectedFlights$last6","_selectedFlights$last7","R","lat1","Latitude","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","directDistance","totalSegmentDistance","isValid","fontSize","fontWeight","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nconst { RangePicker } = DatePicker;\n\nconst FlightDetailsModal = ({ isVisible, currentRoute, onClose }) => {\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    selectedFlights,\n    availabilityData,\n    isLoadingAvailability,\n  } = useFlightDetails(getSegmentColumns);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isVisible) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isVisible]);\n\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleCalendarDateSelect = (dateRange) => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  // Function to group flights by segment with safety checks\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    // Group flights by segment and filter out hidden flights\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc; // Skip hidden flights\n      \n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n\n    return Object.values(segments);\n  };\n\n  // Add pagination settings\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n\n  return (\n    <Modal\n      title=\"Flight Details\"\n      open={isVisible}\n      onCancel={handleCancel}\n      footer={null}\n      width={1600}\n      styles={{\n        body: { \n          padding: '12px',\n          maxHeight: '90vh',\n          overflow: 'auto'\n        },\n        content: {\n          maxWidth: '100vw'\n        }\n      }}\n    >\n      <div style={{ marginBottom: 16 }}>\n        <div style={{ display: 'flex', gap: '8px', marginBottom: 16 }}>\n          <div style={{ display: 'flex', gap: '8px', flex: 1 }}>\n            <Input\n              placeholder=\"Enter your yapping password (Under Development)\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              style={{ flex: 1 }}\n            />\n            <Button\n              type=\"primary\"\n              disabled={!apiKey || !apiKey.toLowerCase().startsWith('pro')}\n              onClick={() => handleCalendarSearch(currentRoute)}\n            >\n              Apply\n            </Button>\n          </div>\n        </div>\n        {dateRangeError && (\n          <div style={{ color: 'red' }}>\n            Please select a date range in the calendar\n          </div>\n        )}\n      </div>\n\n      <FlightAvailabilityCalendar \n        flightData={availabilityData}\n        currentRoute={currentRoute}\n        onDateRangeSelect={handleCalendarDateSelect}\n        selectedRange={selectedDates}\n        onSearch={handleCalendarSearchClick}\n      />\n\n      {isLoadingSegments ? (\n        <div style={{ textAlign: 'center', margin: '20px 0' }}>\n          <Spin />\n        </div>\n      ) : (\n        segmentDetails?.length > 0 && (\n          <div style={{ marginTop: 0 }}>\n            <Typography.Title level={4} style={{ marginBottom: 16 }}>\n              Flights By Segment\n            </Typography.Title>\n            {getSegmentTables().map((segment, index) => (\n              <div key={segment.index} style={{ marginBottom: 16 }}>\n                <div style={{ \n                  display: 'flex', \n                  justifyContent: 'space-between', \n                  alignItems: 'center',\n                  marginBottom: 12 \n                }}>\n                  <Typography.Title level={5} style={{ margin: 0 }}>\n                    Segment {segment.index+1} ({segment.route}):\n                  </Typography.Title>\n                  <div>\n                    {/* Pagination controls */}\n                    <Pagination\n                      size=\"small\"\n                      total={segment.flights.length}\n                      pageSize={paginationConfig.pageSize}\n                      showSizeChanger={true}\n                      showTotal={(total, range) => `${range[0]}-${range[1]} of ${total}`}\n                      style={{ \n                        display: 'inline-block',\n                        marginBottom: 0\n                      }}\n                    />\n                  </div>\n                </div>\n                <Table\n                  columns={columns}\n                  dataSource={segment.flights}\n                  pagination={false} // Remove pagination from table\n                  size=\"small\"\n                />\n                \n                {/* Add layover duration if there's a next segment and flights are selected */}\n                {index < getSegmentTables().length - 1 && (\n                  <div style={{ \n                    padding: '0px',\n                    margin: '16px',\n                    textAlign: 'center',\n                    fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n                  }}>\n                    <Typography.Text strong>\n                      {(() => {\n                        const currentSegmentFlights = selectedFlights[segment.index];\n                        const nextSegmentFlights = selectedFlights[segment.index + 1];\n                        \n                        if (!currentSegmentFlights?.[0] || !nextSegmentFlights?.[0]) {\n                          return 'Select flights to see connection time';\n                        }\n\n                        const currentFlight = currentSegmentFlights[0];\n                        const nextFlight = nextSegmentFlights[0];\n                        \n                        const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                        const departureTime = dayjs(nextFlight.DepartsAt);\n                        const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                        \n                        // If layover is more than 24 hours, show as stopover\n                        if (layoverMinutes >= 24 * 60) {\n                          const days = Math.floor(layoverMinutes / (24 * 60));\n                          const remainingHours = Math.floor((layoverMinutes % (24 * 60)) / 60);\n                          const remainingMinutes = layoverMinutes % 60;\n                          \n                          return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n                        } else {\n                          // Regular layover display\n                          const hours = Math.floor(layoverMinutes / 60);\n                          const minutes = layoverMinutes % 60;\n                          return `Layover duration: ${hours}h ${minutes}m`;\n                        }\n                      })()}\n                    </Typography.Text>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )\n      )}\n\n      {/* Add Summary Table */}\n      {Object.keys(selectedFlights).length > 0 && (\n        <div style={{ marginTop: 24 }}>\n          <Typography.Title level={4}>Journey Summary</Typography.Title>\n          <Table\n            columns={[\n              {\n                title: 'From',\n                dataIndex: 'from',\n                key: 'from',\n                render: () => {\n                  const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                  const firstFlight = selectedFlights[firstSegmentIndex]?.[0];\n                  return firstFlight?.from || '-';\n                }\n              },\n              {\n                title: 'To',\n                dataIndex: 'to',\n                key: 'to',\n              },\n              {\n                title: 'Airlines',\n                dataIndex: 'airlines',\n                key: 'airlines',\n                render: (airlinesList) => (\n                  <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n                    {airlinesList.split(', ').map(airlineName => {\n                      const airline = airlines.find(a => airlineName.startsWith(a.label.replace(` (${a.value})`, '')));\n                      const airlineCode = airline?.value;\n                      return (\n                        <div key={airlineCode} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                          <img \n                            src={`${process.env.PUBLIC_URL}/${airlineCode}.png`}\n                            alt={airlineCode}\n                            style={{ \n                              width: '24px', \n                              height: '24px',\n                              objectFit: 'contain',\n                              borderRadius: '4px'\n                            }} \n                            onError={(e) => {\n                              e.target.style.display = 'none';\n                            }}\n                          />\n                          {airlineName}\n                        </div>\n                      );\n                    })}\n                  </div>\n                ),\n              },\n              {\n                title: 'Duration',\n                dataIndex: 'duration',\n                key: 'duration',\n              },\n              {\n                title: 'Departs',\n                dataIndex: 'departs',\n                key: 'departs',\n              },\n              {\n                title: 'Arrives',\n                dataIndex: 'arrives',\n                key: 'arrives',\n              },\n              {\n                title: 'Economy Price',\n                dataIndex: 'economyPrice',\n                key: 'economyPrice',\n              },\n              {\n                title: 'Business Price (Max %)',\n                dataIndex: 'businessPrice',\n                key: 'businessPrice',\n                render: (text, record) => {\n                  if (text === 'N/A') return text;\n                  const [price, percentage] = text.split(' (');\n                  if (!percentage) return text;\n                  return `${price} (${percentage}`;\n                }\n              },\n              {\n                title: 'First Price (Max %)',\n                dataIndex: 'firstPrice',\n                key: 'firstPrice',\n                render: (text, record) => {\n                  if (text === 'N/A') return text;\n                  const [price, percentage] = text.split(' (');\n                  if (!percentage) return text;\n                  return `${price} (${percentage}`;\n                }\n              },\n            ]}\n            dataSource={[{\n              key: '1',\n              from: (() => {\n                const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                const firstFlight = selectedFlights[firstSegmentIndex]?.[0];\n                return firstFlight?.from || '-';\n              })(),\n              to: (() => {\n                const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n                const lastFlight = selectedFlights[lastSegmentIndex]?.[0];\n                return lastFlight?.to || '-';\n              })(),\n              airlines: [...new Set(Object.values(selectedFlights).flatMap(flights => \n                flights.map(f => f.airlines)\n              ))].join(', '),\n              duration: (() => {\n                let totalMinutes = 0;\n                const segments = Object.keys(selectedFlights).sort((a, b) => parseInt(a) - parseInt(b));\n                \n                segments.forEach(segmentIndex => {\n                  const flight = selectedFlights[segmentIndex][0];\n                  totalMinutes += parseInt(flight.duration);\n                  \n                  const nextSegmentIndex = (parseInt(segmentIndex) + 1).toString();\n                  if (selectedFlights[nextSegmentIndex]) {\n                    const currentFlight = selectedFlights[segmentIndex][0];\n                    const nextFlight = selectedFlights[nextSegmentIndex][0];\n                    \n                    const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                    const departureTime = dayjs(nextFlight.DepartsAt);\n                    const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                    \n                    totalMinutes += layoverMinutes;\n                  }\n                });\n                \n                const hours = Math.floor(totalMinutes / 60);\n                const minutes = totalMinutes % 60;\n                return `${hours}h ${minutes}m`;\n              })(),\n              departs: dayjs(selectedFlights[0]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n              arrives: dayjs(selectedFlights[Object.keys(selectedFlights).length - 1]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n              economyPrice: (() => {\n                // Get origin and destination airports\n                const originAirport = airports.find(a => a.IATA === selectedFlights[0]?.[0]?.from);\n                const destAirport = airports.find(a => a.IATA === selectedFlights[Object.keys(selectedFlights).length - 1]?.[0]?.to);\n                \n                if (!originAirport || !destAirport) return '-';\n\n                // Calculate total distance\n                let totalDistance = 0;\n                Object.values(selectedFlights).forEach(flights => {\n                  flights.forEach(flight => {\n                    totalDistance += parseInt(flight.distance || 0);\n                  });\n                });\n\n                // Find matching price in pricing data\n                const pricing = pricingData.find(p => \n                  p[\"From Region\"] === originAirport.Zone &&\n                  p[\"To Region\"] === destAirport.Zone &&\n                  totalDistance >= p[\"Min Distance\"] &&\n                  totalDistance <= p[\"Max Distance\"]\n                );\n\n                return pricing ? pricing.Economy.toLocaleString() : '-';\n              })(),\n              businessPrice: (() => {\n                const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n                const originAirport = airports.find(a => a.IATA === selectedFlights[firstSegmentIndex]?.[0]?.from);\n                const destAirport = airports.find(a => a.IATA === selectedFlights[lastSegmentIndex]?.[0]?.to);\n                \n                if (!originAirport || !destAirport) return '-';\n\n                let totalDistance = 0;\n                let businessDistance = 0;\n\n                Object.entries(selectedFlights).forEach(([index, flights]) => {\n                  flights.forEach(flight => {\n                    const distance = parseInt(flight.distance || 0);\n                    totalDistance += distance;\n                    if (flight.business) businessDistance += distance;\n                  });\n                });\n\n                const businessPercentage = Math.round((businessDistance / totalDistance) * 100);\n\n                const pricing = pricingData.find(p => \n                  p[\"From Region\"] === originAirport.Zone &&\n                  p[\"To Region\"] === destAirport.Zone &&\n                  totalDistance >= p[\"Min Distance\"] &&\n                  totalDistance <= p[\"Max Distance\"]\n                );\n\n                if (!pricing || !pricing.Business) return '-';\n                return `${pricing.Business.toLocaleString()} (${businessPercentage}% J)`;\n              })(),\n              firstPrice: (() => {\n                const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n                const originAirport = airports.find(a => a.IATA === selectedFlights[firstSegmentIndex]?.[0]?.from);\n                const destAirport = airports.find(a => a.IATA === selectedFlights[lastSegmentIndex]?.[0]?.to);\n                \n                if (!originAirport || !destAirport) return '-';\n\n                let totalDistance = 0;\n                let businessDistance = 0;\n                let firstDistance = 0;\n\n                Object.entries(selectedFlights).forEach(([index, flights]) => {\n                  flights.forEach(flight => {\n                    const distance = parseInt(flight.distance || 0);\n                    totalDistance += distance;\n                    if (flight.business && !flight.first) businessDistance += distance;\n                    if (flight.first) firstDistance += distance;\n                  });\n                });\n\n                const businessPercentage = Math.round((businessDistance / totalDistance) * 100);\n                const firstPercentage = Math.round((firstDistance / totalDistance) * 100);\n\n                const pricing = pricingData.find(p => \n                  p[\"From Region\"] === originAirport.Zone &&\n                  p[\"To Region\"] === destAirport.Zone &&\n                  totalDistance >= p[\"Min Distance\"] &&\n                  totalDistance <= p[\"Max Distance\"]\n                );\n\n                // Return '-' if there are no First Class segments or no pricing data\n                if (!pricing || !pricing.First || firstPercentage === 0) return '-';\n\n                let percentageText = '';\n                if (businessPercentage > 0 && firstPercentage > 0) {\n                  percentageText = `${firstPercentage}% F, ${businessPercentage}% J)`;\n                } else if (firstPercentage > 0) {\n                  percentageText = `${firstPercentage}% F)`;\n                } else {\n                  percentageText = '0%)';\n                }\n\n                return `${pricing.First.toLocaleString()} (${percentageText}`;\n              })(),\n            }]}\n            pagination={false}\n            size=\"small\"\n          />\n          \n          {/* Add Route Validation */}\n          <div style={{ marginTop: 12, fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace' }}>\n            <Typography.Text>\n              {(() => {\n                const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n                const originAirport = airports.find(a => a.IATA === selectedFlights[firstSegmentIndex]?.[0]?.from);\n                const destAirport = airports.find(a => a.IATA === selectedFlights[lastSegmentIndex]?.[0]?.to);\n\n                if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n                // Haversine formula\n                const R = 3959; // Earth's radius in miles\n                const lat1 = originAirport.Latitude * Math.PI / 180;\n                const lat2 = destAirport.Latitude * Math.PI / 180;\n                const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n                const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n                const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n                          Math.cos(lat1) * Math.cos(lat2) *\n                          Math.sin(dLon/2) * Math.sin(dLon/2);\n                \n                const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n                const directDistance = Math.round(R * c);\n\n                // Calculate total segment distance\n                let totalSegmentDistance = 0;\n                Object.values(selectedFlights).forEach(flights => {\n                  flights.forEach(flight => {\n                    totalSegmentDistance += parseInt(flight.distance || 0);\n                  });\n                });\n\n                const isValid = totalSegmentDistance <= (2 * directDistance);\n                const percentage = Math.round(totalSegmentDistance/directDistance * 100);\n\n                return (\n                  <>\n                    <div style={{ \n                      marginTop: 8,\n                      fontSize: '16px',\n                      fontWeight: 'bold',\n                      color: isValid ? '#52c41a' : '#f5222d',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      gap: '8px',\n                      width: '100%'\n                    }}>\n                      {isValid ? (\n                        <>\n                          <span>✓</span>\n                          <span>ROUTING VALIDATED</span>\n                        </>\n                      ) : (\n                        <>\n                          <span>✗</span>\n                          <span>THIS ROUTING IS INVALID</span>\n                        </>\n                      )}\n                    </div>\n                  </>\n                );\n              })()}\n            </Typography.Text>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `}</style>\n    </Modal>\n  );\n};\n\nexport default FlightDetailsModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}