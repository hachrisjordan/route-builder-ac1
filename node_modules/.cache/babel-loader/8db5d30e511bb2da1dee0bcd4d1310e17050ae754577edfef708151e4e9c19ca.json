{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguyen77\\\\docker-neo4j\\\\route-builder-ac1\\\\src\\\\components\\\\FlightSearch\\\\columns.js\";\nimport { Tag } from 'antd';\nimport { Button } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getResultColumns = onRouteSelect => [{\n  title: '',\n  key: 'actions',\n  width: 20,\n  render: (_, record) => /*#__PURE__*/_jsxDEV(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }, this),\n    onClick: () => {\n      const fullRoute = [record.departure, ...record.connections, record.arrival];\n      onRouteSelect(fullRoute);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this)\n}, {\n  title: 'Origin',\n  dataIndex: 'departure',\n  sorter: (a, b) => a.departure.localeCompare(b.departure),\n  width: 80\n}, {\n  title: 'Connections',\n  key: 'connections',\n  render: (_, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: record.connections.length > 0 ? record.connections.join(' → ') : '-'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this),\n  width: 200,\n  sorter: (a, b) => {\n    if (a.connections.length !== b.connections.length) {\n      return a.connections.length - b.connections.length;\n    }\n    return a.connections.join('').localeCompare(b.connections.join(''));\n  },\n  sortDirections: ['ascend', 'descend']\n}, {\n  title: 'Destination',\n  dataIndex: 'arrival',\n  sorter: (a, b) => a.arrival.localeCompare(b.arrival),\n  width: 80\n}, {\n  title: 'Stops',\n  dataIndex: 'numConnections',\n  sorter: (a, b) => a.numConnections - b.numConnections,\n  render: num => {\n    let color;\n    switch (num) {\n      case 0:\n        color = 'green';\n        break;\n      case 1:\n        color = 'blue';\n        break;\n      case 2:\n        color = 'orange';\n        break;\n      case 3:\n        color = 'gold';\n        break;\n      default:\n        color = 'red';\n    }\n    return /*#__PURE__*/_jsxDEV(Tag, {\n      color: color,\n      children: num === 0 ? 'Direct' : `${num} Stop${num > 1 ? 's' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  },\n  width: 80\n}, {\n  title: 'Distance',\n  dataIndex: 'totalDistance',\n  sorter: (a, b) => a.totalDistance - b.totalDistance,\n  render: distance => distance.toLocaleString(),\n  width: 60,\n  align: 'right'\n}, {\n  title: 'Economy',\n  dataIndex: 'YPrice',\n  sorter: (a, b) => a.YPrice - b.YPrice,\n  render: price => price.toLocaleString(),\n  width: 80,\n  align: 'right'\n}, {\n  title: 'Business',\n  dataIndex: 'JPrice',\n  sorter: (a, b) => a.JPrice - b.JPrice,\n  render: price => price.toLocaleString(),\n  width: 80,\n  align: 'right'\n}, {\n  title: 'First',\n  dataIndex: 'FPrice',\n  sorter: (a, b) => a.FPrice - b.FPrice,\n  render: price => price.toLocaleString(),\n  width: 80,\n  align: 'right'\n}, {\n  title: 'Y %',\n  dataIndex: 'Ynet',\n  width: 160,\n  render: text => text || '-',\n  sorter: (a, b) => {\n    const getPercent = str => {\n      if (!str) return 0;\n      const match = str.match(/^(-?\\d+)/);\n      return match ? parseInt(match[0]) : 0;\n    };\n    return getPercent(a.Ynet) - getPercent(b.Ynet);\n  }\n}, {\n  title: 'J %',\n  dataIndex: 'Jnet',\n  width: 160,\n  render: text => text || '-',\n  sorter: (a, b) => {\n    const getPercent = str => {\n      if (!str) return 0;\n      const match = str.match(/^(-?\\d+)/);\n      return match ? parseInt(match[0]) : 0;\n    };\n    return getPercent(a.Jnet) - getPercent(b.Jnet);\n  }\n}, {\n  title: 'F %',\n  dataIndex: 'Fnet',\n  width: 160,\n  render: text => text || '-',\n  sorter: (a, b) => {\n    const getPercent = str => {\n      if (!str) return 0;\n      const match = str.match(/^(-?\\d+)/);\n      return match ? parseInt(match[0]) : 0;\n    };\n    return getPercent(a.Fnet) - getPercent(b.Fnet);\n  }\n}];\nexport const getSegmentColumns = () => [{\n  title: 'From',\n  dataIndex: 'from',\n  width: 80,\n  sorter: (a, b) => a.from.localeCompare(b.from)\n}, {\n  title: 'To',\n  dataIndex: 'to',\n  width: 80,\n  sorter: (a, b) => a.to.localeCompare(b.to)\n}\n// ... other segment columns remain the same as in the original file\n];","map":{"version":3,"names":["Tag","Button","DownOutlined","jsxDEV","_jsxDEV","getResultColumns","onRouteSelect","title","key","width","render","_","record","type","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fullRoute","departure","connections","arrival","dataIndex","sorter","a","b","localeCompare","children","length","join","sortDirections","numConnections","num","color","totalDistance","distance","toLocaleString","align","YPrice","price","JPrice","FPrice","text","getPercent","str","match","parseInt","Ynet","Jnet","Fnet","getSegmentColumns","from","to"],"sources":["C:/Users/nguyen77/docker-neo4j/route-builder-ac1/src/components/FlightSearch/columns.js"],"sourcesContent":["import { Tag } from 'antd';\r\nimport { Button } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nexport const getResultColumns = (onRouteSelect) => [\r\n  {\r\n    title: '',\r\n    key: 'actions',\r\n    width: 20,\r\n    render: (_, record) => (\r\n      <Button \r\n        type=\"link\" \r\n        icon={<DownOutlined />}\r\n        onClick={() => {\r\n          const fullRoute = [record.departure, ...record.connections, record.arrival];\r\n          onRouteSelect(fullRoute);\r\n        }}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: 'Origin',\r\n    dataIndex: 'departure',\r\n    sorter: (a, b) => a.departure.localeCompare(b.departure),\r\n    width: 80,\r\n  },\r\n  {\r\n    title: 'Connections',\r\n    key: 'connections',\r\n    render: (_, record) => (\r\n      <span>\r\n        {record.connections.length > 0 \r\n          ? record.connections.join(' → ')\r\n          : '-'}\r\n      </span>\r\n    ),\r\n    width: 200,\r\n    sorter: (a, b) => {\r\n      if (a.connections.length !== b.connections.length) {\r\n        return a.connections.length - b.connections.length;\r\n      }\r\n      return a.connections.join('').localeCompare(b.connections.join(''));\r\n    },\r\n    sortDirections: ['ascend', 'descend'],\r\n  },\r\n  {\r\n    title: 'Destination',\r\n    dataIndex: 'arrival',\r\n    sorter: (a, b) => a.arrival.localeCompare(b.arrival),\r\n    width: 80,\r\n  },\r\n  {\r\n    title: 'Stops',\r\n    dataIndex: 'numConnections',\r\n    sorter: (a, b) => a.numConnections - b.numConnections,\r\n    render: (num) => {\r\n      let color;\r\n      switch (num) {\r\n        case 0: color = 'green'; break;\r\n        case 1: color = 'blue'; break;\r\n        case 2: color = 'orange'; break;\r\n        case 3: color = 'gold'; break;\r\n        default: color = 'red';\r\n      }\r\n      return (\r\n        <Tag color={color}>\r\n          {num === 0 ? 'Direct' : `${num} Stop${num > 1 ? 's' : ''}`}\r\n        </Tag>\r\n      );\r\n    },\r\n    width: 80,\r\n  },\r\n  {\r\n    title: 'Distance',\r\n    dataIndex: 'totalDistance',\r\n    sorter: (a, b) => a.totalDistance - b.totalDistance,\r\n    render: (distance) => distance.toLocaleString(),\r\n    width: 60,\r\n    align: 'right',\r\n  },\r\n  {\r\n    title: 'Economy',\r\n    dataIndex: 'YPrice',\r\n    sorter: (a, b) => a.YPrice - b.YPrice,\r\n    render: (price) => price.toLocaleString(),\r\n    width: 80,\r\n    align: 'right',\r\n  },\r\n  {\r\n    title: 'Business',\r\n    dataIndex: 'JPrice',\r\n    sorter: (a, b) => a.JPrice - b.JPrice,\r\n    render: (price) => price.toLocaleString(),\r\n    width: 80,\r\n    align: 'right',\r\n  },\r\n  {\r\n    title: 'First',\r\n    dataIndex: 'FPrice',\r\n    sorter: (a, b) => a.FPrice - b.FPrice,\r\n    render: (price) => price.toLocaleString(),\r\n    width: 80,\r\n    align: 'right',\r\n  },\r\n  {\r\n    title: 'Y %',\r\n    dataIndex: 'Ynet',\r\n    width: 160,\r\n    render: (text) => text || '-',\r\n    sorter: (a, b) => {\r\n      const getPercent = (str) => {\r\n        if (!str) return 0;\r\n        const match = str.match(/^(-?\\d+)/);\r\n        return match ? parseInt(match[0]) : 0;\r\n      };\r\n      return getPercent(a.Ynet) - getPercent(b.Ynet);\r\n    },\r\n  },\r\n  {\r\n    title: 'J %',\r\n    dataIndex: 'Jnet',\r\n    width: 160,\r\n    render: (text) => text || '-',\r\n    sorter: (a, b) => {\r\n      const getPercent = (str) => {\r\n        if (!str) return 0;\r\n        const match = str.match(/^(-?\\d+)/);\r\n        return match ? parseInt(match[0]) : 0;\r\n      };\r\n      return getPercent(a.Jnet) - getPercent(b.Jnet);\r\n    },\r\n  },\r\n  {\r\n    title: 'F %',\r\n    dataIndex: 'Fnet',\r\n    width: 160,\r\n    render: (text) => text || '-',\r\n    sorter: (a, b) => {\r\n      const getPercent = (str) => {\r\n        if (!str) return 0;\r\n        const match = str.match(/^(-?\\d+)/);\r\n        return match ? parseInt(match[0]) : 0;\r\n      };\r\n      return getPercent(a.Fnet) - getPercent(b.Fnet);\r\n    },\r\n  }\r\n];\r\n\r\nexport const getSegmentColumns = () => [\r\n  { \r\n    title: 'From', \r\n    dataIndex: 'from', \r\n    width: 80,\r\n    sorter: (a, b) => a.from.localeCompare(b.from)\r\n  },\r\n  { \r\n    title: 'To', \r\n    dataIndex: 'to', \r\n    width: 80,\r\n    sorter: (a, b) => a.to.localeCompare(b.to)\r\n  },\r\n  // ... other segment columns remain the same as in the original file\r\n]; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}