{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguyen77\\\\docker-neo4j\\\\route-builder-ac1\\\\src\\\\components\\\\FlightSearch\\\\columns.js\";\nimport { Tag } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getResultColumns = onRouteSelect => [{\n  title: 'Origin',\n  dataIndex: 'departure',\n  sorter: (a, b) => a.departure.localeCompare(b.departure),\n  width: 80\n}, {\n  title: 'Connections',\n  key: 'connections',\n  render: (_, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: record.connections.length > 0 ? record.connections.join(' → ') : '-'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this),\n  width: 200,\n  sorter: (a, b) => {\n    if (a.connections.length !== b.connections.length) {\n      return a.connections.length - b.connections.length;\n    }\n    return a.connections.join('').localeCompare(b.connections.join(''));\n  },\n  sortDirections: ['ascend', 'descend']\n}, {\n  title: 'Destination',\n  dataIndex: 'arrival',\n  sorter: (a, b) => a.arrival.localeCompare(b.arrival),\n  width: 80\n}, {\n  title: 'Stops',\n  dataIndex: 'numConnections',\n  sorter: (a, b) => a.numConnections - b.numConnections,\n  render: num => {\n    let color;\n    switch (num) {\n      case 0:\n        color = 'green';\n        break;\n      case 1:\n        color = 'blue';\n        break;\n      case 2:\n        color = 'orange';\n        break;\n      case 3:\n        color = 'gold';\n        break;\n      default:\n        color = 'red';\n    }\n    return /*#__PURE__*/_jsxDEV(Tag, {\n      color: color,\n      children: num === 0 ? 'Direct' : `${num} Stop${num > 1 ? 's' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  },\n  width: 80\n}, {\n  title: 'Distance',\n  dataIndex: 'totalDistance',\n  sorter: (a, b) => a.totalDistance - b.totalDistance,\n  render: distance => distance.toLocaleString(),\n  width: 60,\n  align: 'right'\n}, {\n  title: 'Economy',\n  dataIndex: 'YPrice',\n  sorter: (a, b) => a.YPrice - b.YPrice,\n  render: price => price.toLocaleString(),\n  width: 80,\n  align: 'right'\n}, {\n  title: 'Business',\n  dataIndex: 'JPrice',\n  sorter: (a, b) => a.JPrice - b.JPrice,\n  render: price => price.toLocaleString(),\n  width: 80,\n  align: 'right'\n}, {\n  title: 'First',\n  dataIndex: 'FPrice',\n  sorter: (a, b) => a.FPrice - b.FPrice,\n  render: price => price.toLocaleString(),\n  width: 80,\n  align: 'right'\n}, {\n  title: 'Y %',\n  dataIndex: 'Ynet',\n  width: 160,\n  render: text => text || '-',\n  sorter: (a, b) => {\n    const getPercent = str => {\n      if (!str) return 0;\n      const match = str.match(/^(-?\\d+)/);\n      return match ? parseInt(match[0]) : 0;\n    };\n    return getPercent(a.Ynet) - getPercent(b.Ynet);\n  }\n}, {\n  title: 'J %',\n  dataIndex: 'Jnet',\n  width: 160,\n  render: text => text || '-',\n  sorter: (a, b) => {\n    const getPercent = str => {\n      if (!str) return 0;\n      const match = str.match(/^(-?\\d+)/);\n      return match ? parseInt(match[0]) : 0;\n    };\n    return getPercent(a.Jnet) - getPercent(b.Jnet);\n  }\n}, {\n  title: 'F %',\n  dataIndex: 'Fnet',\n  width: 160,\n  render: text => text || '-',\n  sorter: (a, b) => {\n    const getPercent = str => {\n      if (!str) return 0;\n      const match = str.match(/^(-?\\d+)/);\n      return match ? parseInt(match[0]) : 0;\n    };\n    return getPercent(a.Fnet) - getPercent(b.Fnet);\n  }\n}];\nexport const getSegmentColumns = () => [{\n  title: 'From',\n  dataIndex: 'from',\n  width: 80,\n  sorter: (a, b) => a.from.localeCompare(b.from)\n}, {\n  title: 'To',\n  dataIndex: 'to',\n  width: 80,\n  sorter: (a, b) => a.to.localeCompare(b.to)\n}\n// ... other segment columns remain the same as in the original file\n];","map":{"version":3,"names":["Tag","jsxDEV","_jsxDEV","getResultColumns","onRouteSelect","title","dataIndex","sorter","a","b","departure","localeCompare","width","key","render","_","record","children","connections","length","join","fileName","_jsxFileName","lineNumber","columnNumber","sortDirections","arrival","numConnections","num","color","totalDistance","distance","toLocaleString","align","YPrice","price","JPrice","FPrice","text","getPercent","str","match","parseInt","Ynet","Jnet","Fnet","getSegmentColumns","from","to"],"sources":["C:/Users/nguyen77/docker-neo4j/route-builder-ac1/src/components/FlightSearch/columns.js"],"sourcesContent":["import { Tag } from 'antd';\r\n\r\nexport const getResultColumns = (onRouteSelect) => [\r\n  {\r\n    title: 'Origin',\r\n    dataIndex: 'departure',\r\n    sorter: (a, b) => a.departure.localeCompare(b.departure),\r\n    width: 80,\r\n  },\r\n  {\r\n    title: 'Connections',\r\n    key: 'connections',\r\n    render: (_, record) => (\r\n      <span>\r\n        {record.connections.length > 0 \r\n          ? record.connections.join(' → ')\r\n          : '-'}\r\n      </span>\r\n    ),\r\n    width: 200,\r\n    sorter: (a, b) => {\r\n      if (a.connections.length !== b.connections.length) {\r\n        return a.connections.length - b.connections.length;\r\n      }\r\n      return a.connections.join('').localeCompare(b.connections.join(''));\r\n    },\r\n    sortDirections: ['ascend', 'descend'],\r\n  },\r\n  {\r\n    title: 'Destination',\r\n    dataIndex: 'arrival',\r\n    sorter: (a, b) => a.arrival.localeCompare(b.arrival),\r\n    width: 80,\r\n  },\r\n  {\r\n    title: 'Stops',\r\n    dataIndex: 'numConnections',\r\n    sorter: (a, b) => a.numConnections - b.numConnections,\r\n    render: (num) => {\r\n      let color;\r\n      switch (num) {\r\n        case 0: color = 'green'; break;\r\n        case 1: color = 'blue'; break;\r\n        case 2: color = 'orange'; break;\r\n        case 3: color = 'gold'; break;\r\n        default: color = 'red';\r\n      }\r\n      return (\r\n        <Tag color={color}>\r\n          {num === 0 ? 'Direct' : `${num} Stop${num > 1 ? 's' : ''}`}\r\n        </Tag>\r\n      );\r\n    },\r\n    width: 80,\r\n  },\r\n  {\r\n    title: 'Distance',\r\n    dataIndex: 'totalDistance',\r\n    sorter: (a, b) => a.totalDistance - b.totalDistance,\r\n    render: (distance) => distance.toLocaleString(),\r\n    width: 60,\r\n    align: 'right',\r\n  },\r\n  {\r\n    title: 'Economy',\r\n    dataIndex: 'YPrice',\r\n    sorter: (a, b) => a.YPrice - b.YPrice,\r\n    render: (price) => price.toLocaleString(),\r\n    width: 80,\r\n    align: 'right',\r\n  },\r\n  {\r\n    title: 'Business',\r\n    dataIndex: 'JPrice',\r\n    sorter: (a, b) => a.JPrice - b.JPrice,\r\n    render: (price) => price.toLocaleString(),\r\n    width: 80,\r\n    align: 'right',\r\n  },\r\n  {\r\n    title: 'First',\r\n    dataIndex: 'FPrice',\r\n    sorter: (a, b) => a.FPrice - b.FPrice,\r\n    render: (price) => price.toLocaleString(),\r\n    width: 80,\r\n    align: 'right',\r\n  },\r\n  {\r\n    title: 'Y %',\r\n    dataIndex: 'Ynet',\r\n    width: 160,\r\n    render: (text) => text || '-',\r\n    sorter: (a, b) => {\r\n      const getPercent = (str) => {\r\n        if (!str) return 0;\r\n        const match = str.match(/^(-?\\d+)/);\r\n        return match ? parseInt(match[0]) : 0;\r\n      };\r\n      return getPercent(a.Ynet) - getPercent(b.Ynet);\r\n    },\r\n  },\r\n  {\r\n    title: 'J %',\r\n    dataIndex: 'Jnet',\r\n    width: 160,\r\n    render: (text) => text || '-',\r\n    sorter: (a, b) => {\r\n      const getPercent = (str) => {\r\n        if (!str) return 0;\r\n        const match = str.match(/^(-?\\d+)/);\r\n        return match ? parseInt(match[0]) : 0;\r\n      };\r\n      return getPercent(a.Jnet) - getPercent(b.Jnet);\r\n    },\r\n  },\r\n  {\r\n    title: 'F %',\r\n    dataIndex: 'Fnet',\r\n    width: 160,\r\n    render: (text) => text || '-',\r\n    sorter: (a, b) => {\r\n      const getPercent = (str) => {\r\n        if (!str) return 0;\r\n        const match = str.match(/^(-?\\d+)/);\r\n        return match ? parseInt(match[0]) : 0;\r\n      };\r\n      return getPercent(a.Fnet) - getPercent(b.Fnet);\r\n    },\r\n  }\r\n];\r\n\r\nexport const getSegmentColumns = () => [\r\n  { \r\n    title: 'From', \r\n    dataIndex: 'from', \r\n    width: 80,\r\n    sorter: (a, b) => a.from.localeCompare(b.from)\r\n  },\r\n  { \r\n    title: 'To', \r\n    dataIndex: 'to', \r\n    width: 80,\r\n    sorter: (a, b) => a.to.localeCompare(b.to)\r\n  },\r\n  // ... other segment columns remain the same as in the original file\r\n]; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}