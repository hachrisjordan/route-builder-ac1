{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport default function useFlightSearch() {\n  _s();\n  const [searchResults, setSearchResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 25,\n    total: 0\n  });\n  const [errors, setErrors] = useState({\n    departure: false,\n    arrival: false,\n    maxSegments: false\n  });\n  const handleSearch = async searchParams => {\n    const {\n      departure,\n      arrival,\n      maxSegments,\n      selectedAirlines\n    } = searchParams;\n\n    // Reset errors\n    setErrors({\n      departure: !departure,\n      arrival: !arrival,\n      maxSegments: !maxSegments\n    });\n\n    // Validate mandatory fields\n    if (!departure || !arrival || !maxSegments) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://backend-284998006367.us-central1.run.app/api/find-routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          departureAirport: departure,\n          arrivalAirport: arrival,\n          excludedAirline: selectedAirlines.length ? selectedAirlines[0] : \"null\",\n          maxSegments: maxSegments\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Search failed');\n      }\n      const data = await response.json();\n      setSearchResults(data);\n      setPagination(prev => ({\n        ...prev,\n        total: data.routes.length\n      }));\n    } catch (error) {\n      console.error('Search failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleTableChange = newPagination => {\n    setPagination(newPagination);\n  };\n  return {\n    searchResults,\n    isLoading,\n    handleSearch,\n    pagination,\n    handleTableChange,\n    errors\n  };\n}\n_s(useFlightSearch, \"sBKGxdThSe7EcnQivQcb2t4vAKA=\");","map":{"version":3,"names":["useState","useFlightSearch","_s","searchResults","setSearchResults","isLoading","setIsLoading","pagination","setPagination","current","pageSize","total","errors","setErrors","departure","arrival","maxSegments","handleSearch","searchParams","selectedAirlines","response","fetch","method","headers","body","JSON","stringify","departureAirport","arrivalAirport","excludedAirline","length","ok","Error","data","json","prev","routes","error","console","handleTableChange","newPagination"],"sources":["/Users/hanguyen/Desktop/route-builder-ac1/src/components/FlightSearch/hooks/useFlightSearch.js"],"sourcesContent":["import { useState } from 'react';\n\nexport default function useFlightSearch() {\n  const [searchResults, setSearchResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 25,\n    total: 0,\n  });\n  const [errors, setErrors] = useState({\n    departure: false,\n    arrival: false,\n    maxSegments: false\n  });\n\n  const handleSearch = async (searchParams) => {\n    const { departure, arrival, maxSegments, selectedAirlines } = searchParams;\n    \n    // Reset errors\n    setErrors({\n      departure: !departure,\n      arrival: !arrival,\n      maxSegments: !maxSegments\n    });\n\n    // Validate mandatory fields\n    if (!departure || !arrival || !maxSegments) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://backend-284998006367.us-central1.run.app/api/find-routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          departureAirport: departure,\n          arrivalAirport: arrival,\n          excludedAirline: selectedAirlines.length ? selectedAirlines[0] : \"null\",\n          maxSegments: maxSegments\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Search failed');\n      }\n\n      const data = await response.json();\n      setSearchResults(data);\n      setPagination(prev => ({\n        ...prev,\n        total: data.routes.length\n      }));\n    } catch (error) {\n      console.error('Search failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleTableChange = (newPagination) => {\n    setPagination(newPagination);\n  };\n\n  return {\n    searchResults,\n    isLoading,\n    handleSearch,\n    pagination,\n    handleTableChange,\n    errors,\n  };\n} "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC;IAC3CS,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC;IACnCc,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,YAAY,IAAK;IAC3C,MAAM;MAAEJ,SAAS;MAAEC,OAAO;MAAEC,WAAW;MAAEG;IAAiB,CAAC,GAAGD,YAAY;;IAE1E;IACAL,SAAS,CAAC;MACRC,SAAS,EAAE,CAACA,SAAS;MACrBC,OAAO,EAAE,CAACA,OAAO;MACjBC,WAAW,EAAE,CAACA;IAChB,CAAC,CAAC;;IAEF;IACA,IAAI,CAACF,SAAS,IAAI,CAACC,OAAO,IAAI,CAACC,WAAW,EAAE;MAC1C;IACF;IAEAV,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAkE,EAAE;QAC/FC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,gBAAgB,EAAEb,SAAS;UAC3Bc,cAAc,EAAEb,OAAO;UACvBc,eAAe,EAAEV,gBAAgB,CAACW,MAAM,GAAGX,gBAAgB,CAAC,CAAC,CAAC,GAAG,MAAM;UACvEH,WAAW,EAAEA;QACf,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;MAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;MAClC9B,gBAAgB,CAAC6B,IAAI,CAAC;MACtBzB,aAAa,CAAC2B,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPxB,KAAK,EAAEsB,IAAI,CAACG,MAAM,CAACN;MACrB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC,CAAC,SAAS;MACR/B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMiC,iBAAiB,GAAIC,aAAa,IAAK;IAC3ChC,aAAa,CAACgC,aAAa,CAAC;EAC9B,CAAC;EAED,OAAO;IACLrC,aAAa;IACbE,SAAS;IACTY,YAAY;IACZV,UAAU;IACVgC,iBAAiB;IACjB3B;EACF,CAAC;AACH;AAACV,EAAA,CAzEuBD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}