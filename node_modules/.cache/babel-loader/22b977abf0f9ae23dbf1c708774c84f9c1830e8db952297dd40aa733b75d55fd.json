{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst FlightDetailsModal = ({\n  isModalOpen,\n  onClose,\n  selectedFlights = {},\n  pricingData,\n  onStopoverClear,\n  currentRoute\n}) => {\n  _s();\n  if (!selectedFlights) {\n    selectedFlights = {};\n  }\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    availabilityData,\n    isLoadingAvailability\n  } = useFlightDetails(getSegmentColumns);\n  useEffect(() => {\n    if (!isModalOpen) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isModalOpen]);\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n  const handleCancel = () => {\n    onClose();\n  };\n  const handleCalendarDateSelect = dateRange => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc;\n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n    return Object.values(segments);\n  };\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Flight Details\",\n    open: isModalOpen,\n    onCancel: () => {\n      if (onClose) {\n        onClose();\n      }\n      if (onStopoverClear) {\n        onStopoverClear();\n      }\n    },\n    width: 1200,\n    footer: null,\n    children: [selectedFlights && Object.keys(selectedFlights).length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            marginBottom: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px',\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Enter your yapping password (Under Development)\",\n              value: apiKey,\n              onChange: e => setApiKey(e.target.value),\n              style: {\n                flex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              disabled: !apiKey || !apiKey.toLowerCase().startsWith('pro'),\n              onClick: () => handleCalendarSearch(currentRoute),\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), dateRangeError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Please select a date range in the calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FlightAvailabilityCalendar, {\n        flightData: availabilityData,\n        currentRoute: currentRoute,\n        onDateRangeSelect: handleCalendarDateSelect,\n        selectedRange: selectedDates,\n        onSearch: handleCalendarSearchClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), isLoadingSegments ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '20px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this) : (segmentDetails === null || segmentDetails === void 0 ? void 0 : segmentDetails.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 4,\n          style: {\n            marginBottom: 16\n          },\n          children: \"Flights By Segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), getSegmentTables().map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n              level: 5,\n              style: {\n                margin: 0\n              },\n              children: [\"Segment \", segment.index + 1, \" (\", segment.route, \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Pagination, {\n                size: \"small\",\n                total: segment.flights.length,\n                pageSize: paginationConfig.pageSize,\n                showSizeChanger: true,\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n                style: {\n                  display: 'inline-block',\n                  marginBottom: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            columns: columns,\n            dataSource: segment.flights,\n            pagination: {\n              total: segment.flights.length,\n              pageSize: 5,\n              showSizeChanger: true,\n              showQuickJumper: true,\n              showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n              pageSizeOptions: ['5', '10', '20', '50']\n            },\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this), index < getSegmentTables().length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '0px',\n              margin: '16px',\n              textAlign: 'center',\n              fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n              strong: true,\n              children: (() => {\n                const currentSegmentFlights = selectedFlights[segment.index];\n                const nextSegmentFlights = selectedFlights[segment.index + 1];\n                if (!(currentSegmentFlights !== null && currentSegmentFlights !== void 0 && currentSegmentFlights[0]) || !(nextSegmentFlights !== null && nextSegmentFlights !== void 0 && nextSegmentFlights[0])) {\n                  return 'Select flights to see connection time';\n                }\n                const currentFlight = currentSegmentFlights[0];\n                const nextFlight = nextSegmentFlights[0];\n                const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                const departureTime = dayjs(nextFlight.DepartsAt);\n                const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                if (layoverMinutes >= 24 * 60) {\n                  const days = Math.floor(layoverMinutes / (24 * 60));\n                  const remainingHours = Math.floor(layoverMinutes % (24 * 60) / 60);\n                  const remainingMinutes = layoverMinutes % 60;\n                  return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n                } else {\n                  const hours = Math.floor(layoverMinutes / 60);\n                  const minutes = layoverMinutes % 60;\n                  return `Layover duration: ${hours}h ${minutes}m`;\n                }\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 23\n          }, this)]\n        }, segment.index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }, this), Object.keys(selectedFlights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 4,\n          children: \"Journey Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: [{\n            title: 'From',\n            dataIndex: 'from',\n            key: 'from'\n          }, {\n            title: 'To',\n            dataIndex: 'to',\n            key: 'to'\n          }, {\n            title: 'Airlines',\n            dataIndex: 'airlines',\n            key: 'airlines',\n            render: airlinesList => {\n              if (!airlinesList || airlinesList === '-') return '-';\n              try {\n                const airlineArray = Array.isArray(airlinesList) ? airlinesList : airlinesList.split(', ');\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '4px'\n                  },\n                  children: airlineArray.map((airlineName, index) => {\n                    if (!airlineName) return null;\n                    const airline = airlines.find(a => {\n                      var _a$label;\n                      return airlineName.startsWith((_a$label = a.label) === null || _a$label === void 0 ? void 0 : _a$label.replace(` (${a.value})`, ''));\n                    });\n                    const airlineCode = airline === null || airline === void 0 ? void 0 : airline.value;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '8px'\n                      },\n                      children: [airlineCode && /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `${process.env.PUBLIC_URL}/${airlineCode}.png`,\n                        alt: airlineCode,\n                        style: {\n                          width: '24px',\n                          height: '24px',\n                          objectFit: 'contain',\n                          borderRadius: '4px'\n                        },\n                        onError: e => {\n                          e.target.style.display = 'none';\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 37\n                      }, this), airlineName]\n                    }, `${airlineCode}-${index}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 27\n                }, this);\n              } catch (error) {\n                console.error('Error rendering airlines:', error);\n                return '-';\n              }\n            }\n          }, {\n            title: 'Duration',\n            dataIndex: 'duration',\n            key: 'duration'\n          }, {\n            title: 'Departs',\n            dataIndex: 'departs',\n            key: 'departs'\n          }, {\n            title: 'Arrives',\n            dataIndex: 'arrives',\n            key: 'arrives'\n          }, {\n            title: 'Economy Price',\n            dataIndex: 'economyPrice',\n            key: 'economyPrice',\n            onCell: (_, index) => ({\n              rowSpan: index === 0 ? 2 : 0\n            })\n          }, {\n            title: 'Business Price (Max %)',\n            dataIndex: 'businessPrice',\n            key: 'businessPrice',\n            onCell: (_, index) => ({\n              rowSpan: index === 0 ? 2 : 0\n            }),\n            render: text => {\n              if (!text || text === 'N/A') return text;\n              try {\n                const [price, percentage] = text.split(' (');\n                if (!percentage) return text;\n                return `${price} (${percentage}`;\n              } catch (error) {\n                return text;\n              }\n            }\n          }, {\n            title: 'First Price (Max %)',\n            dataIndex: 'firstPrice',\n            key: 'firstPrice',\n            onCell: (_, index) => ({\n              rowSpan: index === 0 ? 2 : 0\n            }),\n            render: text => {\n              if (!text || text === 'N/A') return text;\n              try {\n                const [price, percentage] = text.split(' (');\n                if (!percentage) return text;\n                return `${price} (${percentage}`;\n              } catch (error) {\n                return text;\n              }\n            }\n          }],\n          dataSource: (() => {\n            try {\n              var _selectedFlights$firs9, _selectedFlights$firs10, _selectedFlights$stop, _selectedFlights$stop2, _selectedFlights$firs13, _selectedFlights$firs14, _selectedFlights$stop5, _selectedFlights$stop6, _selectedFlights2, _selectedFlights2$, _selectedFlights$last9, _selectedFlights$last10, _selectedFlights4, _selectedFlights4$, _selectedFlights$last13, _selectedFlights$last14;\n              const segments = Object.keys(selectedFlights).map(Number).sort((a, b) => a - b);\n              if (segments.length === 0) return [];\n              const firstSegmentIndex = Math.min(...segments);\n              const lastSegmentIndex = Math.max(...segments);\n              const getAirlinesString = segmentRange => {\n                try {\n                  const airlineSet = new Set(segmentRange.flatMap(i => {\n                    var _selectedFlights$i;\n                    return (_selectedFlights$i = selectedFlights[i]) === null || _selectedFlights$i === void 0 ? void 0 : _selectedFlights$i.map(f => f.airlines);\n                  }).filter(Boolean));\n                  return Array.from(airlineSet).join(', ') || '-';\n                } catch (error) {\n                  console.error('Error getting airlines string:', error);\n                  return '-';\n                }\n              };\n              console.log('Selected Flights:', selectedFlights);\n              console.log('Segments:', segments);\n              const calculatePrices = hasStopover => {\n                try {\n                  const originAirport = airports.find(a => {\n                    var _selectedFlights$firs, _selectedFlights$firs2;\n                    return a.IATA === ((_selectedFlights$firs = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs === void 0 ? void 0 : (_selectedFlights$firs2 = _selectedFlights$firs[0]) === null || _selectedFlights$firs2 === void 0 ? void 0 : _selectedFlights$firs2.from);\n                  });\n                  const destAirport = airports.find(a => {\n                    var _selectedFlights$last, _selectedFlights$last2;\n                    return a.IATA === ((_selectedFlights$last = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last === void 0 ? void 0 : (_selectedFlights$last2 = _selectedFlights$last[0]) === null || _selectedFlights$last2 === void 0 ? void 0 : _selectedFlights$last2.to);\n                  });\n                  if (!originAirport || !destAirport) return {\n                    economyPrice: '-',\n                    businessPrice: '-',\n                    firstPrice: '-'\n                  };\n                  let totalDistance = 0;\n                  let businessDistance = 0;\n                  let firstDistance = 0;\n                  Object.entries(selectedFlights).forEach(([_, flights]) => {\n                    flights.forEach(flight => {\n                      const distance = parseInt(flight.distance || 0);\n                      totalDistance += distance;\n                      if (flight.business && !flight.first) businessDistance += distance;\n                      if (flight.first) firstDistance += distance;\n                    });\n                  });\n                  const pricing = pricingData.find(p => p[\"From Region\"] === originAirport.Zone && p[\"To Region\"] === destAirport.Zone && totalDistance >= p[\"Min Distance\"] && totalDistance <= p[\"Max Distance\"]);\n                  if (!pricing) return {\n                    economyPrice: '-',\n                    businessPrice: '-',\n                    firstPrice: '-'\n                  };\n                  const businessPercentage = Math.round(businessDistance / totalDistance * 100);\n                  const firstPercentage = Math.round(firstDistance / totalDistance * 100);\n                  const stopoverExtra = hasStopover ? 5000 : 0;\n                  return {\n                    economyPrice: pricing.Economy ? (pricing.Economy + stopoverExtra).toLocaleString() : '-',\n                    businessPrice: pricing.Business ? `${(pricing.Business + stopoverExtra).toLocaleString()} (${businessPercentage}% J)` : '-',\n                    firstPrice: pricing.First && firstPercentage > 0 ? `${(pricing.First + stopoverExtra).toLocaleString()} (${businessPercentage > 0 && firstPercentage > 0 ? `${firstPercentage}% F, ${businessPercentage}% J` : firstPercentage > 0 ? `${firstPercentage}% F` : '0%'})` : '-'\n                  };\n                } catch (error) {\n                  console.error('Error calculating prices:', error);\n                  return {\n                    economyPrice: '-',\n                    businessPrice: '-',\n                    firstPrice: '-'\n                  };\n                }\n              };\n              let stopoverIndex = null;\n              for (let i = firstSegmentIndex; i < lastSegmentIndex; i++) {\n                var _selectedFlights$i2, _selectedFlights;\n                const currentFlight = (_selectedFlights$i2 = selectedFlights[i]) === null || _selectedFlights$i2 === void 0 ? void 0 : _selectedFlights$i2[0];\n                const nextFlight = (_selectedFlights = selectedFlights[i + 1]) === null || _selectedFlights === void 0 ? void 0 : _selectedFlights[0];\n                if (currentFlight && nextFlight) {\n                  const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                  const departureTime = dayjs(nextFlight.DepartsAt);\n                  const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                  if (layoverMinutes >= 24 * 60) {\n                    stopoverIndex = i;\n                    break;\n                  }\n                }\n              }\n              const prices = calculatePrices(stopoverIndex !== null);\n              if (stopoverIndex === null) {\n                var _selectedFlights$firs3, _selectedFlights$firs4, _selectedFlights$last3, _selectedFlights$last4, _selectedFlights$firs7, _selectedFlights$firs8, _selectedFlights$last7, _selectedFlights$last8;\n                return [{\n                  key: '1',\n                  from: ((_selectedFlights$firs3 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs3 === void 0 ? void 0 : (_selectedFlights$firs4 = _selectedFlights$firs3[0]) === null || _selectedFlights$firs4 === void 0 ? void 0 : _selectedFlights$firs4.from) || '-',\n                  to: ((_selectedFlights$last3 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last3 === void 0 ? void 0 : (_selectedFlights$last4 = _selectedFlights$last3[0]) === null || _selectedFlights$last4 === void 0 ? void 0 : _selectedFlights$last4.to) || '-',\n                  airlines: getAirlinesString(segments),\n                  duration: ((_selectedFlights$firs5, _selectedFlights$firs6, _selectedFlights$last5, _selectedFlights$last6) => {\n                    const firstDeparture = dayjs((_selectedFlights$firs5 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs5 === void 0 ? void 0 : (_selectedFlights$firs6 = _selectedFlights$firs5[0]) === null || _selectedFlights$firs6 === void 0 ? void 0 : _selectedFlights$firs6.DepartsAt);\n                    const finalArrival = dayjs((_selectedFlights$last5 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last5 === void 0 ? void 0 : (_selectedFlights$last6 = _selectedFlights$last5[0]) === null || _selectedFlights$last6 === void 0 ? void 0 : _selectedFlights$last6.ArrivesAt);\n                    const minutes = finalArrival.diff(firstDeparture, 'minute');\n                    const hours = Math.floor(minutes / 60);\n                    const remainingMinutes = minutes % 60;\n                    return `${hours}h ${remainingMinutes}m`;\n                  })(),\n                  departs: dayjs((_selectedFlights$firs7 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs7 === void 0 ? void 0 : (_selectedFlights$firs8 = _selectedFlights$firs7[0]) === null || _selectedFlights$firs8 === void 0 ? void 0 : _selectedFlights$firs8.DepartsAt).format('HH:mm MM-DD'),\n                  arrives: dayjs((_selectedFlights$last7 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last7 === void 0 ? void 0 : (_selectedFlights$last8 = _selectedFlights$last7[0]) === null || _selectedFlights$last8 === void 0 ? void 0 : _selectedFlights$last8.ArrivesAt).format('HH:mm MM-DD'),\n                  ...prices\n                }];\n              }\n              return [{\n                key: '1',\n                from: ((_selectedFlights$firs9 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs9 === void 0 ? void 0 : (_selectedFlights$firs10 = _selectedFlights$firs9[0]) === null || _selectedFlights$firs10 === void 0 ? void 0 : _selectedFlights$firs10.from) || '-',\n                to: ((_selectedFlights$stop = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop === void 0 ? void 0 : (_selectedFlights$stop2 = _selectedFlights$stop[0]) === null || _selectedFlights$stop2 === void 0 ? void 0 : _selectedFlights$stop2.to) || '-',\n                airlines: getAirlinesString(segments.filter(i => i <= stopoverIndex)),\n                duration: ((_selectedFlights$firs11, _selectedFlights$firs12, _selectedFlights$stop3, _selectedFlights$stop4) => {\n                  const firstDeparture = dayjs((_selectedFlights$firs11 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs11 === void 0 ? void 0 : (_selectedFlights$firs12 = _selectedFlights$firs11[0]) === null || _selectedFlights$firs12 === void 0 ? void 0 : _selectedFlights$firs12.DepartsAt);\n                  const stopoverArrival = dayjs((_selectedFlights$stop3 = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop3 === void 0 ? void 0 : (_selectedFlights$stop4 = _selectedFlights$stop3[0]) === null || _selectedFlights$stop4 === void 0 ? void 0 : _selectedFlights$stop4.ArrivesAt);\n                  const minutes = stopoverArrival.diff(firstDeparture, 'minute');\n                  const hours = Math.floor(minutes / 60);\n                  const remainingMinutes = minutes % 60;\n                  return `${hours}h ${remainingMinutes}m`;\n                })(),\n                departs: dayjs((_selectedFlights$firs13 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs13 === void 0 ? void 0 : (_selectedFlights$firs14 = _selectedFlights$firs13[0]) === null || _selectedFlights$firs14 === void 0 ? void 0 : _selectedFlights$firs14.DepartsAt).format('HH:mm MM-DD'),\n                arrives: dayjs((_selectedFlights$stop5 = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop5 === void 0 ? void 0 : (_selectedFlights$stop6 = _selectedFlights$stop5[0]) === null || _selectedFlights$stop6 === void 0 ? void 0 : _selectedFlights$stop6.ArrivesAt).format('HH:mm MM-DD'),\n                ...prices\n              }, {\n                key: '2',\n                from: ((_selectedFlights2 = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights2 === void 0 ? void 0 : (_selectedFlights2$ = _selectedFlights2[0]) === null || _selectedFlights2$ === void 0 ? void 0 : _selectedFlights2$.from) || '-',\n                to: ((_selectedFlights$last9 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last9 === void 0 ? void 0 : (_selectedFlights$last10 = _selectedFlights$last9[0]) === null || _selectedFlights$last10 === void 0 ? void 0 : _selectedFlights$last10.to) || '-',\n                airlines: getAirlinesString(segments.filter(i => i > stopoverIndex)),\n                duration: ((_selectedFlights3, _selectedFlights3$, _selectedFlights$last11, _selectedFlights$last12) => {\n                  const stopoverDeparture = dayjs((_selectedFlights3 = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights3 === void 0 ? void 0 : (_selectedFlights3$ = _selectedFlights3[0]) === null || _selectedFlights3$ === void 0 ? void 0 : _selectedFlights3$.DepartsAt);\n                  const finalArrival = dayjs((_selectedFlights$last11 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last11 === void 0 ? void 0 : (_selectedFlights$last12 = _selectedFlights$last11[0]) === null || _selectedFlights$last12 === void 0 ? void 0 : _selectedFlights$last12.ArrivesAt);\n                  const minutes = finalArrival.diff(stopoverDeparture, 'minute');\n                  const hours = Math.floor(minutes / 60);\n                  const remainingMinutes = minutes % 60;\n                  return `${hours}h ${remainingMinutes}m`;\n                })(),\n                departs: dayjs((_selectedFlights4 = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights4 === void 0 ? void 0 : (_selectedFlights4$ = _selectedFlights4[0]) === null || _selectedFlights4$ === void 0 ? void 0 : _selectedFlights4$.DepartsAt).format('HH:mm MM-DD'),\n                arrives: dayjs((_selectedFlights$last13 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last13 === void 0 ? void 0 : (_selectedFlights$last14 = _selectedFlights$last13[0]) === null || _selectedFlights$last14 === void 0 ? void 0 : _selectedFlights$last14.ArrivesAt).format('HH:mm MM-DD'),\n                economyPrice: null,\n                businessPrice: null,\n                firstPrice: null\n              }];\n            } catch (error) {\n              console.error('Error generating dataSource:', error);\n              return [];\n            }\n          })(),\n          pagination: false,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12,\n            fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n            children: (() => {\n              const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n              const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n              const originAirport = airports.find(a => {\n                var _selectedFlights$firs15, _selectedFlights$firs16;\n                return a.IATA === ((_selectedFlights$firs15 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs15 === void 0 ? void 0 : (_selectedFlights$firs16 = _selectedFlights$firs15[0]) === null || _selectedFlights$firs16 === void 0 ? void 0 : _selectedFlights$firs16.from);\n              });\n              const destAirport = airports.find(a => {\n                var _selectedFlights$last15, _selectedFlights$last16;\n                return a.IATA === ((_selectedFlights$last15 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last15 === void 0 ? void 0 : (_selectedFlights$last16 = _selectedFlights$last15[0]) === null || _selectedFlights$last16 === void 0 ? void 0 : _selectedFlights$last16.to);\n              });\n              if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n              const R = 3959;\n              const lat1 = originAirport.Latitude * Math.PI / 180;\n              const lat2 = destAirport.Latitude * Math.PI / 180;\n              const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n              const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n              const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n              const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n              const directDistance = Math.round(R * c);\n              let totalSegmentDistance = 0;\n              Object.values(selectedFlights).forEach(flights => {\n                flights.forEach(flight => {\n                  totalSegmentDistance += parseInt(flight.distance || 0);\n                });\n              });\n              const isValid = totalSegmentDistance <= 2 * directDistance;\n              const percentage = Math.round(totalSegmentDistance / directDistance * 100);\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 8,\n                    fontSize: '16px',\n                    fontWeight: 'bold',\n                    color: isValid ? '#52c41a' : '#f5222d',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    gap: '8px',\n                    width: '100%'\n                  },\n                  children: isValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\u2713\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"ROUTING VALIDATED\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\u2717\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"THIS ROUTING IS INVALID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false);\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No flight details available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetailsModal, \"xE6Fpkd6JutPAY6dIHMG0UN4oyM=\", false, function () {\n  return [useFlightDetails];\n});\n_c = FlightDetailsModal;\nexport default FlightDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"FlightDetailsModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","DatePicker","Input","Spin","Table","Button","Typography","Pagination","dayjs","getSegmentColumns","useFlightDetails","FlightAvailabilityCalendar","airlines","airports","pricingData","jsxDEV","_jsxDEV","Fragment","_Fragment","RangePicker","FlightDetailsModal","isModalOpen","onClose","selectedFlights","onStopoverClear","currentRoute","_s","dateRangeError","setDateRangeError","selectedDates","setSelectedDates","apiKey","setApiKey","segmentDetails","isLoadingSegments","handleDateSearch","handleCalendarSearch","resetDetails","columns","availabilityData","isLoadingAvailability","handleOk","handleCancel","handleCalendarDateSelect","dateRange","handleCalendarSearchClick","startDate","endDate","stopoverInfo","console","log","JSON","stringify","getSegmentTables","length","segments","reduce","acc","flight","hidden","segmentIndex","index","route","from","to","flights","push","Object","values","paginationConfig","pageSize","showSizeChanger","showTotal","total","range","pageSizeOptions","position","title","open","onCancel","width","footer","children","keys","style","marginBottom","display","gap","flex","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","toLowerCase","startsWith","onClick","color","flightData","onDateRangeSelect","selectedRange","onSearch","textAlign","margin","marginTop","Title","level","map","segment","justifyContent","alignItems","size","dataSource","pagination","showQuickJumper","padding","fontFamily","Text","strong","currentSegmentFlights","nextSegmentFlights","currentFlight","nextFlight","arrivalTime","ArrivesAt","departureTime","DepartsAt","layoverMinutes","diff","days","Math","floor","remainingHours","remainingMinutes","hours","minutes","dataIndex","key","render","airlinesList","airlineArray","Array","isArray","split","flexDirection","airlineName","airline","find","a","_a$label","label","replace","airlineCode","src","process","env","PUBLIC_URL","alt","height","objectFit","borderRadius","onError","error","onCell","_","rowSpan","text","price","percentage","_selectedFlights$firs9","_selectedFlights$firs10","_selectedFlights$stop","_selectedFlights$stop2","_selectedFlights$firs13","_selectedFlights$firs14","_selectedFlights$stop5","_selectedFlights$stop6","_selectedFlights2","_selectedFlights2$","_selectedFlights$last9","_selectedFlights$last10","_selectedFlights4","_selectedFlights4$","_selectedFlights$last13","_selectedFlights$last14","Number","sort","b","firstSegmentIndex","min","lastSegmentIndex","max","getAirlinesString","segmentRange","airlineSet","Set","flatMap","i","_selectedFlights$i","f","filter","Boolean","join","calculatePrices","hasStopover","originAirport","_selectedFlights$firs","_selectedFlights$firs2","IATA","destAirport","_selectedFlights$last","_selectedFlights$last2","economyPrice","businessPrice","firstPrice","totalDistance","businessDistance","firstDistance","entries","forEach","distance","parseInt","business","first","pricing","p","Zone","businessPercentage","round","firstPercentage","stopoverExtra","Economy","toLocaleString","Business","First","stopoverIndex","_selectedFlights$i2","_selectedFlights","prices","_selectedFlights$firs3","_selectedFlights$firs4","_selectedFlights$last3","_selectedFlights$last4","_selectedFlights$firs7","_selectedFlights$firs8","_selectedFlights$last7","_selectedFlights$last8","duration","_selectedFlights$firs5","_selectedFlights$firs6","_selectedFlights$last5","_selectedFlights$last6","firstDeparture","finalArrival","departs","format","arrives","_selectedFlights$firs11","_selectedFlights$firs12","_selectedFlights$stop3","_selectedFlights$stop4","stopoverArrival","_selectedFlights3","_selectedFlights3$","_selectedFlights$last11","_selectedFlights$last12","stopoverDeparture","_selectedFlights$firs15","_selectedFlights$firs16","_selectedFlights$last15","_selectedFlights$last16","R","lat1","Latitude","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","directDistance","totalSegmentDistance","isValid","fontSize","fontWeight","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nconst { RangePicker } = DatePicker;\n\nconst FlightDetailsModal = ({ \n  isModalOpen, \n  onClose, \n  selectedFlights = {},\n  pricingData, \n  onStopoverClear,\n  currentRoute\n}) => {\n  if (!selectedFlights) {\n    selectedFlights = {};\n  }\n\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    availabilityData,\n    isLoadingAvailability,\n  } = useFlightDetails(getSegmentColumns);\n\n  useEffect(() => {\n    if (!isModalOpen) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isModalOpen]);\n\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleCalendarDateSelect = (dateRange) => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc;\n      \n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n\n    return Object.values(segments);\n  };\n\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n\n  return (\n    <Modal\n      title=\"Flight Details\"\n      open={isModalOpen}\n      onCancel={() => {\n        if (onClose) {\n          onClose();\n        }\n        if (onStopoverClear) {\n          onStopoverClear();\n        }\n      }}\n      width={1200}\n      footer={null}\n    >\n      {selectedFlights && Object.keys(selectedFlights).length > 0 ? (\n        <>\n          <div style={{ marginBottom: 16 }}>\n            <div style={{ display: 'flex', gap: '8px', marginBottom: 16 }}>\n              <div style={{ display: 'flex', gap: '8px', flex: 1 }}>\n                <Input\n                  placeholder=\"Enter your yapping password (Under Development)\"\n                  value={apiKey}\n                  onChange={(e) => setApiKey(e.target.value)}\n                  style={{ flex: 1 }}\n                />\n                <Button\n                  type=\"primary\"\n                  disabled={!apiKey || !apiKey.toLowerCase().startsWith('pro')}\n                  onClick={() => handleCalendarSearch(currentRoute)}\n                >\n                  Apply\n                </Button>\n              </div>\n            </div>\n            {dateRangeError && (\n              <div style={{ color: 'red' }}>\n                Please select a date range in the calendar\n              </div>\n            )}\n          </div>\n\n          <FlightAvailabilityCalendar \n            flightData={availabilityData}\n            currentRoute={currentRoute}\n            onDateRangeSelect={handleCalendarDateSelect}\n            selectedRange={selectedDates}\n            onSearch={handleCalendarSearchClick}\n          />\n\n          {isLoadingSegments ? (\n            <div style={{ textAlign: 'center', margin: '20px 0' }}>\n              <Spin />\n            </div>\n          ) : (\n            segmentDetails?.length > 0 && (\n              <div style={{ marginTop: 0 }}>\n                <Typography.Title level={4} style={{ marginBottom: 16 }}>\n                  Flights By Segment\n                </Typography.Title>\n                {getSegmentTables().map((segment, index) => (\n                  <div key={segment.index} style={{ marginBottom: 16 }}>\n                    <div style={{ \n                      display: 'flex', \n                      justifyContent: 'space-between', \n                      alignItems: 'center',\n                      marginBottom: 12 \n                    }}>\n                      <Typography.Title level={5} style={{ margin: 0 }}>\n                        Segment {segment.index+1} ({segment.route}):\n                      </Typography.Title>\n                      <div>\n                        <Pagination\n                          size=\"small\"\n                          total={segment.flights.length}\n                          pageSize={paginationConfig.pageSize}\n                          showSizeChanger={true}\n                          showTotal={(total, range) => `${range[0]}-${range[1]} of ${total}`}\n                          style={{ \n                            display: 'inline-block',\n                            marginBottom: 0\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <Table\n                      columns={columns}\n                      dataSource={segment.flights}\n                      pagination={{\n                        total: segment.flights.length,\n                        pageSize: 5,\n                        showSizeChanger: true,\n                        showQuickJumper: true,\n                        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n                        pageSizeOptions: ['5', '10', '20', '50']\n                      }}\n                      size=\"small\"\n                    />\n                    \n                    {index < getSegmentTables().length - 1 && (\n                      <div style={{ \n                        padding: '0px',\n                        margin: '16px',\n                        textAlign: 'center',\n                        fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n                      }}>\n                        <Typography.Text strong>\n                          {(() => {\n                            const currentSegmentFlights = selectedFlights[segment.index];\n                            const nextSegmentFlights = selectedFlights[segment.index + 1];\n                            \n                            if (!currentSegmentFlights?.[0] || !nextSegmentFlights?.[0]) {\n                              return 'Select flights to see connection time';\n                            }\n\n                            const currentFlight = currentSegmentFlights[0];\n                            const nextFlight = nextSegmentFlights[0];\n                            \n                            const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                            const departureTime = dayjs(nextFlight.DepartsAt);\n                            const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                            \n                            if (layoverMinutes >= 24 * 60) {\n                              const days = Math.floor(layoverMinutes / (24 * 60));\n                              const remainingHours = Math.floor((layoverMinutes % (24 * 60)) / 60);\n                              const remainingMinutes = layoverMinutes % 60;\n                              \n                              return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n                            } else {\n                              const hours = Math.floor(layoverMinutes / 60);\n                              const minutes = layoverMinutes % 60;\n                              return `Layover duration: ${hours}h ${minutes}m`;\n                            }\n                          })()}\n                        </Typography.Text>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )\n          )}\n\n          {Object.keys(selectedFlights).length > 0 && (\n            <div style={{ marginTop: 24 }}>\n              <Typography.Title level={4}>Journey Summary</Typography.Title>\n              <Table\n                columns={[\n                  {\n                    title: 'From',\n                    dataIndex: 'from',\n                    key: 'from',\n                  },\n                  {\n                    title: 'To',\n                    dataIndex: 'to',\n                    key: 'to',\n                  },\n                  {\n                    title: 'Airlines',\n                    dataIndex: 'airlines',\n                    key: 'airlines',\n                    render: (airlinesList) => {\n                      if (!airlinesList || airlinesList === '-') return '-';\n                      \n                      try {\n                        const airlineArray = Array.isArray(airlinesList) ? airlinesList : airlinesList.split(', ');\n                        \n                        return (\n                          <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n                            {airlineArray.map((airlineName, index) => {\n                              if (!airlineName) return null;\n                              \n                              const airline = airlines.find(a => \n                                airlineName.startsWith(a.label?.replace(` (${a.value})`, ''))\n                              );\n                              const airlineCode = airline?.value;\n                              \n                              return (\n                                <div key={`${airlineCode}-${index}`} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                                  {airlineCode && (\n                                    <img \n                                      src={`${process.env.PUBLIC_URL}/${airlineCode}.png`}\n                                      alt={airlineCode}\n                                      style={{ \n                                        width: '24px', \n                                        height: '24px',\n                                        objectFit: 'contain',\n                                        borderRadius: '4px'\n                                      }} \n                                      onError={(e) => {\n                                        e.target.style.display = 'none';\n                                      }}\n                                    />\n                                  )}\n                                  {airlineName}\n                                </div>\n                              );\n                            })}\n                          </div>\n                        );\n                      } catch (error) {\n                        console.error('Error rendering airlines:', error);\n                        return '-';\n                      }\n                    },\n                  },\n                  {\n                    title: 'Duration',\n                    dataIndex: 'duration',\n                    key: 'duration',\n                  },\n                  {\n                    title: 'Departs',\n                    dataIndex: 'departs',\n                    key: 'departs',\n                  },\n                  {\n                    title: 'Arrives',\n                    dataIndex: 'arrives',\n                    key: 'arrives',\n                  },\n                  {\n                    title: 'Economy Price',\n                    dataIndex: 'economyPrice',\n                    key: 'economyPrice',\n                    onCell: (_, index) => ({\n                      rowSpan: index === 0 ? 2 : 0,\n                    }),\n                  },\n                  {\n                    title: 'Business Price (Max %)',\n                    dataIndex: 'businessPrice',\n                    key: 'businessPrice',\n                    onCell: (_, index) => ({\n                      rowSpan: index === 0 ? 2 : 0,\n                    }),\n                    render: (text) => {\n                      if (!text || text === 'N/A') return text;\n                      try {\n                        const [price, percentage] = text.split(' (');\n                        if (!percentage) return text;\n                        return `${price} (${percentage}`;\n                      } catch (error) {\n                        return text;\n                      }\n                    }\n                  },\n                  {\n                    title: 'First Price (Max %)',\n                    dataIndex: 'firstPrice',\n                    key: 'firstPrice',\n                    onCell: (_, index) => ({\n                      rowSpan: index === 0 ? 2 : 0,\n                    }),\n                    render: (text) => {\n                      if (!text || text === 'N/A') return text;\n                      try {\n                        const [price, percentage] = text.split(' (');\n                        if (!percentage) return text;\n                        return `${price} (${percentage}`;\n                      } catch (error) {\n                        return text;\n                      }\n                    }\n                  },\n                ]}\n                dataSource={(() => {\n                  try {\n                    const segments = Object.keys(selectedFlights).map(Number).sort((a, b) => a - b);\n                    if (segments.length === 0) return [];\n                    \n                    const firstSegmentIndex = Math.min(...segments);\n                    const lastSegmentIndex = Math.max(...segments);\n                    \n                    const getAirlinesString = (segmentRange) => {\n                      try {\n                        const airlineSet = new Set(\n                          segmentRange\n                            .flatMap(i => selectedFlights[i]?.map(f => f.airlines))\n                            .filter(Boolean)\n                        );\n                        return Array.from(airlineSet).join(', ') || '-';\n                      } catch (error) {\n                        console.error('Error getting airlines string:', error);\n                        return '-';\n                      }\n                    };\n\n                    console.log('Selected Flights:', selectedFlights);\n                    console.log('Segments:', segments);\n                    \n                    const calculatePrices = (hasStopover) => {\n                      try {\n                        const originAirport = airports.find(a => a.IATA === selectedFlights[firstSegmentIndex]?.[0]?.from);\n                        const destAirport = airports.find(a => a.IATA === selectedFlights[lastSegmentIndex]?.[0]?.to);\n                        \n                        if (!originAirport || !destAirport) return {\n                          economyPrice: '-',\n                          businessPrice: '-',\n                          firstPrice: '-'\n                        };\n\n                        let totalDistance = 0;\n                        let businessDistance = 0;\n                        let firstDistance = 0;\n\n                        Object.entries(selectedFlights).forEach(([_, flights]) => {\n                          flights.forEach(flight => {\n                            const distance = parseInt(flight.distance || 0);\n                            totalDistance += distance;\n                            if (flight.business && !flight.first) businessDistance += distance;\n                            if (flight.first) firstDistance += distance;\n                          });\n                        });\n\n                        const pricing = pricingData.find(p => \n                          p[\"From Region\"] === originAirport.Zone &&\n                          p[\"To Region\"] === destAirport.Zone &&\n                          totalDistance >= p[\"Min Distance\"] &&\n                          totalDistance <= p[\"Max Distance\"]\n                        );\n\n                        if (!pricing) return {\n                          economyPrice: '-',\n                          businessPrice: '-',\n                          firstPrice: '-'\n                        };\n\n                        const businessPercentage = Math.round((businessDistance / totalDistance) * 100);\n                        const firstPercentage = Math.round((firstDistance / totalDistance) * 100);\n\n                        const stopoverExtra = hasStopover ? 5000 : 0;\n\n                        return {\n                          economyPrice: pricing.Economy ? (pricing.Economy + stopoverExtra).toLocaleString() : '-',\n                          businessPrice: pricing.Business ? \n                            `${(pricing.Business + stopoverExtra).toLocaleString()} (${businessPercentage}% J)` : '-',\n                          firstPrice: pricing.First && firstPercentage > 0 ? \n                            `${(pricing.First + stopoverExtra).toLocaleString()} (${\n                              businessPercentage > 0 && firstPercentage > 0 \n                                ? `${firstPercentage}% F, ${businessPercentage}% J`\n                                : firstPercentage > 0 \n                                  ? `${firstPercentage}% F`\n                                  : '0%'\n                            })` : '-'\n                        };\n                      } catch (error) {\n                        console.error('Error calculating prices:', error);\n                        return {\n                          economyPrice: '-',\n                          businessPrice: '-',\n                          firstPrice: '-'\n                        };\n                      }\n                    };\n\n                    let stopoverIndex = null;\n                    for (let i = firstSegmentIndex; i < lastSegmentIndex; i++) {\n                      const currentFlight = selectedFlights[i]?.[0];\n                      const nextFlight = selectedFlights[i + 1]?.[0];\n                      \n                      if (currentFlight && nextFlight) {\n                        const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                        const departureTime = dayjs(nextFlight.DepartsAt);\n                        const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                        \n                        if (layoverMinutes >= 24 * 60) {\n                          stopoverIndex = i;\n                          break;\n                        }\n                      }\n                    }\n\n                    const prices = calculatePrices(stopoverIndex !== null);\n\n                    if (stopoverIndex === null) {\n                      return [{\n                        key: '1',\n                        from: selectedFlights[firstSegmentIndex]?.[0]?.from || '-',\n                        to: selectedFlights[lastSegmentIndex]?.[0]?.to || '-',\n                        airlines: getAirlinesString(segments),\n                        duration: (() => {\n                          const firstDeparture = dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt);\n                          const finalArrival = dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt);\n                          const minutes = finalArrival.diff(firstDeparture, 'minute');\n                          const hours = Math.floor(minutes / 60);\n                          const remainingMinutes = minutes % 60;\n                          return `${hours}h ${remainingMinutes}m`;\n                        })(),\n                        departs: dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n                        arrives: dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n                        ...prices\n                      }];\n                    }\n\n                    return [\n                      {\n                        key: '1',\n                        from: selectedFlights[firstSegmentIndex]?.[0]?.from || '-',\n                        to: selectedFlights[stopoverIndex]?.[0]?.to || '-',\n                        airlines: getAirlinesString(segments.filter(i => i <= stopoverIndex)),\n                        duration: (() => {\n                          const firstDeparture = dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt);\n                          const stopoverArrival = dayjs(selectedFlights[stopoverIndex]?.[0]?.ArrivesAt);\n                          const minutes = stopoverArrival.diff(firstDeparture, 'minute');\n                          const hours = Math.floor(minutes / 60);\n                          const remainingMinutes = minutes % 60;\n                          return `${hours}h ${remainingMinutes}m`;\n                        })(),\n                        departs: dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n                        arrives: dayjs(selectedFlights[stopoverIndex]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n                        ...prices\n                      },\n                      {\n                        key: '2',\n                        from: selectedFlights[stopoverIndex + 1]?.[0]?.from || '-',\n                        to: selectedFlights[lastSegmentIndex]?.[0]?.to || '-',\n                        airlines: getAirlinesString(segments.filter(i => i > stopoverIndex)),\n                        duration: (() => {\n                          const stopoverDeparture = dayjs(selectedFlights[stopoverIndex + 1]?.[0]?.DepartsAt);\n                          const finalArrival = dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt);\n                          const minutes = finalArrival.diff(stopoverDeparture, 'minute');\n                          const hours = Math.floor(minutes / 60);\n                          const remainingMinutes = minutes % 60;\n                          return `${hours}h ${remainingMinutes}m`;\n                        })(),\n                        departs: dayjs(selectedFlights[stopoverIndex + 1]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n                        arrives: dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n                        economyPrice: null,\n                        businessPrice: null,\n                        firstPrice: null\n                      }\n                    ];\n                  } catch (error) {\n                    console.error('Error generating dataSource:', error);\n                    return [];\n                  }\n                })()}\n                pagination={false}\n                size=\"small\"\n              />\n              \n              <div style={{ marginTop: 12, fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace' }}>\n                <Typography.Text>\n                  {(() => {\n                    const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                    const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n                    const originAirport = airports.find(a => a.IATA === selectedFlights[firstSegmentIndex]?.[0]?.from);\n                    const destAirport = airports.find(a => a.IATA === selectedFlights[lastSegmentIndex]?.[0]?.to);\n\n                    if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n                    const R = 3959;\n                    const lat1 = originAirport.Latitude * Math.PI / 180;\n                    const lat2 = destAirport.Latitude * Math.PI / 180;\n                    const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n                    const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n                    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n                              Math.cos(lat1) * Math.cos(lat2) *\n                              Math.sin(dLon/2) * Math.sin(dLon/2);\n                    \n                    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n                    const directDistance = Math.round(R * c);\n\n                    let totalSegmentDistance = 0;\n                    Object.values(selectedFlights).forEach(flights => {\n                      flights.forEach(flight => {\n                        totalSegmentDistance += parseInt(flight.distance || 0);\n                      });\n                    });\n\n                    const isValid = totalSegmentDistance <= (2 * directDistance);\n                    const percentage = Math.round(totalSegmentDistance/directDistance * 100);\n\n                    return (\n                      <>\n                        <div style={{ \n                          marginTop: 8,\n                          fontSize: '16px',\n                          fontWeight: 'bold',\n                          color: isValid ? '#52c41a' : '#f5222d',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          gap: '8px',\n                          width: '100%'\n                        }}>\n                          {isValid ? (\n                            <>\n                              <span>✓</span>\n                              <span>ROUTING VALIDATED</span>\n                            </>\n                          ) : (\n                            <>\n                              <span>✗</span>\n                              <span>THIS ROUTING IS INVALID</span>\n                            </>\n                          )}\n                        </div>\n                      </>\n                    );\n                  })()}\n                </Typography.Text>\n              </div>\n            </div>\n          )}\n        </>\n      ) : (\n        <div>No flight details available</div>\n      )}\n\n      <style jsx>{`\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `}</style>\n    </Modal>\n  );\n};\n\nexport default FlightDetailsModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}