{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/pages/FlightSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card } from 'antd';\nimport SearchForm from '../components/FlightSearch/SearchForm';\nimport ResultsTable from '../components/FlightSearch/ResultsTable';\nimport FlightDetailsModal from '../components/FlightSearch/FlightDetailsModal';\nimport useFlightSearch from '../components/FlightSearch/hooks/useFlightSearch';\nimport dayjs from 'dayjs';\nimport FlightAvailabilityCalendar from '../components/FlightSearch/FlightAvailabilityCalendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightSearch = () => {\n  _s();\n  const {\n    searchResults,\n    isLoading,\n    handleSearch,\n    pagination,\n    handleTableChange,\n    errors\n  } = useFlightSearch();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [startDay, setStartDay] = useState(dayjs().format('YYYY-MM-DD'));\n  const [flightData, setFlightData] = useState({});\n  const [isCalendarLoading, setIsCalendarLoading] = useState(false);\n  const handleCalendarSearch = async (startDate, endDate, stopoverInfo, preserveCalendarData = false) => {\n    // Set loading state\n    setIsCalendarLoading(true);\n\n    // Only clear calendar data if preserveCalendarData is false\n    if (!preserveCalendarData) {\n      setFlightData({});\n    }\n    try {\n      // Fetch data from API\n      const response = await fetch(`/api/calendar-data?startDate=${startDate}&endDate=${endDate}`);\n      const newData = await response.json();\n\n      // After fetching data:\n      // If preserveCalendarData is true, merge new data with existing data\n      // instead of replacing it completely\n      if (preserveCalendarData) {\n        setFlightData(prevData => ({\n          ...prevData,\n          ...newData // Merge with new data\n        }));\n      } else {\n        setFlightData(newData);\n      }\n    } catch (error) {\n      console.error('Error fetching calendar data:', error);\n    } finally {\n      setIsCalendarLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearch: params => {\n        setStartDay(params.startDay || dayjs().format('YYYY-MM-DD'));\n        handleSearch(params);\n      },\n      isLoading: isLoading,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightAvailabilityCalendar, {\n      flightData: flightData,\n      currentRoute: currentRoute,\n      onDateRangeSelect: range => console.log('Date range selected:', range),\n      onSearch: handleCalendarSearch,\n      isLoading: isCalendarLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), searchResults && /*#__PURE__*/_jsxDEV(ResultsTable, {\n      searchResults: searchResults,\n      isLoading: isLoading,\n      pagination: pagination,\n      onTableChange: handleTableChange,\n      onRouteSelect: route => {\n        setCurrentRoute(route);\n        setIsModalVisible(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FlightDetailsModal, {\n      isModalOpen: isModalVisible,\n      currentRoute: currentRoute,\n      onClose: () => {\n        setIsModalVisible(false);\n        setCurrentRoute(null);\n      },\n      startDay: startDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .flight-search-container {\n          max-width: 1200px;\n          width: 100%;\n          margin: 20px auto;\n          padding: 0 12px;\n          box-sizing: border-box;\n        }\n        :global(.ant-table-wrapper) {\n          margin: 0;\n          width: 100%;\n          overflow-x: auto;\n        }\n        :global(.ant-card) {\n          margin-bottom: 20px;\n          width: 100%;\n        }\n        :global(.ant-modal) {\n          max-width: 100vw;\n          margin: 0;\n        }\n        :global(.ant-modal-content) {\n          max-height: 100vh;\n          border-radius: 8px;\n        }\n        @media (max-width: 768px) {\n          .flight-search-container {\n            padding: 0 8px;\n            margin: 12px auto;\n          }\n          :global(.ant-modal-content) {\n            border-radius: 0;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightSearch, \"hc2cK0tdlz8zYYV9l1KACpJJmA0=\", false, function () {\n  return [useFlightSearch];\n});\n_c = FlightSearch;\nexport default FlightSearch;\nvar _c;\n$RefreshReg$(_c, \"FlightSearch\");","map":{"version":3,"names":["React","useState","Card","SearchForm","ResultsTable","FlightDetailsModal","useFlightSearch","dayjs","FlightAvailabilityCalendar","jsxDEV","_jsxDEV","FlightSearch","_s","searchResults","isLoading","handleSearch","pagination","handleTableChange","errors","isModalVisible","setIsModalVisible","currentRoute","setCurrentRoute","startDay","setStartDay","format","flightData","setFlightData","isCalendarLoading","setIsCalendarLoading","handleCalendarSearch","startDate","endDate","stopoverInfo","preserveCalendarData","response","fetch","newData","json","prevData","error","console","className","children","onSearch","params","fileName","_jsxFileName","lineNumber","columnNumber","onDateRangeSelect","range","log","onTableChange","onRouteSelect","route","isModalOpen","onClose","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/pages/FlightSearch.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card } from 'antd';\nimport SearchForm from '../components/FlightSearch/SearchForm';\nimport ResultsTable from '../components/FlightSearch/ResultsTable';\nimport FlightDetailsModal from '../components/FlightSearch/FlightDetailsModal';\nimport useFlightSearch from '../components/FlightSearch/hooks/useFlightSearch';\nimport dayjs from 'dayjs';\nimport FlightAvailabilityCalendar from '../components/FlightSearch/FlightAvailabilityCalendar';\n\nconst FlightSearch = () => {\n  const {\n    searchResults,\n    isLoading,\n    handleSearch,\n    pagination,\n    handleTableChange,\n    errors,\n  } = useFlightSearch();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [startDay, setStartDay] = useState(dayjs().format('YYYY-MM-DD'));\n  const [flightData, setFlightData] = useState({});\n  const [isCalendarLoading, setIsCalendarLoading] = useState(false);\n\n  const handleCalendarSearch = async (startDate, endDate, stopoverInfo, preserveCalendarData = false) => {\n    // Set loading state\n    setIsCalendarLoading(true);\n    \n    // Only clear calendar data if preserveCalendarData is false\n    if (!preserveCalendarData) {\n      setFlightData({});\n    }\n    \n    try {\n      // Fetch data from API\n      const response = await fetch(`/api/calendar-data?startDate=${startDate}&endDate=${endDate}`);\n      const newData = await response.json();\n      \n      // After fetching data:\n      // If preserveCalendarData is true, merge new data with existing data\n      // instead of replacing it completely\n      if (preserveCalendarData) {\n        setFlightData(prevData => ({\n          ...prevData,\n          ...newData // Merge with new data\n        }));\n      } else {\n        setFlightData(newData);\n      }\n    } catch (error) {\n      console.error('Error fetching calendar data:', error);\n    } finally {\n      setIsCalendarLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flight-search-container\">\n      <SearchForm \n        onSearch={(params) => {\n          setStartDay(params.startDay || dayjs().format('YYYY-MM-DD'));\n          handleSearch(params);\n        }}\n        isLoading={isLoading}\n        errors={errors}\n      />\n\n      <FlightAvailabilityCalendar\n        flightData={flightData}\n        currentRoute={currentRoute}\n        onDateRangeSelect={(range) => console.log('Date range selected:', range)}\n        onSearch={handleCalendarSearch}\n        isLoading={isCalendarLoading}\n      />\n\n      {searchResults && (\n        <ResultsTable\n          searchResults={searchResults}\n          isLoading={isLoading}\n          pagination={pagination}\n          onTableChange={handleTableChange}\n          onRouteSelect={(route) => {\n            setCurrentRoute(route);\n            setIsModalVisible(true);\n          }}\n        />\n      )}\n\n      <FlightDetailsModal\n        isModalOpen={isModalVisible}\n        currentRoute={currentRoute}\n        onClose={() => {\n          setIsModalVisible(false);\n          setCurrentRoute(null);\n        }}\n        startDay={startDay}\n      />\n\n      <style jsx>{`\n        .flight-search-container {\n          max-width: 1200px;\n          width: 100%;\n          margin: 20px auto;\n          padding: 0 12px;\n          box-sizing: border-box;\n        }\n        :global(.ant-table-wrapper) {\n          margin: 0;\n          width: 100%;\n          overflow-x: auto;\n        }\n        :global(.ant-card) {\n          margin-bottom: 20px;\n          width: 100%;\n        }\n        :global(.ant-modal) {\n          max-width: 100vw;\n          margin: 0;\n        }\n        :global(.ant-modal-content) {\n          max-height: 100vh;\n          border-radius: 8px;\n        }\n        @media (max-width: 768px) {\n          .flight-search-container {\n            padding: 0 8px;\n            margin: 12px auto;\n          }\n          :global(.ant-modal-content) {\n            border-radius: 0;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default FlightSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}