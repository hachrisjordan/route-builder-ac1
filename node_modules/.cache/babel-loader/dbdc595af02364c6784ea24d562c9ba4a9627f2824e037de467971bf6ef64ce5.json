{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Downloads/route-builder-ac1-test/src/pages/FlightSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Select, InputNumber, Button, Table, Card, Tag, Spin, Input, Modal, DatePicker } from 'antd';\nimport { SearchOutlined, DownOutlined, CheckOutlined } from '@ant-design/icons';\nimport { airports } from '../data/airports';\nimport airlines from '../data/airlines';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport routeDetails from '../data/route_details.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(utc);\nconst FlightSearch = () => {\n  _s();\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const [selectedAirlines, setSelectedAirlines] = useState([]);\n  const [maxSegments, setMaxSegments] = useState(4);\n  const [searchResults, setSearchResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 25,\n    total: 0\n  });\n  const [errors, setErrors] = useState({\n    departure: false,\n    arrival: false,\n    maxSegments: false\n  });\n  const [tableSearchText, setTableSearchText] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedDates, setSelectedDates] = useState(null);\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [apiKey, setApiKey] = useState('');\n  const [segmentDetails, setSegmentDetails] = useState([]);\n  const [isLoadingSegments, setIsLoadingSegments] = useState(false);\n\n  // Sort airlines alphabetically\n  const sortedAirlines = [...airlines].map(airline => ({\n    ...airline,\n    searchStr: `${airline.value} ${airline.label}`.toLowerCase()\n  })).sort((a, b) => a.label.localeCompare(b.label));\n  const airportSelectProps = {\n    showSearch: true,\n    allowClear: true,\n    suffixIcon: null,\n    options: airports.map(airport => ({\n      value: airport.IATA,\n      label: `${airport.IATA} - ${airport.Name} (${airport.Country})`,\n      searchStr: `${airport.IATA} ${airport.Name}`.toLowerCase()\n    })),\n    filterOption: (input, option) => {\n      if (!input) return true;\n      input = input.toString().toLowerCase();\n\n      // IATA match\n      if (option.value.toLowerCase().includes(input)) {\n        option.priority = 2;\n        return true;\n      }\n\n      // Name/label match\n      if (option.label.toLowerCase().includes(input)) {\n        option.priority = 1;\n        return true;\n      }\n      return false;\n    },\n    filterSort: (optionA, optionB) => {\n      // Sort by priority (IATA matches first)\n      if (optionA.priority !== optionB.priority) {\n        return optionB.priority - optionA.priority;\n      }\n      // Then alphabetically\n      return optionA.label.localeCompare(optionB.label);\n    },\n    listHeight: 256,\n    virtual: true,\n    dropdownStyle: {\n      maxHeight: 400\n    }\n  };\n  const airlineSelectProps = {\n    showSearch: true,\n    allowClear: true,\n    filterSort: (optionA, optionB, input) => {\n      if (!input) return optionA.label.localeCompare(optionB.label);\n      const searchInput = input.toString().toLowerCase();\n      const aMatch = optionA.searchStr.includes(searchInput);\n      const bMatch = optionB.searchStr.includes(searchInput);\n      if (aMatch && !bMatch) return -1;\n      if (!aMatch && bMatch) return 1;\n      return optionA.label.localeCompare(optionB.label);\n    },\n    filterOption: (input, option) => {\n      if (!input) return true;\n      const searchInput = input.toString().toLowerCase();\n      return option.searchStr.includes(searchInput);\n    },\n    listHeight: 400,\n    virtual: false,\n    menuItemSelectedIcon: null,\n    dropdownStyle: {\n      maxHeight: 400\n    }\n  };\n  const columns = [{\n    title: 'Origin',\n    dataIndex: 'departure',\n    sorter: (a, b) => a.departure.localeCompare(b.departure),\n    width: 80\n  }, {\n    title: 'Connections',\n    key: 'connections',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: record.connections.length > 0 ? record.connections.join(' â†’ ') : '-'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this),\n    width: 200,\n    sorter: (a, b) => {\n      if (a.connections.length !== b.connections.length) {\n        return a.connections.length - b.connections.length;\n      }\n      return a.connections.join('').localeCompare(b.connections.join(''));\n    },\n    sortDirections: ['ascend', 'descend']\n  }, {\n    title: 'Destination',\n    dataIndex: 'arrival',\n    sorter: (a, b) => a.arrival.localeCompare(b.arrival),\n    width: 80\n  }, {\n    title: 'Stops',\n    dataIndex: 'numConnections',\n    sorter: (a, b) => a.numConnections - b.numConnections,\n    render: num => {\n      let color;\n      switch (num) {\n        case 0:\n          color = 'green';\n          break;\n        case 1:\n          color = 'blue';\n          break;\n        case 2:\n          color = 'orange';\n          break;\n        case 3:\n          color = 'gold';\n          break;\n        default:\n          color = 'red';\n      }\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: num === 0 ? 'Direct' : `${num} Stop${num > 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this);\n    },\n    width: 80\n  }, {\n    title: 'Distance',\n    dataIndex: 'totalDistance',\n    sorter: (a, b) => a.totalDistance - b.totalDistance,\n    render: distance => distance.toLocaleString(),\n    width: 60,\n    align: 'right'\n  }, {\n    title: 'Economy',\n    dataIndex: 'YPrice',\n    sorter: (a, b) => a.YPrice - b.YPrice,\n    render: price => price.toLocaleString(),\n    width: 80,\n    align: 'right'\n  }, {\n    title: 'Business',\n    dataIndex: 'JPrice',\n    sorter: (a, b) => a.JPrice - b.JPrice,\n    render: price => price.toLocaleString(),\n    width: 80,\n    align: 'right'\n  }, {\n    title: 'First',\n    dataIndex: 'FPrice',\n    sorter: (a, b) => a.FPrice - b.FPrice,\n    render: price => price.toLocaleString(),\n    width: 80,\n    align: 'right'\n  }, {\n    title: 'Y %',\n    dataIndex: 'Ynet',\n    width: 160,\n    render: text => text || '-',\n    sorter: (a, b) => {\n      const getPercent = str => {\n        if (!str) return 0;\n        const match = str.match(/^(-?\\d+)/);\n        return match ? parseInt(match[0]) : 0;\n      };\n      return getPercent(a.Ynet) - getPercent(b.Ynet);\n    }\n  }, {\n    title: 'J %',\n    dataIndex: 'Jnet',\n    width: 160,\n    render: text => text || '-',\n    sorter: (a, b) => {\n      const getPercent = str => {\n        if (!str) return 0;\n        const match = str.match(/^(-?\\d+)/);\n        return match ? parseInt(match[0]) : 0;\n      };\n      return getPercent(a.Jnet) - getPercent(b.Jnet);\n    }\n  }, {\n    title: 'F %',\n    dataIndex: 'Fnet',\n    width: 160,\n    render: text => text || '-',\n    sorter: (a, b) => {\n      const getPercent = str => {\n        if (!str) return 0;\n        const match = str.match(/^(-?\\d+)/);\n        return match ? parseInt(match[0]) : 0;\n      };\n      return getPercent(a.Fnet) - getPercent(b.Fnet);\n    }\n  }, {\n    title: '',\n    key: 'actions',\n    width: 20,\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      icon: /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this),\n      onClick: () => {\n        const fullRoute = [record.departure, ...record.connections, record.arrival];\n        setCurrentRoute(fullRoute);\n        setIsModalVisible(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)\n  }];\n  const handleSearch = async () => {\n    // Reset errors\n    setErrors({\n      departure: !departure,\n      arrival: !arrival,\n      maxSegments: !maxSegments\n    });\n\n    // Validate mandatory fields\n    if (!departure || !arrival || !maxSegments) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://backend-284998006367.us-central1.run.app/api/find-routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          departureAirport: departure,\n          arrivalAirport: arrival,\n          excludedAirline: selectedAirlines.length ? selectedAirlines[0] : \"null\",\n          maxSegments: maxSegments\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Search failed');\n      }\n      const data = await response.json();\n      setSearchResults(data);\n      setPagination(prev => ({\n        ...prev,\n        total: data.routes.length\n      }));\n    } catch (error) {\n      console.error('Search failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleTableChange = (newPagination, filters, sorter) => {\n    setPagination(newPagination);\n  };\n\n  // Filter function for the table data\n  const getFilteredData = () => {\n    if (!(searchResults !== null && searchResults !== void 0 && searchResults.routes) || !tableSearchText) {\n      return (searchResults === null || searchResults === void 0 ? void 0 : searchResults.routes) || [];\n    }\n    const searchLower = tableSearchText.toLowerCase();\n    return searchResults.routes.filter(route => {\n      // Convert all relevant fields to strings and check if they include the search text\n      return route.departure.toLowerCase().includes(searchLower) || route.arrival.toLowerCase().includes(searchLower) || route.connections.join(' ').toLowerCase().includes(searchLower) || route.YPrice.toString().includes(searchLower) || route.JPrice.toString().includes(searchLower) || route.FPrice.toString().includes(searchLower) || (route.Ynet || '').toLowerCase().includes(searchLower) || (route.Jnet || '').toLowerCase().includes(searchLower) || (route.Fnet || '').toLowerCase().includes(searchLower);\n    });\n  };\n  const formatTime = (dateStr, baseDate) => {\n    const date = dayjs(dateStr);\n    const base = dayjs(baseDate);\n\n    // If time is before 12:00 and it's a flight arrival, it's likely next day\n    const dayDiff = date.hour() < 12 && date.format('HH:mm') < '12:00' ? 1 : 0;\n    const timeStr = date.format('HH:mm');\n    return dayDiff > 0 ? `${timeStr} (+${dayDiff})` : timeStr;\n  };\n  const getAirlineName = code => {\n    const airline = airlines.find(a => a.value === code);\n    return airline ? airline.label.replace(` (${code})`, '') : code;\n  };\n  const handleDateSearch = async () => {\n    if (!selectedDates || !currentRoute || !apiKey) return;\n    setIsLoadingSegments(true);\n    const processedSegments = [];\n    const baseDate = selectedDates.format('YYYY-MM-DD');\n    try {\n      // Process all segments first\n      for (let i = 0; i < currentRoute.length - 1; i++) {\n        const from = currentRoute[i];\n        const to = currentRoute[i + 1];\n        const prevSegment = processedSegments[i - 1];\n        let timeWindow = null;\n        if (prevSegment) {\n          if (prevSegment.flights.length === 0) {\n            const prevFrom = currentRoute[i - 1];\n            const prevTo = currentRoute[i];\n            const prevDistance = getSegmentDistance(prevFrom, prevTo);\n            const minConnectionHours = Math.ceil(prevDistance / 575);\n            const baseTime = prevSegment.earliestArrival || dayjs(baseDate);\n            const endTime = prevSegment.latestArrival || baseTime;\n            timeWindow = {\n              earliestDeparture: baseTime.add(minConnectionHours, 'hour'),\n              latestDeparture: endTime.add(24, 'hour').add(minConnectionHours, 'hour')\n            };\n          } else {\n            timeWindow = {\n              earliestDeparture: prevSegment.earliestArrival,\n              latestDeparture: prevSegment.latestArrival.add(24, 'hour')\n            };\n          }\n        }\n        const segment = await processSegment(from, to, baseDate, timeWindow);\n        processedSegments.push(segment);\n      }\n\n      // Now revisit first segment and filter out invalid connections\n      if (processedSegments.length >= 2 && processedSegments[1].flights.length > 0) {\n        console.log('\\nRevising first segment based on second segment departures:');\n        const firstSegment = processedSegments[0];\n        const secondSegment = processedSegments[1];\n        const earliestSecondDeparture = secondSegment.flights.map(f => dayjs(f.DepartsAt)).reduce((earliest, curr) => earliest.isBefore(curr) ? earliest : curr);\n        console.log(`  Second segment earliest departure: ${earliestSecondDeparture.format('YYYY-MM-DD HH:mm')}`);\n        firstSegment.flights = firstSegment.flights.filter(flight => {\n          const arrivalTime = dayjs(flight.ArrivesAt);\n          const isValid = arrivalTime.isBefore(earliestSecondDeparture);\n          console.log(`  Checking ${flight.flightNumber}: arrives ${arrivalTime.format('YYYY-MM-DD HH:mm')} - ${isValid ? 'keep' : 'remove'}`);\n          return isValid;\n        });\n\n        // Update arrival bounds if needed\n        if (firstSegment.flights.length > 0) {\n          firstSegment.earliestArrival = dayjs(firstSegment.flights[0].ArrivesAt);\n          firstSegment.latestArrival = dayjs(firstSegment.flights[firstSegment.flights.length - 1].ArrivesAt);\n        } else {\n          firstSegment.earliestArrival = null;\n          firstSegment.latestArrival = null;\n        }\n      }\n      setSegmentDetails(processedSegments.flatMap(segment => segment.flights));\n    } catch (error) {\n      console.error('Error fetching segment details:', error);\n    } finally {\n      setIsLoadingSegments(false);\n    }\n  };\n  const processSegment = async (from, to, baseDate, timeWindow = null, nextSegmentFlights = null) => {\n    var _timeWindow;\n    const API_URL = 'https://backend-284998006367.us-central1.run.app';\n    const dates = new Set();\n\n    // Add base date\n    dates.add(baseDate);\n\n    // Add next day if time window extends to it\n    if ((_timeWindow = timeWindow) !== null && _timeWindow !== void 0 && _timeWindow.latestDeparture) {\n      const nextDay = dayjs(baseDate).add(1, 'day').format('YYYY-MM-DD');\n      if (timeWindow.latestDeparture.isAfter(dayjs(nextDay))) {\n        dates.add(nextDay);\n      }\n    }\n    const flights = [];\n    let earliestArrival = null;\n    let latestArrival = null;\n    console.log(`Processing route ${from}-${to}:`);\n\n    // Process each date\n    for (const date of dates) {\n      const route = routeDetails.find(r => r.origin === from && r.destination === to && r.date === date);\n      if (route) {\n        console.log(`  Found segment ID ${route.ID} for date ${date}`);\n        try {\n          var _data$results, _data$results$, _data$results$$data;\n          const response = await fetch(`${API_URL}/api/seats/${route.ID}`, {\n            method: 'GET',\n            headers: {\n              'accept': 'application/json',\n              'Partner-Authorization': apiKey,\n              'Segment-ID': route.ID\n            }\n          });\n          if (!response.ok) {\n            console.log(`  Failed to fetch segment ${route.ID}: ${response.status}`);\n            continue;\n          }\n          const data = await response.json();\n\n          // For non-first segments, check if there are any next segment flights\n          if (timeWindow && (_data$results = data.results) !== null && _data$results !== void 0 && (_data$results$ = _data$results[0]) !== null && _data$results$ !== void 0 && (_data$results$$data = _data$results$.data) !== null && _data$results$$data !== void 0 && _data$results$$data.data) {\n            const nextSegmentFlights = data.results[0].data.data;\n            if (nextSegmentFlights.length === 1) {\n              const nextFlight = nextSegmentFlights[0];\n              const nextDeparture = dayjs(nextFlight.DepartsAt.replace('Z', ''));\n\n              // Add minimum connection time (e.g., 1 hour)\n              const minConnectionTime = 1;\n              const maxConnectionTime = 4; // Maximum 4 hours connection time\n\n              // Modify timeWindow to only allow flights that make viable connections\n              timeWindow = {\n                earliestDeparture: timeWindow.earliestDeparture,\n                latestDeparture: nextDeparture.subtract(minConnectionTime, 'hour'),\n                nextFlightDeparture: nextDeparture,\n                maxConnectionTime: maxConnectionTime\n              };\n              console.log(`  Adjusting time window for single next flight:\n    Next flight departs: ${nextDeparture.format('YYYY-MM-DD HH:mm')}\n    Must arrive by: ${timeWindow.latestDeparture.format('YYYY-MM-DD HH:mm')}\n    Maximum connection time: ${maxConnectionTime} hours`);\n            }\n          }\n          const validFlights = processFlightData(data, timeWindow);\n          console.log(`  Segment ${route.ID}: Found ${validFlights.length} valid flights`);\n          flights.push(...validFlights);\n\n          // Update arrival time bounds\n          validFlights.forEach(flight => {\n            const arrivalTime = dayjs(flight.ArrivesAt);\n            if (!earliestArrival || arrivalTime.isBefore(earliestArrival)) {\n              earliestArrival = arrivalTime;\n            }\n            if (!latestArrival || arrivalTime.isAfter(latestArrival)) {\n              latestArrival = arrivalTime;\n            }\n          });\n        } catch (error) {\n          console.error(`  Error fetching segment ${route.ID}:`, error);\n        }\n      } else {\n        console.log(`  No segment found for ${from}-${to} on ${date}`);\n      }\n    }\n\n    // If this is first segment and we have next segment data, get latest possible arrival\n    let latestPossibleArrival = null;\n    if (nextSegmentFlights && nextSegmentFlights.length > 0) {\n      // Find earliest departure in next segment\n      const earliestNextDeparture = nextSegmentFlights.map(f => dayjs(f.DepartsAt.replace('Z', ''))).reduce((earliest, curr) => earliest.isBefore(curr) ? earliest : curr);\n      latestPossibleArrival = earliestNextDeparture;\n      console.log(`  Latest possible arrival for connection: ${latestPossibleArrival.format('YYYY-MM-DD HH:mm')}`);\n    }\n    return {\n      route: `${from}-${to}`,\n      flights,\n      earliestArrival,\n      latestArrival\n    };\n  };\n  const processFlightData = (data, timeWindow) => {\n    var _data$results2, _data$results2$, _data$results2$$data;\n    const flights = {};\n    const baseDate = selectedDates.format('YYYY-MM-DD');\n    const rawFlights = ((_data$results2 = data.results) === null || _data$results2 === void 0 ? void 0 : (_data$results2$ = _data$results2[0]) === null || _data$results2$ === void 0 ? void 0 : (_data$results2$$data = _data$results2$.data) === null || _data$results2$$data === void 0 ? void 0 : _data$results2$$data.data) || [];\n    console.log(`  Processing ${rawFlights.length} raw flights`);\n    rawFlights.filter(trip => {\n      if (trip.Stops !== 0) {\n        console.log(`  Skipping flight with ${trip.Stops} stops`);\n        return false;\n      }\n      if (timeWindow) {\n        const departureTime = dayjs(trip.DepartsAt.replace('Z', '')); // Remove Z to treat as local time\n        const isValid = departureTime.isAfter(timeWindow.earliestDeparture) && departureTime.isBefore(timeWindow.latestDeparture);\n        if (!isValid) {\n          console.log(`  Skipping flight outside time window: ${departureTime.format('YYYY-MM-DD HH:mm')}`);\n        }\n        return isValid;\n      }\n      return true;\n    }).forEach(trip => {\n      const flightNumber = trip.FlightNumbers;\n      const departureTime = dayjs(trip.DepartsAt.replace('Z', '')); // Remove Z to treat as local time\n      const existingFlight = flights[flightNumber];\n\n      // If this is a duplicate flight, only keep the later one\n      if (existingFlight) {\n        const existingDeparture = dayjs(existingFlight.DepartsAt.replace('Z', '')); // Remove Z to treat as local time\n        if (departureTime.isBefore(existingDeparture)) {\n          return; // Skip this one, keep the existing later flight\n        }\n      }\n      const arrivalTime = dayjs(trip.ArrivesAt.replace('Z', '')); // Remove Z to treat as local time\n      const baseDayjs = dayjs(baseDate);\n\n      // Calculate day difference from base date\n      const departDayDiff = departureTime.diff(baseDayjs, 'day');\n      const arrivalDayDiff = arrivalTime.diff(baseDayjs, 'day');\n      flights[flightNumber] = {\n        from: trip.OriginAirport,\n        to: trip.DestinationAirport,\n        flightNumber: flightNumber,\n        airlines: getAirlineName(trip.Carriers),\n        aircraft: trip.Aircraft[0],\n        departs: departDayDiff > 0 ? `${departureTime.format('HH:mm')} (+${departDayDiff})` : departureTime.format('HH:mm'),\n        arrives: arrivalDayDiff > 0 ? `${arrivalTime.format('HH:mm')} (+${arrivalDayDiff})` : arrivalTime.format('HH:mm'),\n        DepartsAt: trip.DepartsAt.replace('Z', ''),\n        // Store without Z\n        ArrivesAt: trip.ArrivesAt.replace('Z', ''),\n        // Store without Z\n        economy: false,\n        business: false,\n        first: false\n      };\n      switch (trip.Cabin.toLowerCase()) {\n        case 'economy':\n          flights[flightNumber].economy = true;\n          break;\n        case 'business':\n          flights[flightNumber].business = true;\n          break;\n        case 'first':\n          flights[flightNumber].first = true;\n          break;\n      }\n    });\n    return Object.values(flights);\n  };\n  const getSegmentDistance = (from, to) => {\n    const route = routeDetails.find(r => r.origin === from && r.destination === to);\n    if (!route) {\n      console.log(`Warning: No route found for ${from}-${to}, using default distance`);\n      return 1000;\n    }\n    console.log(`Distance for ${from}-${to}: ${route.distance.toLocaleString()} miles`);\n    return route.distance;\n  };\n  const segmentColumns = [{\n    title: 'From',\n    dataIndex: 'from',\n    width: 80,\n    sorter: (a, b) => a.from.localeCompare(b.from)\n  }, {\n    title: 'To',\n    dataIndex: 'to',\n    width: 80,\n    sorter: (a, b) => a.to.localeCompare(b.to)\n  }, {\n    title: 'Flight',\n    dataIndex: 'flightNumber',\n    width: 100,\n    sorter: (a, b) => a.flightNumber.localeCompare(b.flightNumber)\n  }, {\n    title: 'Airlines',\n    dataIndex: 'airlines',\n    width: 150,\n    sorter: (a, b) => a.airlines.localeCompare(b.airlines)\n  }, {\n    title: 'Aircraft',\n    dataIndex: 'aircraft',\n    width: 180,\n    sorter: (a, b) => a.aircraft.localeCompare(b.aircraft)\n  }, {\n    title: 'Departs',\n    dataIndex: 'departs',\n    width: 100,\n    sorter: (a, b) => {\n      // Extract day difference\n      const aDayDiff = a.departs.includes('+') ? parseInt(a.departs.match(/\\+(\\d+)/)[1]) : 0;\n      const bDayDiff = b.departs.includes('+') ? parseInt(b.departs.match(/\\+(\\d+)/)[1]) : 0;\n\n      // Extract time\n      const aTime = a.departs.split(' ')[0];\n      const bTime = b.departs.split(' ')[0];\n\n      // Compare days first, then times\n      if (aDayDiff !== bDayDiff) {\n        return aDayDiff - bDayDiff;\n      }\n      return aTime.localeCompare(bTime);\n    },\n    defaultSortOrder: 'ascend'\n  }, {\n    title: 'Arrives',\n    dataIndex: 'arrives',\n    width: 100,\n    sorter: (a, b) => {\n      // Extract day difference\n      const aDayDiff = a.arrives.includes('+') ? parseInt(a.arrives.match(/\\+(\\d+)/)[1]) : 0;\n      const bDayDiff = b.arrives.includes('+') ? parseInt(b.arrives.match(/\\+(\\d+)/)[1]) : 0;\n\n      // Extract time\n      const aTime = a.arrives.split(' ')[0];\n      const bTime = b.arrives.split(' ')[0];\n\n      // Compare days first, then times\n      if (aDayDiff !== bDayDiff) {\n        return aDayDiff - bDayDiff;\n      }\n      return aTime.localeCompare(bTime);\n    }\n  }, {\n    title: 'Economy',\n    dataIndex: 'economy',\n    width: 60,\n    align: 'center',\n    sorter: (a, b) => a.economy === b.economy ? 0 : a.economy ? -1 : 1,\n    render: hasClass => hasClass ? /*#__PURE__*/_jsxDEV(CheckOutlined, {\n      style: {\n        color: '#52c41a'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 38\n    }, this) : null\n  }, {\n    title: 'Business',\n    dataIndex: 'business',\n    width: 60,\n    align: 'center',\n    sorter: (a, b) => a.business === b.business ? 0 : a.business ? -1 : 1,\n    render: hasClass => hasClass ? /*#__PURE__*/_jsxDEV(CheckOutlined, {\n      style: {\n        color: '#52c41a'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 38\n    }, this) : null\n  }, {\n    title: 'First',\n    dataIndex: 'first',\n    width: 60,\n    align: 'center',\n    sorter: (a, b) => a.first === b.first ? 0 : a.first ? -1 : 1,\n    render: hasClass => hasClass ? /*#__PURE__*/_jsxDEV(CheckOutlined, {\n      style: {\n        color: '#52c41a'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 38\n    }, this) : null\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"search-form\",\n      style: {\n        boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-search-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-label\",\n          children: \"Departure Airport: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          ...airportSelectProps,\n          value: departure,\n          onChange: setDeparture,\n          placeholder: \"Select departure airport...\",\n          className: \"airport-select\",\n          status: errors.departure ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-search-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-label\",\n          children: \"Arrival Airport: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          ...airportSelectProps,\n          value: arrival,\n          onChange: setArrival,\n          placeholder: \"Select arrival airport...\",\n          className: \"airport-select\",\n          status: errors.arrival ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-search-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-label\",\n          children: \"Airlines Excluded:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          ...airlineSelectProps,\n          mode: \"multiple\",\n          value: selectedAirlines,\n          onChange: setSelectedAirlines,\n          options: sortedAirlines,\n          placeholder: \"Select airlines...\",\n          className: \"airline-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segments-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-label\",\n          children: \"Maximum Segments *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n          min: 1,\n          max: 5,\n          value: maxSegments,\n          onChange: setMaxSegments,\n          status: errors.maxSegments ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 17\n        }, this),\n        onClick: handleSearch,\n        loading: isLoading,\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 7\n    }, this), searchResults && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"results-card\",\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Search routes...\",\n          value: tableSearchText,\n          onChange: e => setTableSearchText(e.target.value),\n          style: {\n            width: 200\n          },\n          allowClear: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 13\n      }, this),\n      style: {\n        boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: getFilteredData(),\n        columns: columns,\n        rowKey: (record, index) => index,\n        pagination: {\n          ...pagination,\n          showSizeChanger: true,\n          showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} routes`,\n          pageSizeOptions: ['10', '25', '50', '100'],\n          defaultPageSize: 25\n        },\n        loading: isLoading,\n        onChange: handleTableChange,\n        scroll: {\n          x: 1600\n        },\n        showSorterTooltip: true,\n        sortDirections: ['ascend', 'descend']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Flight Details\",\n      open: isModalVisible,\n      onOk: handleDateSearch,\n      onCancel: () => {\n        setIsModalVisible(false);\n        setSelectedDates(null);\n        setApiKey('');\n        setSegmentDetails([]);\n      },\n      okText: \"Search Flights\",\n      okButtonProps: {\n        disabled: !selectedDates || !apiKey,\n        loading: isLoadingSegments\n      },\n      width: 1500,\n      styles: {\n        body: {\n          padding: '12px',\n          maxWidth: '100%'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 8\n          },\n          children: \"Select Travel Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          style: {\n            width: '100%'\n          },\n          onChange: date => setSelectedDates(date),\n          disabledDate: current => current && current < dayjs().startOf('day')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 8\n          },\n          children: \"API Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter API key\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 9\n      }, this), isLoadingSegments ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          overflowX: 'auto'\n        },\n        children: currentRoute && currentRoute.slice(0, -1).map((from, index) => {\n          const to = currentRoute[index + 1];\n          const routeKey = `${from}-${to}`;\n          const flights = segmentDetails.filter(flight => flight.from === from && flight.to === to);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '24px',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '16px'\n              },\n              children: routeKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              dataSource: flights,\n              columns: segmentColumns,\n              size: \"small\",\n              rowKey: (record, index) => `${routeKey}-${index}`,\n              sortDirections: ['ascend', 'descend'],\n              style: {\n                width: '100%',\n                tableLayout: 'fixed'\n              },\n              pagination: {\n                defaultPageSize: 10,\n                showSizeChanger: true,\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n                pageSizeOptions: ['10', '20', '50', 'all'],\n                position: ['bottomRight']\n              },\n              locale: {\n                emptyText: 'No flights available'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 19\n            }, this)]\n          }, routeKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .flight-search-container {\n          max-width: 1200px;\n          margin: 20px auto;\n          padding: 0 20px;\n        }\n        .search-form {\n          margin-bottom: 20px;\n        }\n        .flight-search-element {\n          margin-bottom: 16px;\n        }\n        .element-label {\n          margin-bottom: 8px;\n          font-weight: 500;\n        }\n        .element-label::after {\n          content: \" *\";\n          color: #ff4d4f;\n          display: none;\n        }\n        .element-label:has(+ [data-required=\"true\"])::after {\n          display: inline;\n        }\n        .airport-select,\n        .airline-select {\n          width: 100%;\n        }\n        .segments-element {\n          margin-bottom: 16px;\n        }\n        .search-button {\n          margin-top: 24px;\n          width: 100%;\n        }\n        .results-card {\n          margin-top: 24px;\n        }\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 738,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightSearch, \"1u9lGVFrmrOqoEwG7dluSDT7TdA=\");\n_c = FlightSearch;\nexport default FlightSearch;\nvar _c;\n$RefreshReg$(_c, \"FlightSearch\");","map":{"version":3,"names":["React","useState","useEffect","Select","InputNumber","Button","Table","Card","Tag","Spin","Input","Modal","DatePicker","SearchOutlined","DownOutlined","CheckOutlined","airports","airlines","dayjs","utc","routeDetails","jsxDEV","_jsxDEV","extend","FlightSearch","_s","departure","setDeparture","arrival","setArrival","selectedAirlines","setSelectedAirlines","maxSegments","setMaxSegments","searchResults","setSearchResults","isLoading","setIsLoading","pagination","setPagination","current","pageSize","total","errors","setErrors","tableSearchText","setTableSearchText","isModalVisible","setIsModalVisible","selectedDates","setSelectedDates","currentRoute","setCurrentRoute","apiKey","setApiKey","segmentDetails","setSegmentDetails","isLoadingSegments","setIsLoadingSegments","sortedAirlines","map","airline","searchStr","value","label","toLowerCase","sort","a","b","localeCompare","airportSelectProps","showSearch","allowClear","suffixIcon","options","airport","IATA","Name","Country","filterOption","input","option","toString","includes","priority","filterSort","optionA","optionB","listHeight","virtual","dropdownStyle","maxHeight","airlineSelectProps","searchInput","aMatch","bMatch","menuItemSelectedIcon","columns","title","dataIndex","sorter","width","key","render","_","record","children","connections","length","join","fileName","_jsxFileName","lineNumber","columnNumber","sortDirections","numConnections","num","color","totalDistance","distance","toLocaleString","align","YPrice","price","JPrice","FPrice","text","getPercent","str","match","parseInt","Ynet","Jnet","Fnet","type","icon","onClick","fullRoute","handleSearch","response","fetch","method","headers","body","JSON","stringify","departureAirport","arrivalAirport","excludedAirline","ok","Error","data","json","prev","routes","error","console","handleTableChange","newPagination","filters","getFilteredData","searchLower","filter","route","formatTime","dateStr","baseDate","date","base","dayDiff","hour","format","timeStr","getAirlineName","code","find","replace","handleDateSearch","processedSegments","i","from","to","prevSegment","timeWindow","flights","prevFrom","prevTo","prevDistance","getSegmentDistance","minConnectionHours","Math","ceil","baseTime","earliestArrival","endTime","latestArrival","earliestDeparture","add","latestDeparture","segment","processSegment","push","log","firstSegment","secondSegment","earliestSecondDeparture","f","DepartsAt","reduce","earliest","curr","isBefore","flight","arrivalTime","ArrivesAt","isValid","flightNumber","flatMap","nextSegmentFlights","_timeWindow","API_URL","dates","Set","nextDay","isAfter","r","origin","destination","ID","_data$results","_data$results$","_data$results$$data","status","results","nextFlight","nextDeparture","minConnectionTime","maxConnectionTime","subtract","nextFlightDeparture","validFlights","processFlightData","forEach","latestPossibleArrival","earliestNextDeparture","_data$results2","_data$results2$","_data$results2$$data","rawFlights","trip","Stops","departureTime","FlightNumbers","existingFlight","existingDeparture","baseDayjs","departDayDiff","diff","arrivalDayDiff","OriginAirport","DestinationAirport","Carriers","aircraft","Aircraft","departs","arrives","economy","business","first","Cabin","Object","values","segmentColumns","aDayDiff","bDayDiff","aTime","split","bTime","defaultSortOrder","hasClass","style","className","boxShadow","onChange","placeholder","mode","min","max","loading","display","justifyContent","alignItems","e","target","dataSource","rowKey","index","showSizeChanger","showTotal","range","pageSizeOptions","defaultPageSize","scroll","x","showSorterTooltip","open","onOk","onCancel","okText","okButtonProps","disabled","styles","padding","maxWidth","marginBottom","disabledDate","startOf","textAlign","overflowX","slice","routeKey","size","tableLayout","position","locale","emptyText","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Downloads/route-builder-ac1-test/src/pages/FlightSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Select, InputNumber, Button, Table, Card, Tag, Spin, Input, Modal, DatePicker } from 'antd';\nimport { SearchOutlined, DownOutlined, CheckOutlined } from '@ant-design/icons';\nimport { airports } from '../data/airports';\nimport airlines from '../data/airlines';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport routeDetails from '../data/route_details.json';\ndayjs.extend(utc);\n\nconst FlightSearch = () => {\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const [selectedAirlines, setSelectedAirlines] = useState([]);\n  const [maxSegments, setMaxSegments] = useState(4);\n  const [searchResults, setSearchResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 25,\n    total: 0,\n  });\n  const [errors, setErrors] = useState({\n    departure: false,\n    arrival: false,\n    maxSegments: false\n  });\n  const [tableSearchText, setTableSearchText] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedDates, setSelectedDates] = useState(null);\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [apiKey, setApiKey] = useState('');\n  const [segmentDetails, setSegmentDetails] = useState([]);\n  const [isLoadingSegments, setIsLoadingSegments] = useState(false);\n\n  // Sort airlines alphabetically\n  const sortedAirlines = [...airlines]\n    .map(airline => ({\n      ...airline,\n      searchStr: `${airline.value} ${airline.label}`.toLowerCase()\n    }))\n    .sort((a, b) => a.label.localeCompare(b.label));\n\n  const airportSelectProps = {\n    showSearch: true,\n    allowClear: true,\n    suffixIcon: null,\n    options: airports.map(airport => ({\n      value: airport.IATA,\n      label: `${airport.IATA} - ${airport.Name} (${airport.Country})`,\n      searchStr: `${airport.IATA} ${airport.Name}`.toLowerCase()\n    })),\n    filterOption: (input, option) => {\n      if (!input) return true;\n      input = input.toString().toLowerCase();\n      \n      // IATA match\n      if (option.value.toLowerCase().includes(input)) {\n        option.priority = 2;\n        return true;\n      }\n      \n      // Name/label match\n      if (option.label.toLowerCase().includes(input)) {\n        option.priority = 1;\n        return true;\n      }\n      \n      return false;\n    },\n    filterSort: (optionA, optionB) => {\n      // Sort by priority (IATA matches first)\n      if (optionA.priority !== optionB.priority) {\n        return optionB.priority - optionA.priority;\n      }\n      // Then alphabetically\n      return optionA.label.localeCompare(optionB.label);\n    },\n    listHeight: 256,\n    virtual: true,\n    dropdownStyle: { maxHeight: 400 }\n  };\n\n  const airlineSelectProps = {\n    showSearch: true,\n    allowClear: true,\n    filterSort: (optionA, optionB, input) => {\n      if (!input) return optionA.label.localeCompare(optionB.label);\n      \n      const searchInput = input.toString().toLowerCase();\n      const aMatch = optionA.searchStr.includes(searchInput);\n      const bMatch = optionB.searchStr.includes(searchInput);\n      \n      if (aMatch && !bMatch) return -1;\n      if (!aMatch && bMatch) return 1;\n\n      return optionA.label.localeCompare(optionB.label);\n    },\n    filterOption: (input, option) => {\n      if (!input) return true;\n      const searchInput = input.toString().toLowerCase();\n      return option.searchStr.includes(searchInput);\n    },\n    listHeight: 400,\n    virtual: false,\n    menuItemSelectedIcon: null,\n    dropdownStyle: { maxHeight: 400 }\n  };\n\n  const columns = [\n    {\n      title: 'Origin',\n      dataIndex: 'departure',\n      sorter: (a, b) => a.departure.localeCompare(b.departure),\n      width: 80,\n    },\n    {\n      title: 'Connections',\n      key: 'connections',\n      render: (_, record) => (\n        <span>\n          {record.connections.length > 0 \n            ? record.connections.join(' â†’ ')\n            : '-'}\n        </span>\n      ),\n      width: 200,\n      sorter: (a, b) => {\n        if (a.connections.length !== b.connections.length) {\n          return a.connections.length - b.connections.length;\n        }\n        return a.connections.join('').localeCompare(b.connections.join(''));\n      },\n      sortDirections: ['ascend', 'descend'],\n    },\n    {\n      title: 'Destination',\n      dataIndex: 'arrival',\n      sorter: (a, b) => a.arrival.localeCompare(b.arrival),\n      width: 80,\n    },\n    {\n      title: 'Stops',\n      dataIndex: 'numConnections',\n      sorter: (a, b) => a.numConnections - b.numConnections,\n      render: (num) => {\n        let color;\n        switch (num) {\n          case 0: color = 'green'; break;\n          case 1: color = 'blue'; break;\n          case 2: color = 'orange'; break;\n          case 3: color = 'gold'; break;\n          default: color = 'red';\n        }\n        return (\n          <Tag color={color}>\n            {num === 0 ? 'Direct' : `${num} Stop${num > 1 ? 's' : ''}`}\n          </Tag>\n        );\n      },\n      width: 80,\n    },\n    {\n      title: 'Distance',\n      dataIndex: 'totalDistance',\n      sorter: (a, b) => a.totalDistance - b.totalDistance,\n      render: (distance) => distance.toLocaleString(),\n      width: 60,\n      align: 'right',\n    },\n    {\n      title: 'Economy',\n      dataIndex: 'YPrice',\n      sorter: (a, b) => a.YPrice - b.YPrice,\n      render: (price) => price.toLocaleString(),\n      width: 80,\n      align: 'right',\n    },\n    {\n      title: 'Business',\n      dataIndex: 'JPrice',\n      sorter: (a, b) => a.JPrice - b.JPrice,\n      render: (price) => price.toLocaleString(),\n      width: 80,\n      align: 'right',\n    },\n    {\n      title: 'First',\n      dataIndex: 'FPrice',\n      sorter: (a, b) => a.FPrice - b.FPrice,\n      render: (price) => price.toLocaleString(),\n      width: 80,\n      align: 'right',\n    },\n    {\n      title: 'Y %',\n      dataIndex: 'Ynet',\n      width: 160,\n      render: (text) => text || '-',\n      sorter: (a, b) => {\n        const getPercent = (str) => {\n          if (!str) return 0;\n          const match = str.match(/^(-?\\d+)/);\n          return match ? parseInt(match[0]) : 0;\n        };\n        return getPercent(a.Ynet) - getPercent(b.Ynet);\n      },\n    },\n    {\n      title: 'J %',\n      dataIndex: 'Jnet',\n      width: 160,\n      render: (text) => text || '-',\n      sorter: (a, b) => {\n        const getPercent = (str) => {\n          if (!str) return 0;\n          const match = str.match(/^(-?\\d+)/);\n          return match ? parseInt(match[0]) : 0;\n        };\n        return getPercent(a.Jnet) - getPercent(b.Jnet);\n      },\n    },\n    {\n      title: 'F %',\n      dataIndex: 'Fnet',\n      width: 160,\n      render: (text) => text || '-',\n      sorter: (a, b) => {\n        const getPercent = (str) => {\n          if (!str) return 0;\n          const match = str.match(/^(-?\\d+)/);\n          return match ? parseInt(match[0]) : 0;\n        };\n        return getPercent(a.Fnet) - getPercent(b.Fnet);\n      },\n    },\n    {\n      title: '',\n      key: 'actions',\n      width: 20,\n      render: (_, record) => (\n        <Button \n          type=\"link\" \n          icon={<DownOutlined />}\n          onClick={() => {\n            const fullRoute = [record.departure, ...record.connections, record.arrival];\n            setCurrentRoute(fullRoute);\n            setIsModalVisible(true);\n          }}\n        />\n      ),\n    }\n  ];\n\n  const handleSearch = async () => {\n    // Reset errors\n    setErrors({\n      departure: !departure,\n      arrival: !arrival,\n      maxSegments: !maxSegments\n    });\n\n    // Validate mandatory fields\n    if (!departure || !arrival || !maxSegments) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://backend-284998006367.us-central1.run.app/api/find-routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          departureAirport: departure,\n          arrivalAirport: arrival,\n          excludedAirline: selectedAirlines.length ? selectedAirlines[0] : \"null\",\n          maxSegments: maxSegments\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Search failed');\n      }\n\n      const data = await response.json();\n      setSearchResults(data);\n      setPagination(prev => ({\n        ...prev,\n        total: data.routes.length\n      }));\n    } catch (error) {\n      console.error('Search failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleTableChange = (newPagination, filters, sorter) => {\n    setPagination(newPagination);\n  };\n\n  // Filter function for the table data\n  const getFilteredData = () => {\n    if (!searchResults?.routes || !tableSearchText) {\n      return searchResults?.routes || [];\n    }\n\n    const searchLower = tableSearchText.toLowerCase();\n    return searchResults.routes.filter(route => {\n      // Convert all relevant fields to strings and check if they include the search text\n      return (\n        route.departure.toLowerCase().includes(searchLower) ||\n        route.arrival.toLowerCase().includes(searchLower) ||\n        route.connections.join(' ').toLowerCase().includes(searchLower) ||\n        route.YPrice.toString().includes(searchLower) ||\n        route.JPrice.toString().includes(searchLower) ||\n        route.FPrice.toString().includes(searchLower) ||\n        (route.Ynet || '').toLowerCase().includes(searchLower) ||\n        (route.Jnet || '').toLowerCase().includes(searchLower) ||\n        (route.Fnet || '').toLowerCase().includes(searchLower)\n      );\n    });\n  };\n\n  const formatTime = (dateStr, baseDate) => {\n    const date = dayjs(dateStr);\n    const base = dayjs(baseDate);\n    \n    // If time is before 12:00 and it's a flight arrival, it's likely next day\n    const dayDiff = date.hour() < 12 && date.format('HH:mm') < '12:00' ? 1 : 0;\n    \n    const timeStr = date.format('HH:mm');\n    return dayDiff > 0 ? `${timeStr} (+${dayDiff})` : timeStr;\n  };\n\n  const getAirlineName = (code) => {\n    const airline = airlines.find(a => a.value === code);\n    return airline ? airline.label.replace(` (${code})`, '') : code;\n  };\n\n  const handleDateSearch = async () => {\n    if (!selectedDates || !currentRoute || !apiKey) return;\n    \n    setIsLoadingSegments(true);\n    const processedSegments = [];\n    const baseDate = selectedDates.format('YYYY-MM-DD');\n    \n    try {\n      // Process all segments first\n      for (let i = 0; i < currentRoute.length - 1; i++) {\n        const from = currentRoute[i];\n        const to = currentRoute[i + 1];\n        const prevSegment = processedSegments[i - 1];\n        \n        let timeWindow = null;\n        if (prevSegment) {\n          if (prevSegment.flights.length === 0) {\n            const prevFrom = currentRoute[i - 1];\n            const prevTo = currentRoute[i];\n            const prevDistance = getSegmentDistance(prevFrom, prevTo);\n            const minConnectionHours = Math.ceil(prevDistance / 575);\n            \n            const baseTime = prevSegment.earliestArrival || dayjs(baseDate);\n            const endTime = prevSegment.latestArrival || baseTime;\n            \n            timeWindow = {\n              earliestDeparture: baseTime.add(minConnectionHours, 'hour'),\n              latestDeparture: endTime.add(24, 'hour').add(minConnectionHours, 'hour')\n            };\n          } else {\n            timeWindow = {\n              earliestDeparture: prevSegment.earliestArrival,\n              latestDeparture: prevSegment.latestArrival.add(24, 'hour')\n            };\n          }\n        }\n\n        const segment = await processSegment(from, to, baseDate, timeWindow);\n        processedSegments.push(segment);\n      }\n\n      // Now revisit first segment and filter out invalid connections\n      if (processedSegments.length >= 2 && processedSegments[1].flights.length > 0) {\n        console.log('\\nRevising first segment based on second segment departures:');\n        const firstSegment = processedSegments[0];\n        const secondSegment = processedSegments[1];\n        \n        const earliestSecondDeparture = secondSegment.flights\n          .map(f => dayjs(f.DepartsAt))\n          .reduce((earliest, curr) => earliest.isBefore(curr) ? earliest : curr);\n        \n        console.log(`  Second segment earliest departure: ${earliestSecondDeparture.format('YYYY-MM-DD HH:mm')}`);\n        \n        firstSegment.flights = firstSegment.flights.filter(flight => {\n          const arrivalTime = dayjs(flight.ArrivesAt);\n          const isValid = arrivalTime.isBefore(earliestSecondDeparture);\n          console.log(`  Checking ${flight.flightNumber}: arrives ${arrivalTime.format('YYYY-MM-DD HH:mm')} - ${isValid ? 'keep' : 'remove'}`);\n          return isValid;\n        });\n\n        // Update arrival bounds if needed\n        if (firstSegment.flights.length > 0) {\n          firstSegment.earliestArrival = dayjs(firstSegment.flights[0].ArrivesAt);\n          firstSegment.latestArrival = dayjs(firstSegment.flights[firstSegment.flights.length - 1].ArrivesAt);\n        } else {\n          firstSegment.earliestArrival = null;\n          firstSegment.latestArrival = null;\n        }\n      }\n\n      setSegmentDetails(processedSegments.flatMap(segment => segment.flights));\n    } catch (error) {\n      console.error('Error fetching segment details:', error);\n    } finally {\n      setIsLoadingSegments(false);\n    }\n  };\n\n  const processSegment = async (from, to, baseDate, timeWindow = null, nextSegmentFlights = null) => {\n    const API_URL = 'https://backend-284998006367.us-central1.run.app';\n    const dates = new Set();\n    \n    // Add base date\n    dates.add(baseDate);\n    \n    // Add next day if time window extends to it\n    if (timeWindow?.latestDeparture) {\n      const nextDay = dayjs(baseDate).add(1, 'day').format('YYYY-MM-DD');\n      if (timeWindow.latestDeparture.isAfter(dayjs(nextDay))) {\n        dates.add(nextDay);\n      }\n    }\n\n    const flights = [];\n    let earliestArrival = null;\n    let latestArrival = null;\n\n    console.log(`Processing route ${from}-${to}:`);\n    \n    // Process each date\n    for (const date of dates) {\n      const route = routeDetails.find(r => \n        r.origin === from && \n        r.destination === to && \n        r.date === date\n      );\n      \n      if (route) {\n        console.log(`  Found segment ID ${route.ID} for date ${date}`);\n        try {\n          const response = await fetch(`${API_URL}/api/seats/${route.ID}`, {\n            method: 'GET',\n            headers: {\n              'accept': 'application/json',\n              'Partner-Authorization': apiKey,\n              'Segment-ID': route.ID\n            }\n          });\n\n          if (!response.ok) {\n            console.log(`  Failed to fetch segment ${route.ID}: ${response.status}`);\n            continue;\n          }\n\n          const data = await response.json();\n          \n          // For non-first segments, check if there are any next segment flights\n          if (timeWindow && data.results?.[0]?.data?.data) {\n            const nextSegmentFlights = data.results[0].data.data;\n            if (nextSegmentFlights.length === 1) {\n              const nextFlight = nextSegmentFlights[0];\n              const nextDeparture = dayjs(nextFlight.DepartsAt.replace('Z', ''));\n              \n              // Add minimum connection time (e.g., 1 hour)\n              const minConnectionTime = 1;\n              const maxConnectionTime = 4; // Maximum 4 hours connection time\n              \n              // Modify timeWindow to only allow flights that make viable connections\n              timeWindow = {\n                earliestDeparture: timeWindow.earliestDeparture,\n                latestDeparture: nextDeparture.subtract(minConnectionTime, 'hour'),\n                nextFlightDeparture: nextDeparture,\n                maxConnectionTime: maxConnectionTime\n              };\n              \n              console.log(`  Adjusting time window for single next flight:\n    Next flight departs: ${nextDeparture.format('YYYY-MM-DD HH:mm')}\n    Must arrive by: ${timeWindow.latestDeparture.format('YYYY-MM-DD HH:mm')}\n    Maximum connection time: ${maxConnectionTime} hours`);\n            }\n          }\n\n          const validFlights = processFlightData(data, timeWindow);\n          console.log(`  Segment ${route.ID}: Found ${validFlights.length} valid flights`);\n          \n          flights.push(...validFlights);\n\n          // Update arrival time bounds\n          validFlights.forEach(flight => {\n            const arrivalTime = dayjs(flight.ArrivesAt);\n            if (!earliestArrival || arrivalTime.isBefore(earliestArrival)) {\n              earliestArrival = arrivalTime;\n            }\n            if (!latestArrival || arrivalTime.isAfter(latestArrival)) {\n              latestArrival = arrivalTime;\n            }\n          });\n        } catch (error) {\n          console.error(`  Error fetching segment ${route.ID}:`, error);\n        }\n      } else {\n        console.log(`  No segment found for ${from}-${to} on ${date}`);\n      }\n    }\n\n    // If this is first segment and we have next segment data, get latest possible arrival\n    let latestPossibleArrival = null;\n    if (nextSegmentFlights && nextSegmentFlights.length > 0) {\n      // Find earliest departure in next segment\n      const earliestNextDeparture = nextSegmentFlights\n        .map(f => dayjs(f.DepartsAt.replace('Z', '')))\n        .reduce((earliest, curr) => earliest.isBefore(curr) ? earliest : curr);\n      \n      latestPossibleArrival = earliestNextDeparture;\n      console.log(`  Latest possible arrival for connection: ${latestPossibleArrival.format('YYYY-MM-DD HH:mm')}`);\n    }\n\n    return {\n      route: `${from}-${to}`,\n      flights,\n      earliestArrival,\n      latestArrival\n    };\n  };\n\n  const processFlightData = (data, timeWindow) => {\n    const flights = {};\n    const baseDate = selectedDates.format('YYYY-MM-DD');\n    \n    const rawFlights = data.results?.[0]?.data?.data || [];\n    console.log(`  Processing ${rawFlights.length} raw flights`);\n    \n    rawFlights\n      .filter(trip => {\n        if (trip.Stops !== 0) {\n          console.log(`  Skipping flight with ${trip.Stops} stops`);\n          return false;\n        }\n        \n        if (timeWindow) {\n          const departureTime = dayjs(trip.DepartsAt.replace('Z', ''));  // Remove Z to treat as local time\n          const isValid = departureTime.isAfter(timeWindow.earliestDeparture) && \n                         departureTime.isBefore(timeWindow.latestDeparture);\n          \n          if (!isValid) {\n            console.log(`  Skipping flight outside time window: ${departureTime.format('YYYY-MM-DD HH:mm')}`);\n          }\n          return isValid;\n        }\n        \n        return true;\n      })\n      .forEach(trip => {\n        const flightNumber = trip.FlightNumbers;\n        const departureTime = dayjs(trip.DepartsAt.replace('Z', '')); // Remove Z to treat as local time\n        const existingFlight = flights[flightNumber];\n\n        // If this is a duplicate flight, only keep the later one\n        if (existingFlight) {\n          const existingDeparture = dayjs(existingFlight.DepartsAt.replace('Z', '')); // Remove Z to treat as local time\n          if (departureTime.isBefore(existingDeparture)) {\n            return; // Skip this one, keep the existing later flight\n          }\n        }\n\n        const arrivalTime = dayjs(trip.ArrivesAt.replace('Z', '')); // Remove Z to treat as local time\n        const baseDayjs = dayjs(baseDate);\n        \n        // Calculate day difference from base date\n        const departDayDiff = departureTime.diff(baseDayjs, 'day');\n        const arrivalDayDiff = arrivalTime.diff(baseDayjs, 'day');\n\n        flights[flightNumber] = {\n          from: trip.OriginAirport,\n          to: trip.DestinationAirport,\n          flightNumber: flightNumber,\n          airlines: getAirlineName(trip.Carriers),\n          aircraft: trip.Aircraft[0],\n          departs: departDayDiff > 0 ? \n            `${departureTime.format('HH:mm')} (+${departDayDiff})` : \n            departureTime.format('HH:mm'),\n          arrives: arrivalDayDiff > 0 ? \n            `${arrivalTime.format('HH:mm')} (+${arrivalDayDiff})` : \n            arrivalTime.format('HH:mm'),\n          DepartsAt: trip.DepartsAt.replace('Z', ''), // Store without Z\n          ArrivesAt: trip.ArrivesAt.replace('Z', ''), // Store without Z\n          economy: false,\n          business: false,\n          first: false\n        };\n        \n        switch(trip.Cabin.toLowerCase()) {\n          case 'economy':\n            flights[flightNumber].economy = true;\n            break;\n          case 'business':\n            flights[flightNumber].business = true;\n            break;\n          case 'first':\n            flights[flightNumber].first = true;\n            break;\n        }\n      });\n    \n    return Object.values(flights);\n  };\n\n  const getSegmentDistance = (from, to) => {\n    const route = routeDetails.find(r => \n      r.origin === from && \n      r.destination === to\n    );\n\n    if (!route) {\n      console.log(`Warning: No route found for ${from}-${to}, using default distance`);\n      return 1000;\n    }\n\n    console.log(`Distance for ${from}-${to}: ${route.distance.toLocaleString()} miles`);\n    return route.distance;\n  };\n\n  const segmentColumns = [\n    { \n      title: 'From', \n      dataIndex: 'from', \n      width: 80,\n      sorter: (a, b) => a.from.localeCompare(b.from)\n    },\n    { \n      title: 'To', \n      dataIndex: 'to', \n      width: 80,\n      sorter: (a, b) => a.to.localeCompare(b.to)\n    },\n    { \n      title: 'Flight', \n      dataIndex: 'flightNumber', \n      width: 100,\n      sorter: (a, b) => a.flightNumber.localeCompare(b.flightNumber)\n    },\n    { \n      title: 'Airlines', \n      dataIndex: 'airlines', \n      width: 150,\n      sorter: (a, b) => a.airlines.localeCompare(b.airlines)\n    },\n    { \n      title: 'Aircraft', \n      dataIndex: 'aircraft', \n      width: 180,\n      sorter: (a, b) => a.aircraft.localeCompare(b.aircraft)\n    },\n    { \n      title: 'Departs', \n      dataIndex: 'departs', \n      width: 100,\n      sorter: (a, b) => {\n        // Extract day difference\n        const aDayDiff = a.departs.includes('+') ? \n          parseInt(a.departs.match(/\\+(\\d+)/)[1]) : 0;\n        const bDayDiff = b.departs.includes('+') ? \n          parseInt(b.departs.match(/\\+(\\d+)/)[1]) : 0;\n        \n        // Extract time\n        const aTime = a.departs.split(' ')[0];\n        const bTime = b.departs.split(' ')[0];\n        \n        // Compare days first, then times\n        if (aDayDiff !== bDayDiff) {\n          return aDayDiff - bDayDiff;\n        }\n        return aTime.localeCompare(bTime);\n      },\n      defaultSortOrder: 'ascend'\n    },\n    { \n      title: 'Arrives', \n      dataIndex: 'arrives', \n      width: 100,\n      sorter: (a, b) => {\n        // Extract day difference\n        const aDayDiff = a.arrives.includes('+') ? \n          parseInt(a.arrives.match(/\\+(\\d+)/)[1]) : 0;\n        const bDayDiff = b.arrives.includes('+') ? \n          parseInt(b.arrives.match(/\\+(\\d+)/)[1]) : 0;\n        \n        // Extract time\n        const aTime = a.arrives.split(' ')[0];\n        const bTime = b.arrives.split(' ')[0];\n        \n        // Compare days first, then times\n        if (aDayDiff !== bDayDiff) {\n          return aDayDiff - bDayDiff;\n        }\n        return aTime.localeCompare(bTime);\n      }\n    },\n    { \n      title: 'Economy', \n      dataIndex: 'economy', \n      width: 60,\n      align: 'center',\n      sorter: (a, b) => (a.economy === b.economy ? 0 : a.economy ? -1 : 1),\n      render: hasClass => hasClass ? <CheckOutlined style={{ color: '#52c41a' }} /> : null\n    },\n    { \n      title: 'Business', \n      dataIndex: 'business', \n      width: 60,\n      align: 'center',\n      sorter: (a, b) => (a.business === b.business ? 0 : a.business ? -1 : 1),\n      render: hasClass => hasClass ? <CheckOutlined style={{ color: '#52c41a' }} /> : null\n    },\n    { \n      title: 'First', \n      dataIndex: 'first', \n      width: 60,\n      align: 'center',\n      sorter: (a, b) => (a.first === b.first ? 0 : a.first ? -1 : 1),\n      render: hasClass => hasClass ? <CheckOutlined style={{ color: '#52c41a' }} /> : null\n    }\n  ];\n\n  return (\n    <div className=\"flight-search-container\">\n      <Card \n        className=\"search-form\" \n        style={{ boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)' }}\n      >\n        <div className=\"flight-search-element\">\n          <div className=\"element-label\">Departure Airport: *</div>\n          <Select\n            {...airportSelectProps}\n            value={departure}\n            onChange={setDeparture}\n            placeholder=\"Select departure airport...\"\n            className=\"airport-select\"\n            status={errors.departure ? 'error' : ''}\n          />\n        </div>\n\n        <div className=\"flight-search-element\">\n          <div className=\"element-label\">Arrival Airport: *</div>\n          <Select\n            {...airportSelectProps}\n            value={arrival}\n            onChange={setArrival}\n            placeholder=\"Select arrival airport...\"\n            className=\"airport-select\"\n            status={errors.arrival ? 'error' : ''}\n          />\n        </div>\n\n        <div className=\"flight-search-element\">\n          <div className=\"element-label\">Airlines Excluded:</div>\n          <Select\n            {...airlineSelectProps}\n            mode=\"multiple\"\n            value={selectedAirlines}\n            onChange={setSelectedAirlines}\n            options={sortedAirlines}\n            placeholder=\"Select airlines...\"\n            className=\"airline-select\"\n          />\n        </div>\n\n        <div className=\"segments-element\">\n          <div className=\"element-label\">Maximum Segments *</div>\n          <InputNumber\n            min={1}\n            max={5}\n            value={maxSegments}\n            onChange={setMaxSegments}\n            status={errors.maxSegments ? 'error' : ''}\n          />\n        </div>\n\n        <Button \n          type=\"primary\"\n          icon={<SearchOutlined />}\n          onClick={handleSearch}\n          loading={isLoading}\n          className=\"search-button\"\n        >\n          Search\n        </Button>\n      </Card>\n\n      {searchResults && (\n        <Card \n          className=\"results-card\" \n          title={\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <span>Search Results</span>\n              <Input\n                placeholder=\"Search routes...\"\n                value={tableSearchText}\n                onChange={e => setTableSearchText(e.target.value)}\n                style={{ width: 200 }}\n                allowClear\n              />\n            </div>\n          }\n          style={{ boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)' }}\n        >\n          <Table\n            dataSource={getFilteredData()}\n            columns={columns}\n            rowKey={(record, index) => index}\n            pagination={{\n              ...pagination,\n              showSizeChanger: true,\n              showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} routes`,\n              pageSizeOptions: ['10', '25', '50', '100'],\n              defaultPageSize: 25,\n            }}\n            loading={isLoading}\n            onChange={handleTableChange}\n            scroll={{ x: 1600 }}\n            showSorterTooltip={true}\n            sortDirections={['ascend', 'descend']}\n          />\n        </Card>\n      )}\n\n      <Modal\n        title=\"Flight Details\"\n        open={isModalVisible}\n        onOk={handleDateSearch}\n        onCancel={() => {\n          setIsModalVisible(false);\n          setSelectedDates(null);\n          setApiKey('');\n          setSegmentDetails([]);\n        }}\n        okText=\"Search Flights\"\n        okButtonProps={{ \n          disabled: !selectedDates || !apiKey,\n          loading: isLoadingSegments \n        }}\n        width={1500}\n        styles={{\n          body: { \n            padding: '12px',\n            maxWidth: '100%'\n          }\n        }}\n      >\n        <div style={{ marginBottom: 16 }}>\n          <div style={{ marginBottom: 8 }}>Select Travel Date:</div>\n          <DatePicker\n            style={{ width: '100%' }}\n            onChange={(date) => setSelectedDates(date)}\n            disabledDate={(current) => current && current < dayjs().startOf('day')}\n          />\n        </div>\n        <div style={{ marginBottom: 16 }}>\n          <div style={{ marginBottom: 8 }}>API Key:</div>\n          <Input\n            placeholder=\"Enter API key\"\n            value={apiKey}\n            onChange={(e) => setApiKey(e.target.value)}\n            style={{ width: '100%' }}\n          />\n        </div>\n        {isLoadingSegments ? (\n          <div style={{ textAlign: 'center', padding: '20px' }}>\n            <Spin />\n          </div>\n        ) : (\n          <div style={{ \n            width: '100%',\n            overflowX: 'auto'\n          }}>\n            {currentRoute && currentRoute.slice(0, -1).map((from, index) => {\n              const to = currentRoute[index + 1];\n              const routeKey = `${from}-${to}`;\n              const flights = segmentDetails.filter(flight => \n                flight.from === from && flight.to === to\n              );\n\n              return (\n                <div key={routeKey} style={{ \n                  marginBottom: '24px',\n                  width: '100%'\n                }}>\n                  <h3 style={{ marginBottom: '16px' }}>{routeKey}</h3>\n                  <Table\n                    dataSource={flights}\n                    columns={segmentColumns}\n                    size=\"small\"\n                    rowKey={(record, index) => `${routeKey}-${index}`}\n                    sortDirections={['ascend', 'descend']}\n                    style={{ \n                      width: '100%',\n                      tableLayout: 'fixed'\n                    }}\n                    pagination={{\n                      defaultPageSize: 10,\n                      showSizeChanger: true,\n                      showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n                      pageSizeOptions: ['10', '20', '50', 'all'],\n                      position: ['bottomRight']\n                    }}\n                    locale={{\n                      emptyText: 'No flights available'\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </Modal>\n\n      <style jsx>{`\n        .flight-search-container {\n          max-width: 1200px;\n          margin: 20px auto;\n          padding: 0 20px;\n        }\n        .search-form {\n          margin-bottom: 20px;\n        }\n        .flight-search-element {\n          margin-bottom: 16px;\n        }\n        .element-label {\n          margin-bottom: 8px;\n          font-weight: 500;\n        }\n        .element-label::after {\n          content: \" *\";\n          color: #ff4d4f;\n          display: none;\n        }\n        .element-label:has(+ [data-required=\"true\"])::after {\n          display: inline;\n        }\n        .airport-select,\n        .airline-select {\n          width: 100%;\n        }\n        .segments-element {\n          margin-bottom: 16px;\n        }\n        .search-button {\n          margin-top: 24px;\n          width: 100%;\n        }\n        .results-card {\n          margin-top: 24px;\n        }\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default FlightSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}