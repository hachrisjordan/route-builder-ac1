{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac1/src/components/FlightSearch/FlightDetailsModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst FlightDetailsModal = ({\n  isVisible,\n  currentRoute,\n  onClose\n}) => {\n  _s();\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    selectedFlights,\n    availabilityData,\n    isLoadingAvailability\n  } = useFlightDetails(getSegmentColumns);\n\n  // Group segments by route\n  const groupedSegments = useMemo(() => {\n    if (!segmentDetails.length) return [];\n    const groups = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const from = currentRoute[i];\n      const to = currentRoute[i + 1];\n      const route = `${from}-${to}`;\n      const segmentsForRoute = segmentDetails.filter(segment => segment.originAirport === from && segment.destinationAirport === to);\n      if (segmentsForRoute.length > 0) {\n        groups.push({\n          route,\n          segments: segmentsForRoute\n        });\n      }\n    }\n    return groups;\n  }, [segmentDetails, currentRoute]);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isVisible) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isVisible]);\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n  const handleCancel = () => {\n    onClose();\n  };\n  const handleCalendarDateSelect = dateRange => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n  const handleCalendarSearchClick = () => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    handleDateSearch(currentRoute);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Flight Details\",\n    open: isVisible,\n    onOk: () => handleDateSearch(currentRoute),\n    onCancel: handleCancel,\n    width: 1200,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          marginBottom: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter API Key\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            disabled: !apiKey,\n            onClick: () => handleCalendarSearch(currentRoute),\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), dateRangeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Please select a date range in the calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightAvailabilityCalendar, {\n      flightData: availabilityData,\n      currentRoute: currentRoute,\n      onDateRangeSelect: handleCalendarDateSelect,\n      selectedRange: selectedDates,\n      onSearch: handleCalendarSearchClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), isLoadingSegments ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : groupedSegments.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: 16,\n          fontFamily: 'Menlo',\n          fontSize: '14px',\n          fontWeight: 'bold'\n        },\n        children: group.route\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: group.segments,\n        pagination: false,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, group.route, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetailsModal, \"wpR0IHgc06YrFvjMG9lRs0I+ax8=\", false, function () {\n  return [useFlightDetails];\n});\n_c = FlightDetailsModal;\nexport default FlightDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"FlightDetailsModal\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Modal","DatePicker","Input","Spin","Table","Button","dayjs","getSegmentColumns","useFlightDetails","FlightAvailabilityCalendar","jsxDEV","_jsxDEV","RangePicker","FlightDetailsModal","isVisible","currentRoute","onClose","_s","dateRangeError","setDateRangeError","selectedDates","setSelectedDates","apiKey","setApiKey","segmentDetails","isLoadingSegments","handleDateSearch","handleCalendarSearch","resetDetails","columns","selectedFlights","availabilityData","isLoadingAvailability","groupedSegments","length","groups","i","from","to","route","segmentsForRoute","filter","segment","originAirport","destinationAirport","push","segments","handleOk","handleCancel","handleCalendarDateSelect","dateRange","handleCalendarSearchClick","title","open","onOk","onCancel","width","children","style","marginBottom","display","gap","flex","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","color","flightData","onDateRangeSelect","selectedRange","onSearch","textAlign","margin","map","group","index","marginTop","fontFamily","fontSize","fontWeight","dataSource","pagination","size","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac1/src/components/FlightSearch/FlightDetailsModal.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nconst { RangePicker } = DatePicker;\n\nconst FlightDetailsModal = ({ isVisible, currentRoute, onClose }) => {\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    selectedFlights,\n    availabilityData,\n    isLoadingAvailability,\n  } = useFlightDetails(getSegmentColumns);\n\n  // Group segments by route\n  const groupedSegments = useMemo(() => {\n    if (!segmentDetails.length) return [];\n\n    const groups = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const from = currentRoute[i];\n      const to = currentRoute[i + 1];\n      const route = `${from}-${to}`;\n      \n      const segmentsForRoute = segmentDetails.filter(segment => \n        segment.originAirport === from && segment.destinationAirport === to\n      );\n\n      if (segmentsForRoute.length > 0) {\n        groups.push({\n          route,\n          segments: segmentsForRoute\n        });\n      }\n    }\n    return groups;\n  }, [segmentDetails, currentRoute]);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isVisible) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isVisible]);\n\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleCalendarDateSelect = (dateRange) => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n\n  const handleCalendarSearchClick = () => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    handleDateSearch(currentRoute);\n  };\n\n  return (\n    <Modal\n      title=\"Flight Details\"\n      open={isVisible}\n      onOk={() => handleDateSearch(currentRoute)}\n      onCancel={handleCancel}\n      width={1200}\n    >\n      <div style={{ marginBottom: 16 }}>\n        <div style={{ display: 'flex', gap: '8px', marginBottom: 16 }}>\n          <div style={{ display: 'flex', gap: '8px', flex: 1 }}>\n            <Input\n              placeholder=\"Enter API Key\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              style={{ flex: 1 }}\n            />\n            <Button\n              type=\"primary\"\n              disabled={!apiKey}\n              onClick={() => handleCalendarSearch(currentRoute)}\n            >\n              Apply\n            </Button>\n          </div>\n        </div>\n        {dateRangeError && (\n          <div style={{ color: 'red' }}>\n            Please select a date range in the calendar\n          </div>\n        )}\n      </div>\n\n      <FlightAvailabilityCalendar \n        flightData={availabilityData}\n        currentRoute={currentRoute}\n        onDateRangeSelect={handleCalendarDateSelect}\n        selectedRange={selectedDates}\n        onSearch={handleCalendarSearchClick}\n      />\n\n      {isLoadingSegments ? (\n        <div style={{ textAlign: 'center', margin: '20px 0' }}>\n          <Spin />\n        </div>\n      ) : (\n        groupedSegments.map((group, index) => (\n          <div key={group.route} style={{ marginTop: 20 }}>\n            <h3 style={{ \n              marginBottom: 16, \n              fontFamily: 'Menlo',\n              fontSize: '14px',\n              fontWeight: 'bold' \n            }}>\n              {group.route}\n            </h3>\n            <Table\n              columns={columns}\n              dataSource={group.segments}\n              pagination={false}\n              size=\"small\"\n            />\n          </div>\n        ))\n      )}\n\n      <style jsx>{`\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `}</style>\n    </Modal>\n  );\n};\n\nexport default FlightDetailsModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}