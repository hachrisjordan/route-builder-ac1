{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst FlightDetailsModal = ({\n  isVisible,\n  currentRoute,\n  onClose\n}) => {\n  _s();\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    selectedFlights,\n    availabilityData,\n    isLoadingAvailability\n  } = useFlightDetails(getSegmentColumns);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isVisible) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isVisible]);\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n  const handleCancel = () => {\n    onClose();\n  };\n  const handleCalendarDateSelect = dateRange => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  // Function to group flights by segment with safety checks\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    // Group flights by segment and filter out hidden flights\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc; // Skip hidden flights\n\n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n    return Object.values(segments);\n  };\n\n  // Add pagination settings\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n  const calculatePrices = isStopover => {\n    const basePrice = 1000; // Example base price\n    const stopoverFee = isStopover ? 5000 : 0;\n    return {\n      economyPrice: `$${basePrice + stopoverFee}`,\n      businessPrice: `$${(basePrice + stopoverFee) * 2.5} (250%)`,\n      firstPrice: `$${(basePrice + stopoverFee) * 4} (400%)`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Flight Details\",\n    open: isVisible,\n    onCancel: handleCancel,\n    footer: null,\n    width: 1600,\n    styles: {\n      body: {\n        padding: '12px',\n        maxHeight: '90vh',\n        overflow: 'auto'\n      },\n      content: {\n        maxWidth: '100vw'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          marginBottom: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your yapping password (Under Development)\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            disabled: !apiKey || !apiKey.toLowerCase().startsWith('pro'),\n            onClick: () => handleCalendarSearch(currentRoute),\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), dateRangeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Please select a date range in the calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightAvailabilityCalendar, {\n      flightData: availabilityData,\n      currentRoute: currentRoute,\n      onDateRangeSelect: handleCalendarDateSelect,\n      selectedRange: selectedDates,\n      onSearch: handleCalendarSearchClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), isLoadingSegments ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this) : (segmentDetails === null || segmentDetails === void 0 ? void 0 : segmentDetails.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        style: {\n          marginBottom: 16\n        },\n        children: \"Flights By Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), getSegmentTables().map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n            level: 5,\n            style: {\n              margin: 0\n            },\n            children: [\"Segment \", segment.index + 1, \" (\", segment.route, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              size: \"small\",\n              total: segment.flights.length,\n              pageSize: paginationConfig.pageSize,\n              showSizeChanger: true,\n              showTotal: (total, range) => `${range[0]}-${range[1]} of ${total}`,\n              style: {\n                display: 'inline-block',\n                marginBottom: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: segment.flights,\n          pagination: false // Remove pagination from table\n          ,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this), index < getSegmentTables().length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '0px',\n            margin: '16px',\n            textAlign: 'center',\n            fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n            strong: true,\n            children: (() => {\n              const currentSegmentFlights = selectedFlights[segment.index];\n              const nextSegmentFlights = selectedFlights[segment.index + 1];\n              if (!(currentSegmentFlights !== null && currentSegmentFlights !== void 0 && currentSegmentFlights[0]) || !(nextSegmentFlights !== null && nextSegmentFlights !== void 0 && nextSegmentFlights[0])) {\n                return 'Select flights to see connection time';\n              }\n              const currentFlight = currentSegmentFlights[0];\n              const nextFlight = nextSegmentFlights[0];\n              const arrivalTime = dayjs(currentFlight.ArrivesAt);\n              const departureTime = dayjs(nextFlight.DepartsAt);\n              const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n\n              // If layover is more than 24 hours, show as stopover\n              if (layoverMinutes >= 24 * 60) {\n                const days = Math.floor(layoverMinutes / (24 * 60));\n                const remainingHours = Math.floor(layoverMinutes % (24 * 60) / 60);\n                const remainingMinutes = layoverMinutes % 60;\n                return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n              } else {\n                // Regular layover display\n                const hours = Math.floor(layoverMinutes / 60);\n                const minutes = layoverMinutes % 60;\n                return `Layover duration: ${hours}h ${minutes}m`;\n              }\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }, this)]\n      }, segment.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }, this), Object.keys(selectedFlights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: \"Journey Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: [{\n          title: 'From',\n          dataIndex: 'from',\n          key: 'from'\n        }, {\n          title: 'To',\n          dataIndex: 'to',\n          key: 'to'\n        }, {\n          title: 'Airlines',\n          dataIndex: 'airlines',\n          key: 'airlines',\n          render: airlinesList => {\n            // More thorough safety checks\n            if (!airlinesList || airlinesList === '-') return '-';\n            try {\n              const airlineArray = Array.isArray(airlinesList) ? airlinesList : airlinesList.split(', ');\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '4px'\n                },\n                children: airlineArray.map((airlineName, index) => {\n                  if (!airlineName) return null;\n                  const airline = airlines.find(a => {\n                    var _a$label;\n                    return airlineName.startsWith((_a$label = a.label) === null || _a$label === void 0 ? void 0 : _a$label.replace(` (${a.value})`, ''));\n                  });\n                  const airlineCode = airline === null || airline === void 0 ? void 0 : airline.value;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '8px'\n                    },\n                    children: [airlineCode && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `${process.env.PUBLIC_URL}/${airlineCode}.png`,\n                      alt: airlineCode,\n                      style: {\n                        width: '24px',\n                        height: '24px',\n                        objectFit: 'contain',\n                        borderRadius: '4px'\n                      },\n                      onError: e => {\n                        e.target.style.display = 'none';\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 33\n                    }, this), airlineName]\n                  }, `${airlineCode}-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this);\n            } catch (error) {\n              console.error('Error rendering airlines:', error);\n              return '-';\n            }\n          }\n        }, {\n          title: 'Duration',\n          dataIndex: 'duration',\n          key: 'duration'\n        }, {\n          title: 'Departs',\n          dataIndex: 'departs',\n          key: 'departs'\n        }, {\n          title: 'Arrives',\n          dataIndex: 'arrives',\n          key: 'arrives'\n        }, {\n          title: 'Economy Price',\n          dataIndex: 'economyPrice',\n          key: 'economyPrice',\n          onCell: (_, index) => ({\n            rowSpan: index === 0 ? 2 : 0 // Show only in first row\n          })\n        }, {\n          title: 'Business Price (Max %)',\n          dataIndex: 'businessPrice',\n          key: 'businessPrice',\n          onCell: (_, index) => ({\n            rowSpan: index === 0 ? 2 : 0 // Show only in first row\n          }),\n          render: text => {\n            if (!text || text === 'N/A') return text;\n            try {\n              const [price, percentage] = text.split(' (');\n              if (!percentage) return text;\n              return `${price} (${percentage}`;\n            } catch (error) {\n              return text;\n            }\n          }\n        }, {\n          title: 'First Price (Max %)',\n          dataIndex: 'firstPrice',\n          key: 'firstPrice',\n          onCell: (_, index) => ({\n            rowSpan: index === 0 ? 2 : 0 // Show only in first row\n          }),\n          render: text => {\n            if (!text || text === 'N/A') return text;\n            try {\n              const [price, percentage] = text.split(' (');\n              if (!percentage) return text;\n              return `${price} (${percentage}`;\n            } catch (error) {\n              return text;\n            }\n          }\n        }],\n        dataSource: (() => {\n          try {\n            var _selectedFlights$firs7, _selectedFlights$firs8, _selectedFlights$stop, _selectedFlights$stop2, _selectedFlights$firs11, _selectedFlights$firs12, _selectedFlights$stop5, _selectedFlights$stop6, _selectedFlights2, _selectedFlights2$, _selectedFlights$last7, _selectedFlights$last8, _selectedFlights4, _selectedFlights4$, _selectedFlights$last11, _selectedFlights$last12;\n            const segments = Object.keys(selectedFlights).map(Number).sort((a, b) => a - b);\n            if (segments.length === 0) return [];\n            const firstSegmentIndex = Math.min(...segments);\n            const lastSegmentIndex = Math.max(...segments);\n\n            // Helper function to get airlines string\n            const getAirlinesString = segmentRange => {\n              try {\n                const airlineSet = new Set(segmentRange.flatMap(i => {\n                  var _selectedFlights$i;\n                  return (_selectedFlights$i = selectedFlights[i]) === null || _selectedFlights$i === void 0 ? void 0 : _selectedFlights$i.map(f => f.airlines);\n                }).filter(Boolean));\n                return Array.from(airlineSet).join(', ') || '-';\n              } catch (error) {\n                console.error('Error getting airlines string:', error);\n                return '-';\n              }\n            };\n\n            // Debug logging\n            console.log('Selected Flights:', selectedFlights);\n            console.log('Segments:', segments);\n\n            // Find stopover point by checking layover duration\n            let stopoverIndex = null;\n            for (let i = firstSegmentIndex; i < lastSegmentIndex; i++) {\n              var _selectedFlights$i2, _selectedFlights;\n              const currentFlight = (_selectedFlights$i2 = selectedFlights[i]) === null || _selectedFlights$i2 === void 0 ? void 0 : _selectedFlights$i2[0];\n              const nextFlight = (_selectedFlights = selectedFlights[i + 1]) === null || _selectedFlights === void 0 ? void 0 : _selectedFlights[0];\n              if (currentFlight && nextFlight) {\n                const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                const departureTime = dayjs(nextFlight.DepartsAt);\n                const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                console.log(`Checking layover between segments ${i} and ${i + 1}:`);\n                console.log('Arrival:', arrivalTime.format('YYYY-MM-DD HH:mm'));\n                console.log('Departure:', departureTime.format('YYYY-MM-DD HH:mm'));\n                console.log('Layover minutes:', layoverMinutes);\n\n                // If layover is more than 24 hours, this is a stopover point\n                if (layoverMinutes >= 24 * 60) {\n                  console.log(`Found stopover at segment ${i}`);\n                  stopoverIndex = i;\n                  break;\n                }\n              }\n            }\n            console.log('Stopover Index:', stopoverIndex);\n\n            // If no stopover found, return single row\n            if (stopoverIndex === null) {\n              var _selectedFlights$firs, _selectedFlights$firs2, _selectedFlights$last, _selectedFlights$last2, _selectedFlights$firs5, _selectedFlights$firs6, _selectedFlights$last5, _selectedFlights$last6;\n              console.log('No stopover found, returning single row');\n              const prices = calculatePrices(false);\n              return [{\n                key: '1',\n                from: ((_selectedFlights$firs = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs === void 0 ? void 0 : (_selectedFlights$firs2 = _selectedFlights$firs[0]) === null || _selectedFlights$firs2 === void 0 ? void 0 : _selectedFlights$firs2.from) || '-',\n                to: ((_selectedFlights$last = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last === void 0 ? void 0 : (_selectedFlights$last2 = _selectedFlights$last[0]) === null || _selectedFlights$last2 === void 0 ? void 0 : _selectedFlights$last2.to) || '-',\n                airlines: getAirlinesString(segments),\n                duration: ((_selectedFlights$firs3, _selectedFlights$firs4, _selectedFlights$last3, _selectedFlights$last4) => {\n                  const firstDeparture = dayjs((_selectedFlights$firs3 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs3 === void 0 ? void 0 : (_selectedFlights$firs4 = _selectedFlights$firs3[0]) === null || _selectedFlights$firs4 === void 0 ? void 0 : _selectedFlights$firs4.DepartsAt);\n                  const finalArrival = dayjs((_selectedFlights$last3 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last3 === void 0 ? void 0 : (_selectedFlights$last4 = _selectedFlights$last3[0]) === null || _selectedFlights$last4 === void 0 ? void 0 : _selectedFlights$last4.ArrivesAt);\n                  const minutes = finalArrival.diff(firstDeparture, 'minute');\n                  const hours = Math.floor(minutes / 60);\n                  const remainingMinutes = minutes % 60;\n                  return `${hours}h ${remainingMinutes}m`;\n                })(),\n                departs: dayjs((_selectedFlights$firs5 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs5 === void 0 ? void 0 : (_selectedFlights$firs6 = _selectedFlights$firs5[0]) === null || _selectedFlights$firs6 === void 0 ? void 0 : _selectedFlights$firs6.DepartsAt).format('HH:mm MM-DD'),\n                arrives: dayjs((_selectedFlights$last5 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last5 === void 0 ? void 0 : (_selectedFlights$last6 = _selectedFlights$last5[0]) === null || _selectedFlights$last6 === void 0 ? void 0 : _selectedFlights$last6.ArrivesAt).format('HH:mm MM-DD'),\n                ...prices\n              }];\n            }\n            console.log('Creating split journey rows');\n            // Split journey at stopover\n            const prices = calculatePrices(true);\n            return [{\n              key: '1',\n              from: ((_selectedFlights$firs7 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs7 === void 0 ? void 0 : (_selectedFlights$firs8 = _selectedFlights$firs7[0]) === null || _selectedFlights$firs8 === void 0 ? void 0 : _selectedFlights$firs8.from) || '-',\n              to: ((_selectedFlights$stop = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop === void 0 ? void 0 : (_selectedFlights$stop2 = _selectedFlights$stop[0]) === null || _selectedFlights$stop2 === void 0 ? void 0 : _selectedFlights$stop2.to) || '-',\n              airlines: getAirlinesString(segments.filter(i => i <= stopoverIndex)),\n              duration: ((_selectedFlights$firs9, _selectedFlights$firs10, _selectedFlights$stop3, _selectedFlights$stop4) => {\n                const firstDeparture = dayjs((_selectedFlights$firs9 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs9 === void 0 ? void 0 : (_selectedFlights$firs10 = _selectedFlights$firs9[0]) === null || _selectedFlights$firs10 === void 0 ? void 0 : _selectedFlights$firs10.DepartsAt);\n                const stopoverArrival = dayjs((_selectedFlights$stop3 = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop3 === void 0 ? void 0 : (_selectedFlights$stop4 = _selectedFlights$stop3[0]) === null || _selectedFlights$stop4 === void 0 ? void 0 : _selectedFlights$stop4.ArrivesAt);\n                const minutes = stopoverArrival.diff(firstDeparture, 'minute');\n                const hours = Math.floor(minutes / 60);\n                const remainingMinutes = minutes % 60;\n                return `${hours}h ${remainingMinutes}m`;\n              })(),\n              departs: dayjs((_selectedFlights$firs11 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs11 === void 0 ? void 0 : (_selectedFlights$firs12 = _selectedFlights$firs11[0]) === null || _selectedFlights$firs12 === void 0 ? void 0 : _selectedFlights$firs12.DepartsAt).format('HH:mm MM-DD'),\n              arrives: dayjs((_selectedFlights$stop5 = selectedFlights[stopoverIndex]) === null || _selectedFlights$stop5 === void 0 ? void 0 : (_selectedFlights$stop6 = _selectedFlights$stop5[0]) === null || _selectedFlights$stop6 === void 0 ? void 0 : _selectedFlights$stop6.ArrivesAt).format('HH:mm MM-DD'),\n              ...prices\n            }, {\n              key: '2',\n              from: ((_selectedFlights2 = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights2 === void 0 ? void 0 : (_selectedFlights2$ = _selectedFlights2[0]) === null || _selectedFlights2$ === void 0 ? void 0 : _selectedFlights2$.from) || '-',\n              to: ((_selectedFlights$last7 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last7 === void 0 ? void 0 : (_selectedFlights$last8 = _selectedFlights$last7[0]) === null || _selectedFlights$last8 === void 0 ? void 0 : _selectedFlights$last8.to) || '-',\n              airlines: getAirlinesString(segments.filter(i => i > stopoverIndex)),\n              duration: ((_selectedFlights3, _selectedFlights3$, _selectedFlights$last9, _selectedFlights$last10) => {\n                const stopoverDeparture = dayjs((_selectedFlights3 = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights3 === void 0 ? void 0 : (_selectedFlights3$ = _selectedFlights3[0]) === null || _selectedFlights3$ === void 0 ? void 0 : _selectedFlights3$.DepartsAt);\n                const finalArrival = dayjs((_selectedFlights$last9 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last9 === void 0 ? void 0 : (_selectedFlights$last10 = _selectedFlights$last9[0]) === null || _selectedFlights$last10 === void 0 ? void 0 : _selectedFlights$last10.ArrivesAt);\n                const minutes = finalArrival.diff(stopoverDeparture, 'minute');\n                const hours = Math.floor(minutes / 60);\n                const remainingMinutes = minutes % 60;\n                return `${hours}h ${remainingMinutes}m`;\n              })(),\n              departs: dayjs((_selectedFlights4 = selectedFlights[stopoverIndex + 1]) === null || _selectedFlights4 === void 0 ? void 0 : (_selectedFlights4$ = _selectedFlights4[0]) === null || _selectedFlights4$ === void 0 ? void 0 : _selectedFlights4$.DepartsAt).format('HH:mm MM-DD'),\n              arrives: dayjs((_selectedFlights$last11 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last11 === void 0 ? void 0 : (_selectedFlights$last12 = _selectedFlights$last11[0]) === null || _selectedFlights$last12 === void 0 ? void 0 : _selectedFlights$last12.ArrivesAt).format('HH:mm MM-DD'),\n              ...prices // These will be hidden by rowSpan\n            }];\n          } catch (error) {\n            console.error('Error generating dataSource:', error);\n            return [];\n          }\n        })(),\n        pagination: false,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n          children: (() => {\n            const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n            const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n            const originAirport = airports.find(a => {\n              var _selectedFlights$firs13, _selectedFlights$firs14;\n              return a.IATA === ((_selectedFlights$firs13 = selectedFlights[firstSegmentIndex]) === null || _selectedFlights$firs13 === void 0 ? void 0 : (_selectedFlights$firs14 = _selectedFlights$firs13[0]) === null || _selectedFlights$firs14 === void 0 ? void 0 : _selectedFlights$firs14.from);\n            });\n            const destAirport = airports.find(a => {\n              var _selectedFlights$last13, _selectedFlights$last14;\n              return a.IATA === ((_selectedFlights$last13 = selectedFlights[lastSegmentIndex]) === null || _selectedFlights$last13 === void 0 ? void 0 : (_selectedFlights$last14 = _selectedFlights$last13[0]) === null || _selectedFlights$last14 === void 0 ? void 0 : _selectedFlights$last14.to);\n            });\n            if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n            // Haversine formula\n            const R = 3959; // Earth's radius in miles\n            const lat1 = originAirport.Latitude * Math.PI / 180;\n            const lat2 = destAirport.Latitude * Math.PI / 180;\n            const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n            const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n            const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            const directDistance = Math.round(R * c);\n\n            // Calculate total segment distance\n            let totalSegmentDistance = 0;\n            Object.values(selectedFlights).forEach(flights => {\n              flights.forEach(flight => {\n                totalSegmentDistance += parseInt(flight.distance || 0);\n              });\n            });\n            const isValid = totalSegmentDistance <= 2 * directDistance;\n            const percentage = Math.round(totalSegmentDistance / directDistance * 100);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8,\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  color: isValid ? '#52c41a' : '#f5222d',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '8px',\n                  width: '100%'\n                },\n                children: isValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"ROUTING VALIDATED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2717\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"THIS ROUTING IS INVALID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetailsModal, \"jtObapP9L2kEIaLNZxXPSlgOMxk=\", false, function () {\n  return [useFlightDetails];\n});\n_c = FlightDetailsModal;\nexport default FlightDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"FlightDetailsModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","DatePicker","Input","Spin","Table","Button","Typography","Pagination","dayjs","getSegmentColumns","useFlightDetails","FlightAvailabilityCalendar","airlines","airports","pricingData","jsxDEV","_jsxDEV","Fragment","_Fragment","RangePicker","FlightDetailsModal","isVisible","currentRoute","onClose","_s","dateRangeError","setDateRangeError","selectedDates","setSelectedDates","apiKey","setApiKey","segmentDetails","isLoadingSegments","handleDateSearch","handleCalendarSearch","resetDetails","columns","selectedFlights","availabilityData","isLoadingAvailability","handleOk","handleCancel","handleCalendarDateSelect","dateRange","handleCalendarSearchClick","startDate","endDate","stopoverInfo","console","log","JSON","stringify","getSegmentTables","length","segments","reduce","acc","flight","hidden","segmentIndex","index","route","from","to","flights","push","Object","values","paginationConfig","pageSize","showSizeChanger","showTotal","total","range","pageSizeOptions","position","calculatePrices","isStopover","basePrice","stopoverFee","economyPrice","businessPrice","firstPrice","title","open","onCancel","footer","width","styles","body","padding","maxHeight","overflow","content","maxWidth","children","style","marginBottom","display","gap","flex","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","toLowerCase","startsWith","onClick","color","flightData","onDateRangeSelect","selectedRange","onSearch","textAlign","margin","marginTop","Title","level","map","segment","justifyContent","alignItems","size","dataSource","pagination","fontFamily","Text","strong","currentSegmentFlights","nextSegmentFlights","currentFlight","nextFlight","arrivalTime","ArrivesAt","departureTime","DepartsAt","layoverMinutes","diff","days","Math","floor","remainingHours","remainingMinutes","hours","minutes","keys","dataIndex","key","render","airlinesList","airlineArray","Array","isArray","split","flexDirection","airlineName","airline","find","a","_a$label","label","replace","airlineCode","src","process","env","PUBLIC_URL","alt","height","objectFit","borderRadius","onError","error","onCell","_","rowSpan","text","price","percentage","_selectedFlights$firs7","_selectedFlights$firs8","_selectedFlights$stop","_selectedFlights$stop2","_selectedFlights$firs11","_selectedFlights$firs12","_selectedFlights$stop5","_selectedFlights$stop6","_selectedFlights2","_selectedFlights2$","_selectedFlights$last7","_selectedFlights$last8","_selectedFlights4","_selectedFlights4$","_selectedFlights$last11","_selectedFlights$last12","Number","sort","b","firstSegmentIndex","min","lastSegmentIndex","max","getAirlinesString","segmentRange","airlineSet","Set","flatMap","i","_selectedFlights$i","f","filter","Boolean","join","stopoverIndex","_selectedFlights$i2","_selectedFlights","format","_selectedFlights$firs","_selectedFlights$firs2","_selectedFlights$last","_selectedFlights$last2","_selectedFlights$firs5","_selectedFlights$firs6","_selectedFlights$last5","_selectedFlights$last6","prices","duration","_selectedFlights$firs3","_selectedFlights$firs4","_selectedFlights$last3","_selectedFlights$last4","firstDeparture","finalArrival","departs","arrives","_selectedFlights$firs9","_selectedFlights$firs10","_selectedFlights$stop3","_selectedFlights$stop4","stopoverArrival","_selectedFlights3","_selectedFlights3$","_selectedFlights$last9","_selectedFlights$last10","stopoverDeparture","originAirport","_selectedFlights$firs13","_selectedFlights$firs14","IATA","destAirport","_selectedFlights$last13","_selectedFlights$last14","R","lat1","Latitude","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","directDistance","round","totalSegmentDistance","forEach","parseInt","distance","isValid","fontSize","fontWeight","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightDetailsModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, DatePicker, Input, Spin, Table, Button, Typography, Pagination } from 'antd';\nimport dayjs from 'dayjs';\nimport { getSegmentColumns } from './segmentColumns';\nimport useFlightDetails from './hooks/useFlightDetails';\nimport FlightAvailabilityCalendar from './FlightAvailabilityCalendar';\nimport airlines from './data/airlines';\nimport { airports } from './data/airports';\nimport pricingData from './data/pricing.json';\nconst { RangePicker } = DatePicker;\n\nconst FlightDetailsModal = ({ isVisible, currentRoute, onClose }) => {\n  const [dateRangeError, setDateRangeError] = useState(false);\n  const {\n    selectedDates,\n    setSelectedDates,\n    apiKey,\n    setApiKey,\n    segmentDetails,\n    isLoadingSegments,\n    handleDateSearch,\n    handleCalendarSearch,\n    resetDetails,\n    columns,\n    selectedFlights,\n    availabilityData,\n    isLoadingAvailability,\n  } = useFlightDetails(getSegmentColumns);\n\n  // Clear data when modal closes\n  useEffect(() => {\n    if (!isVisible) {\n      resetDetails();\n      setDateRangeError(false);\n      setSelectedDates(null);\n      setApiKey('');\n    }\n  }, [isVisible]);\n\n  const handleOk = () => {\n    handleDateSearch(currentRoute);\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleCalendarDateSelect = (dateRange) => {\n    setSelectedDates(dateRange);\n    setDateRangeError(false);\n  };\n\n  const handleCalendarSearchClick = (startDate, endDate, stopoverInfo) => {\n    if (!selectedDates) {\n      setDateRangeError(true);\n      return;\n    }\n    console.log('Modal passing stopover info:', JSON.stringify(stopoverInfo, null, 2));\n    handleDateSearch(currentRoute, stopoverInfo);\n  };\n\n  // Function to group flights by segment with safety checks\n  const getSegmentTables = () => {\n    if (!segmentDetails || segmentDetails.length === 0) return [];\n\n    // Group flights by segment and filter out hidden flights\n    const segments = segmentDetails.reduce((acc, flight) => {\n      if (flight.hidden) return acc; // Skip hidden flights\n      \n      if (!acc[flight.segmentIndex]) {\n        acc[flight.segmentIndex] = {\n          index: flight.segmentIndex,\n          route: `${flight.from}-${flight.to}`,\n          flights: []\n        };\n      }\n      acc[flight.segmentIndex].flights.push(flight);\n      return acc;\n    }, {});\n\n    return Object.values(segments);\n  };\n\n  // Add pagination settings\n  const paginationConfig = {\n    pageSize: 5,\n    showSizeChanger: true,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n    pageSizeOptions: ['5', '10', '20', '50'],\n    position: ['bottomLeft']\n  };\n\n  const calculatePrices = (isStopover) => {\n    const basePrice = 1000; // Example base price\n    const stopoverFee = isStopover ? 5000 : 0;\n    return {\n      economyPrice: `$${basePrice + stopoverFee}`,\n      businessPrice: `$${(basePrice + stopoverFee) * 2.5} (250%)`,\n      firstPrice: `$${(basePrice + stopoverFee) * 4} (400%)`\n    };\n  };\n\n  return (\n    <Modal\n      title=\"Flight Details\"\n      open={isVisible}\n      onCancel={handleCancel}\n      footer={null}\n      width={1600}\n      styles={{\n        body: { \n          padding: '12px',\n          maxHeight: '90vh',\n          overflow: 'auto'\n        },\n        content: {\n          maxWidth: '100vw'\n        }\n      }}\n    >\n      <div style={{ marginBottom: 16 }}>\n        <div style={{ display: 'flex', gap: '8px', marginBottom: 16 }}>\n          <div style={{ display: 'flex', gap: '8px', flex: 1 }}>\n            <Input\n              placeholder=\"Enter your yapping password (Under Development)\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              style={{ flex: 1 }}\n            />\n            <Button\n              type=\"primary\"\n              disabled={!apiKey || !apiKey.toLowerCase().startsWith('pro')}\n              onClick={() => handleCalendarSearch(currentRoute)}\n            >\n              Apply\n            </Button>\n          </div>\n        </div>\n        {dateRangeError && (\n          <div style={{ color: 'red' }}>\n            Please select a date range in the calendar\n          </div>\n        )}\n      </div>\n\n      <FlightAvailabilityCalendar \n        flightData={availabilityData}\n        currentRoute={currentRoute}\n        onDateRangeSelect={handleCalendarDateSelect}\n        selectedRange={selectedDates}\n        onSearch={handleCalendarSearchClick}\n      />\n\n      {isLoadingSegments ? (\n        <div style={{ textAlign: 'center', margin: '20px 0' }}>\n          <Spin />\n        </div>\n      ) : (\n        segmentDetails?.length > 0 && (\n          <div style={{ marginTop: 0 }}>\n            <Typography.Title level={4} style={{ marginBottom: 16 }}>\n              Flights By Segment\n            </Typography.Title>\n            {getSegmentTables().map((segment, index) => (\n              <div key={segment.index} style={{ marginBottom: 16 }}>\n                <div style={{ \n                  display: 'flex', \n                  justifyContent: 'space-between', \n                  alignItems: 'center',\n                  marginBottom: 12 \n                }}>\n                  <Typography.Title level={5} style={{ margin: 0 }}>\n                    Segment {segment.index+1} ({segment.route}):\n                  </Typography.Title>\n                  <div>\n                    {/* Pagination controls */}\n                    <Pagination\n                      size=\"small\"\n                      total={segment.flights.length}\n                      pageSize={paginationConfig.pageSize}\n                      showSizeChanger={true}\n                      showTotal={(total, range) => `${range[0]}-${range[1]} of ${total}`}\n                      style={{ \n                        display: 'inline-block',\n                        marginBottom: 0\n                      }}\n                    />\n                  </div>\n                </div>\n                <Table\n                  columns={columns}\n                  dataSource={segment.flights}\n                  pagination={false} // Remove pagination from table\n                  size=\"small\"\n                />\n                \n                {/* Add layover duration if there's a next segment and flights are selected */}\n                {index < getSegmentTables().length - 1 && (\n                  <div style={{ \n                    padding: '0px',\n                    margin: '16px',\n                    textAlign: 'center',\n                    fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace'\n                  }}>\n                    <Typography.Text strong>\n                      {(() => {\n                        const currentSegmentFlights = selectedFlights[segment.index];\n                        const nextSegmentFlights = selectedFlights[segment.index + 1];\n                        \n                        if (!currentSegmentFlights?.[0] || !nextSegmentFlights?.[0]) {\n                          return 'Select flights to see connection time';\n                        }\n\n                        const currentFlight = currentSegmentFlights[0];\n                        const nextFlight = nextSegmentFlights[0];\n                        \n                        const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                        const departureTime = dayjs(nextFlight.DepartsAt);\n                        const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                        \n                        // If layover is more than 24 hours, show as stopover\n                        if (layoverMinutes >= 24 * 60) {\n                          const days = Math.floor(layoverMinutes / (24 * 60));\n                          const remainingHours = Math.floor((layoverMinutes % (24 * 60)) / 60);\n                          const remainingMinutes = layoverMinutes % 60;\n                          \n                          return `Stopover duration: ${days} day${days > 1 ? 's' : ''} ${remainingHours}h ${remainingMinutes}m`;\n                        } else {\n                          // Regular layover display\n                          const hours = Math.floor(layoverMinutes / 60);\n                          const minutes = layoverMinutes % 60;\n                          return `Layover duration: ${hours}h ${minutes}m`;\n                        }\n                      })()}\n                    </Typography.Text>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )\n      )}\n\n      {/* Add Summary Table */}\n      {Object.keys(selectedFlights).length > 0 && (\n        <div style={{ marginTop: 24 }}>\n          <Typography.Title level={4}>Journey Summary</Typography.Title>\n          <Table\n            columns={[\n              {\n                title: 'From',\n                dataIndex: 'from',\n                key: 'from',\n              },\n              {\n                title: 'To',\n                dataIndex: 'to',\n                key: 'to',\n              },\n              {\n                title: 'Airlines',\n                dataIndex: 'airlines',\n                key: 'airlines',\n                render: (airlinesList) => {\n                  // More thorough safety checks\n                  if (!airlinesList || airlinesList === '-') return '-';\n                  \n                  try {\n                    const airlineArray = Array.isArray(airlinesList) ? airlinesList : airlinesList.split(', ');\n                    \n                    return (\n                      <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n                        {airlineArray.map((airlineName, index) => {\n                          if (!airlineName) return null;\n                          \n                          const airline = airlines.find(a => \n                            airlineName.startsWith(a.label?.replace(` (${a.value})`, ''))\n                          );\n                          const airlineCode = airline?.value;\n                          \n                          return (\n                            <div key={`${airlineCode}-${index}`} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                              {airlineCode && (\n                                <img \n                                  src={`${process.env.PUBLIC_URL}/${airlineCode}.png`}\n                                  alt={airlineCode}\n                                  style={{ \n                                    width: '24px', \n                                    height: '24px',\n                                    objectFit: 'contain',\n                                    borderRadius: '4px'\n                                  }} \n                                  onError={(e) => {\n                                    e.target.style.display = 'none';\n                                  }}\n                                />\n                              )}\n                              {airlineName}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    );\n                  } catch (error) {\n                    console.error('Error rendering airlines:', error);\n                    return '-';\n                  }\n                },\n              },\n              {\n                title: 'Duration',\n                dataIndex: 'duration',\n                key: 'duration',\n              },\n              {\n                title: 'Departs',\n                dataIndex: 'departs',\n                key: 'departs',\n              },\n              {\n                title: 'Arrives',\n                dataIndex: 'arrives',\n                key: 'arrives',\n              },\n              {\n                title: 'Economy Price',\n                dataIndex: 'economyPrice',\n                key: 'economyPrice',\n                onCell: (_, index) => ({\n                  rowSpan: index === 0 ? 2 : 0, // Show only in first row\n                }),\n              },\n              {\n                title: 'Business Price (Max %)',\n                dataIndex: 'businessPrice',\n                key: 'businessPrice',\n                onCell: (_, index) => ({\n                  rowSpan: index === 0 ? 2 : 0, // Show only in first row\n                }),\n                render: (text) => {\n                  if (!text || text === 'N/A') return text;\n                  try {\n                    const [price, percentage] = text.split(' (');\n                    if (!percentage) return text;\n                    return `${price} (${percentage}`;\n                  } catch (error) {\n                    return text;\n                  }\n                }\n              },\n              {\n                title: 'First Price (Max %)',\n                dataIndex: 'firstPrice',\n                key: 'firstPrice',\n                onCell: (_, index) => ({\n                  rowSpan: index === 0 ? 2 : 0, // Show only in first row\n                }),\n                render: (text) => {\n                  if (!text || text === 'N/A') return text;\n                  try {\n                    const [price, percentage] = text.split(' (');\n                    if (!percentage) return text;\n                    return `${price} (${percentage}`;\n                  } catch (error) {\n                    return text;\n                  }\n                }\n              },\n            ]}\n            dataSource={(() => {\n              try {\n                const segments = Object.keys(selectedFlights).map(Number).sort((a, b) => a - b);\n                if (segments.length === 0) return [];\n                \n                const firstSegmentIndex = Math.min(...segments);\n                const lastSegmentIndex = Math.max(...segments);\n                \n                // Helper function to get airlines string\n                const getAirlinesString = (segmentRange) => {\n                  try {\n                    const airlineSet = new Set(\n                      segmentRange\n                        .flatMap(i => selectedFlights[i]?.map(f => f.airlines))\n                        .filter(Boolean)\n                    );\n                    return Array.from(airlineSet).join(', ') || '-';\n                  } catch (error) {\n                    console.error('Error getting airlines string:', error);\n                    return '-';\n                  }\n                };\n\n                // Debug logging\n                console.log('Selected Flights:', selectedFlights);\n                console.log('Segments:', segments);\n                \n                // Find stopover point by checking layover duration\n                let stopoverIndex = null;\n                for (let i = firstSegmentIndex; i < lastSegmentIndex; i++) {\n                  const currentFlight = selectedFlights[i]?.[0];\n                  const nextFlight = selectedFlights[i + 1]?.[0];\n                  \n                  if (currentFlight && nextFlight) {\n                    const arrivalTime = dayjs(currentFlight.ArrivesAt);\n                    const departureTime = dayjs(nextFlight.DepartsAt);\n                    const layoverMinutes = departureTime.diff(arrivalTime, 'minute');\n                    \n                    console.log(`Checking layover between segments ${i} and ${i+1}:`);\n                    console.log('Arrival:', arrivalTime.format('YYYY-MM-DD HH:mm'));\n                    console.log('Departure:', departureTime.format('YYYY-MM-DD HH:mm'));\n                    console.log('Layover minutes:', layoverMinutes);\n                    \n                    // If layover is more than 24 hours, this is a stopover point\n                    if (layoverMinutes >= 24 * 60) {\n                      console.log(`Found stopover at segment ${i}`);\n                      stopoverIndex = i;\n                      break;\n                    }\n                  }\n                }\n\n                console.log('Stopover Index:', stopoverIndex);\n\n                // If no stopover found, return single row\n                if (stopoverIndex === null) {\n                  console.log('No stopover found, returning single row');\n                  const prices = calculatePrices(false);\n                  return [{\n                    key: '1',\n                    from: selectedFlights[firstSegmentIndex]?.[0]?.from || '-',\n                    to: selectedFlights[lastSegmentIndex]?.[0]?.to || '-',\n                    airlines: getAirlinesString(segments),\n                    duration: (() => {\n                      const firstDeparture = dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt);\n                      const finalArrival = dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt);\n                      const minutes = finalArrival.diff(firstDeparture, 'minute');\n                      const hours = Math.floor(minutes / 60);\n                      const remainingMinutes = minutes % 60;\n                      return `${hours}h ${remainingMinutes}m`;\n                    })(),\n                    departs: dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n                    arrives: dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n                    ...prices\n                  }];\n                }\n\n                console.log('Creating split journey rows');\n                // Split journey at stopover\n                const prices = calculatePrices(true);\n                return [\n                  {\n                    key: '1',\n                    from: selectedFlights[firstSegmentIndex]?.[0]?.from || '-',\n                    to: selectedFlights[stopoverIndex]?.[0]?.to || '-',\n                    airlines: getAirlinesString(segments.filter(i => i <= stopoverIndex)),\n                    duration: (() => {\n                      const firstDeparture = dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt);\n                      const stopoverArrival = dayjs(selectedFlights[stopoverIndex]?.[0]?.ArrivesAt);\n                      const minutes = stopoverArrival.diff(firstDeparture, 'minute');\n                      const hours = Math.floor(minutes / 60);\n                      const remainingMinutes = minutes % 60;\n                      return `${hours}h ${remainingMinutes}m`;\n                    })(),\n                    departs: dayjs(selectedFlights[firstSegmentIndex]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n                    arrives: dayjs(selectedFlights[stopoverIndex]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n                    ...prices\n                  },\n                  {\n                    key: '2',\n                    from: selectedFlights[stopoverIndex + 1]?.[0]?.from || '-',\n                    to: selectedFlights[lastSegmentIndex]?.[0]?.to || '-',\n                    airlines: getAirlinesString(segments.filter(i => i > stopoverIndex)),\n                    duration: (() => {\n                      const stopoverDeparture = dayjs(selectedFlights[stopoverIndex + 1]?.[0]?.DepartsAt);\n                      const finalArrival = dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt);\n                      const minutes = finalArrival.diff(stopoverDeparture, 'minute');\n                      const hours = Math.floor(minutes / 60);\n                      const remainingMinutes = minutes % 60;\n                      return `${hours}h ${remainingMinutes}m`;\n                    })(),\n                    departs: dayjs(selectedFlights[stopoverIndex + 1]?.[0]?.DepartsAt).format('HH:mm MM-DD'),\n                    arrives: dayjs(selectedFlights[lastSegmentIndex]?.[0]?.ArrivesAt).format('HH:mm MM-DD'),\n                    ...prices // These will be hidden by rowSpan\n                  }\n                ];\n              } catch (error) {\n                console.error('Error generating dataSource:', error);\n                return [];\n              }\n            })()}\n            pagination={false}\n            size=\"small\"\n          />\n          \n          {/* Add Route Validation */}\n          <div style={{ marginTop: 12, fontFamily: 'source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace' }}>\n            <Typography.Text>\n              {(() => {\n                const firstSegmentIndex = Math.min(...Object.keys(selectedFlights).map(Number));\n                const lastSegmentIndex = Math.max(...Object.keys(selectedFlights).map(Number));\n                const originAirport = airports.find(a => a.IATA === selectedFlights[firstSegmentIndex]?.[0]?.from);\n                const destAirport = airports.find(a => a.IATA === selectedFlights[lastSegmentIndex]?.[0]?.to);\n\n                if (!originAirport || !destAirport) return 'Unable to validate route: airport data missing';\n\n                // Haversine formula\n                const R = 3959; // Earth's radius in miles\n                const lat1 = originAirport.Latitude * Math.PI / 180;\n                const lat2 = destAirport.Latitude * Math.PI / 180;\n                const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n                const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n                const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n                          Math.cos(lat1) * Math.cos(lat2) *\n                          Math.sin(dLon/2) * Math.sin(dLon/2);\n                \n                const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n                const directDistance = Math.round(R * c);\n\n                // Calculate total segment distance\n                let totalSegmentDistance = 0;\n                Object.values(selectedFlights).forEach(flights => {\n                  flights.forEach(flight => {\n                    totalSegmentDistance += parseInt(flight.distance || 0);\n                  });\n                });\n\n                const isValid = totalSegmentDistance <= (2 * directDistance);\n                const percentage = Math.round(totalSegmentDistance/directDistance * 100);\n\n                return (\n                  <>\n                    <div style={{ \n                      marginTop: 8,\n                      fontSize: '16px',\n                      fontWeight: 'bold',\n                      color: isValid ? '#52c41a' : '#f5222d',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      gap: '8px',\n                      width: '100%'\n                    }}>\n                      {isValid ? (\n                        <>\n                          <span>✓</span>\n                          <span>ROUTING VALIDATED</span>\n                        </>\n                      ) : (\n                        <>\n                          <span>✗</span>\n                          <span>THIS ROUTING IS INVALID</span>\n                        </>\n                      )}\n                    </div>\n                  </>\n                );\n              })()}\n            </Typography.Text>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `}</style>\n    </Modal>\n  );\n};\n\nexport default FlightDetailsModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}