{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightAvailabilityCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Typography, Badge, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { airports } from './data/airports';\nimport FlightDetailsModal from './FlightDetailsModal';\nimport Calendar from './Calendar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst FlightAvailabilityCalendar = ({\n  flightData,\n  currentRoute,\n  onDateRangeSelect,\n  selectedRange,\n  onSearch,\n  selectedFlights,\n  pricingData\n}) => {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  const [showCalendar, setShowCalendar] = useState(true);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [calendarData, setCalendarData] = useState(flightData || {});\n\n  // Get days in month\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n\n  // Get first day of month (0 = Sunday, 1 = Monday, etc.)\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n\n  // Helper to format date as \"YYYY-MM-DD\"\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n\n  // Previous and next month handlers\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  // Function to render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    // Helper function to get background color based on class code\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y':\n          return '#E8E1F2';\n        case 'J':\n          return '#F3CD87';\n        case 'F':\n          return '#D88A3F';\n        default:\n          return 'transparent';\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2px'\n      },\n      children: Object.entries(classes).map(([classCode, available]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: getBackgroundColor(classCode, available),\n          color: available ? '#684634' : '#999',\n          padding: '0px 4px',\n          borderRadius: '4px',\n          fontSize: '13px',\n          fontFamily: 'Menlo',\n          width: '20px',\n          textAlign: 'center'\n        },\n        children: available ? classCode : '-'\n      }, classCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to check if a segment is valid for the current route\n  const isValidSegment = segment => {\n    const [from, to] = segment.route.split('-');\n\n    // Check if this segment exists as consecutive airports in currentRoute\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return {\n          isValid: true,\n          index: i\n        };\n      }\n    }\n    return {\n      isValid: false,\n      index: -1\n    };\n  };\n\n  // Function to get all required segments for a date\n  const getRequiredSegments = existingSegments => {\n    // Create a map of existing segments for easy lookup\n    const segmentMap = new Map(existingSegments.map(segment => [segment.route, segment]));\n\n    // Generate all required segments\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: {\n          Y: false,\n          J: false,\n          F: false\n        },\n        // Default to all unavailable\n        index: i\n      };\n      allSegments.push(segment);\n    }\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n\n  // Function to sort segments by their position in the route\n  const sortSegments = segments => {\n    const validSegments = segments.map(segment => ({\n      ...segment,\n      ...isValidSegment(segment)\n    })).filter(segment => segment.isValid);\n    return getRequiredSegments(validSegments);\n  };\n\n  // Add function to check if any segment has availability\n  const hasAnyAvailability = segments => {\n    return segments.some(segment => segment.classes.Y || segment.classes.J || segment.classes.F);\n  };\n\n  // Preserve calendar data when flightData changes\n  useEffect(() => {\n    if (flightData && Object.keys(flightData).length > 0) {\n      setCalendarData(flightData);\n    }\n  }, [flightData]);\n\n  // Handle modal close\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Handle search button click without clearing calendar data\n  const handleSearch = () => {\n    const stopoverInfo = selectedConnection && stopoverDays ? {\n      airport: selectedConnection,\n      days: parseInt(stopoverDays)\n    } : null;\n    if (selectionStart && selectionEnd) {\n      // Call onSearch without clearing calendar data\n      onSearch(selectionStart, selectionEnd, stopoverInfo);\n    }\n  };\n\n  // Handle date selection in calendar\n  const handleDateSelect = date => {\n    if (!selectionStart) {\n      setSelectionStart(date);\n      setSelectionEnd(null);\n    } else if (!selectionEnd && date.isAfter(selectionStart)) {\n      setSelectionEnd(date);\n      onDateRangeSelect([selectionStart, date]);\n    } else {\n      setSelectionStart(date);\n      setSelectionEnd(null);\n    }\n  };\n\n  // Get unique connection points from currentRoute with full airport names\n  const connectionOptions = currentRoute.slice(1, -1).map(iata => {\n    const airport = airports.find(a => a.IATA === iata);\n    return {\n      label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\n      value: iata\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        data: calendarData,\n        onDateSelect: handleDateSelect,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Stopover at\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: 400\n          },\n          value: selectedConnection,\n          onChange: value => {\n            setSelectedConnection(value);\n            if (!value) {\n              setStopoverDays(null);\n            }\n          },\n          options: connectionOptions,\n          allowClear: true,\n          placeholder: \"Select city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), selectedConnection && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"for\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n            style: {\n              width: 60\n            },\n            min: 1,\n            max: 14,\n            value: stopoverDays,\n            onChange: value => setStopoverDays(value),\n            placeholder: \"Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 'auto',\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleSearch,\n          disabled: !selectionStart || !selectionEnd || selectedConnection && !stopoverDays,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowCalendar(false),\n          children: \"Hide Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightDetailsModal, {\n      isModalOpen: isModalOpen,\n      onClose: handleModalClose,\n      selectedFlights: selectedFlights,\n      pricingData: pricingData,\n      currentRoute: currentRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightAvailabilityCalendar, \"EOeIdxN7XjO3MR+b+AaluPscaYA=\");\n_c = FlightAvailabilityCalendar;\nexport default FlightAvailabilityCalendar;\nvar _c;\n$RefreshReg$(_c, \"FlightAvailabilityCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Typography","Badge","Select","InputNumber","dayjs","airports","FlightDetailsModal","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","FlightAvailabilityCalendar","flightData","currentRoute","onDateRangeSelect","selectedRange","onSearch","selectedFlights","pricingData","_s","currentMonth","setCurrentMonth","month","currentYear","setCurrentYear","year","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","error","setError","showCalendar","setShowCalendar","selectedConnection","setSelectedConnection","stopoverDays","setStopoverDays","isModalOpen","setIsModalOpen","calendarData","setCalendarData","getDaysInMonth","daysInMonth","getFirstDayOfMonth","day","formatDate","format","firstDayOfMonth","goToPrevMonth","goToNextMonth","monthNames","dayNames","renderAvailabilityBadges","route","classes","getBackgroundColor","classCode","available","style","display","gap","children","Object","entries","map","backgroundColor","color","padding","borderRadius","fontSize","fontFamily","width","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","isValidSegment","segment","from","to","split","i","length","isValid","index","getRequiredSegments","existingSegments","segmentMap","Map","allSegments","get","Y","J","F","push","sort","a","b","sortSegments","segments","validSegments","filter","hasAnyAvailability","some","keys","handleModalClose","handleSearch","stopoverInfo","airport","days","parseInt","handleDateSelect","date","isAfter","connectionOptions","slice","iata","find","IATA","label","Name","value","className","data","onDateSelect","marginTop","justifyContent","alignItems","flexWrap","onChange","options","allowClear","placeholder","min","max","marginLeft","type","onClick","disabled","onClose","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightAvailabilityCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Typography, Badge, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { airports } from './data/airports';\nimport FlightDetailsModal from './FlightDetailsModal';\nimport Calendar from './Calendar';\n\nconst { Title } = Typography;\n\nconst FlightAvailabilityCalendar = ({ flightData, currentRoute, onDateRangeSelect, selectedRange, onSearch, selectedFlights, pricingData }) => {\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [selectionEnd, setSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  const [showCalendar, setShowCalendar] = useState(true);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [calendarData, setCalendarData] = useState(flightData || {});\n\n  // Get days in month\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n\n  // Get first day of month (0 = Sunday, 1 = Monday, etc.)\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n\n  // Helper to format date as \"YYYY-MM-DD\"\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n\n  // Previous and next month handlers\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  // Function to render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    // Helper function to get background color based on class code\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y': return '#E8E1F2';\n        case 'J': return '#F3CD87';\n        case 'F': return '#D88A3F';\n        default: return 'transparent';\n      }\n    };\n\n    return (\n      <div style={{ display: 'flex', gap: '2px' }}>\n        {Object.entries(classes).map(([classCode, available]) => (\n          <div\n            key={classCode}\n            style={{\n              backgroundColor: getBackgroundColor(classCode, available),\n              color: available ? '#684634' : '#999',\n              padding: '0px 4px',\n              borderRadius: '4px',\n              fontSize: '13px',\n              fontFamily: 'Menlo',\n              width: '20px',\n              textAlign: 'center'\n            }}\n          >\n            {available ? classCode : '-'}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // Function to check if a segment is valid for the current route\n  const isValidSegment = (segment) => {\n    const [from, to] = segment.route.split('-');\n    \n    // Check if this segment exists as consecutive airports in currentRoute\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return { isValid: true, index: i };\n      }\n    }\n    return { isValid: false, index: -1 };\n  };\n\n  // Function to get all required segments for a date\n  const getRequiredSegments = (existingSegments) => {\n    // Create a map of existing segments for easy lookup\n    const segmentMap = new Map(\n      existingSegments.map(segment => [segment.route, segment])\n    );\n\n    // Generate all required segments\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: { Y: false, J: false, F: false }, // Default to all unavailable\n        index: i\n      };\n      allSegments.push(segment);\n    }\n\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n\n  // Function to sort segments by their position in the route\n  const sortSegments = (segments) => {\n    const validSegments = segments\n      .map(segment => ({\n        ...segment,\n        ...isValidSegment(segment)\n      }))\n      .filter(segment => segment.isValid);\n\n    return getRequiredSegments(validSegments);\n  };\n\n  // Add function to check if any segment has availability\n  const hasAnyAvailability = (segments) => {\n    return segments.some(segment => \n      segment.classes.Y || segment.classes.J || segment.classes.F\n    );\n  };\n\n  // Preserve calendar data when flightData changes\n  useEffect(() => {\n    if (flightData && Object.keys(flightData).length > 0) {\n      setCalendarData(flightData);\n    }\n  }, [flightData]);\n\n  // Handle modal close\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Handle search button click without clearing calendar data\n  const handleSearch = () => {\n    const stopoverInfo = selectedConnection && stopoverDays ? {\n      airport: selectedConnection,\n      days: parseInt(stopoverDays)\n    } : null;\n\n    if (selectionStart && selectionEnd) {\n      // Call onSearch without clearing calendar data\n      onSearch(selectionStart, selectionEnd, stopoverInfo);\n    }\n  };\n\n  // Handle date selection in calendar\n  const handleDateSelect = (date) => {\n    if (!selectionStart) {\n      setSelectionStart(date);\n      setSelectionEnd(null);\n    } else if (!selectionEnd && date.isAfter(selectionStart)) {\n      setSelectionEnd(date);\n      onDateRangeSelect([selectionStart, date]);\n    } else {\n      setSelectionStart(date);\n      setSelectionEnd(null);\n    }\n  };\n\n  // Get unique connection points from currentRoute with full airport names\n  const connectionOptions = currentRoute\n    .slice(1, -1)\n    .map(iata => {\n      const airport = airports.find(a => a.IATA === iata);\n      return {\n        label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\n        value: iata\n      };\n    });\n\n  return (\n    <div>\n      {showCalendar && (\n        <div className=\"calendar-container\">\n          <Calendar \n            data={calendarData} \n            onDateSelect={handleDateSelect}\n            selectionStart={selectionStart}\n            selectionEnd={selectionEnd}\n          />\n        </div>\n      )}\n      \n      <div style={{ \n        marginTop: '16px',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        gap: '8px'\n      }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n          <span>Stopover at</span>\n          <Select\n            style={{ width: 400 }}\n            value={selectedConnection}\n            onChange={(value) => {\n              setSelectedConnection(value);\n              if (!value) {\n                setStopoverDays(null);\n              }\n            }}\n            options={connectionOptions}\n            allowClear\n            placeholder=\"Select city\"\n          />\n          {selectedConnection && (\n            <>\n              <span>for</span>\n              <InputNumber\n                style={{ width: 60 }}\n                min={1}\n                max={14}\n                value={stopoverDays}\n                onChange={(value) => setStopoverDays(value)}\n                placeholder=\"Days\"\n              />\n              <span>days</span>\n            </>\n          )}\n        </div>\n        <div style={{ marginLeft: 'auto', display: 'flex', gap: '8px' }}>\n          <Button\n            type=\"primary\"\n            onClick={handleSearch}\n            disabled={!selectionStart || !selectionEnd || (selectedConnection && !stopoverDays)}\n          >\n            Search\n          </Button>\n          <Button onClick={() => setShowCalendar(false)}>\n            Hide Calendar\n          </Button>\n        </div>\n      </div>\n\n      <FlightDetailsModal\n        isModalOpen={isModalOpen}\n        onClose={handleModalClose}\n        selectedFlights={selectedFlights}\n        pricingData={pricingData}\n        currentRoute={currentRoute}\n      />\n    </div>\n  );\n};\n\nexport default FlightAvailabilityCalendar; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,MAAM;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAM;EAAEC;AAAM,CAAC,GAAGZ,UAAU;AAE5B,MAAMa,0BAA0B,GAAGA,CAAC;EAAEC,UAAU;EAAEC,YAAY;EAAEC,iBAAiB;EAAEC,aAAa;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC7I,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAACQ,KAAK,CAAC,CAAC,CAACoB,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAACQ,KAAK,CAAC,CAAC,CAACuB,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8C,YAAY,EAAEC,eAAe,CAAC,GAAG/C,QAAQ,CAACkB,UAAU,IAAI,CAAC,CAAC,CAAC;;EAElE;EACA,MAAM8B,cAAc,GAAGA,CAACjB,IAAI,EAAEH,KAAK,KAAK;IACtC,OAAOpB,KAAK,CAAC,GAAGuB,IAAI,IAAIH,KAAK,GAAG,CAAC,EAAE,CAAC,CAACqB,WAAW,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAACnB,IAAI,EAAEH,KAAK,KAAK;IAC1C,OAAOpB,KAAK,CAAC,GAAGuB,IAAI,IAAIH,KAAK,GAAG,CAAC,KAAK,CAAC,CAACuB,GAAG,CAAC,CAAC;EAC/C,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAACrB,IAAI,EAAEH,KAAK,EAAEuB,GAAG,KAAK;IACvC,OAAO3C,KAAK,CAAC,GAAGuB,IAAI,IAAIH,KAAK,GAAG,CAAC,IAAIuB,GAAG,EAAE,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC;EAClE,CAAC;EAED,MAAMJ,WAAW,GAAGD,cAAc,CAACnB,WAAW,EAAEH,YAAY,CAAC;EAC7D,MAAM4B,eAAe,GAAGJ,kBAAkB,CAACrB,WAAW,EAAEH,YAAY,CAAC;;EAErE;EACA,MAAM6B,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI7B,YAAY,KAAK,CAAC,EAAE;MACtBC,eAAe,CAAC,EAAE,CAAC;MACnBG,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC,CAAC,MAAM;MACLF,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAM8B,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI9B,YAAY,KAAK,EAAE,EAAE;MACvBC,eAAe,CAAC,CAAC,CAAC;MAClBG,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC,CAAC,MAAM;MACLF,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAM+B,UAAU,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACxE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EACnE,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;;EAElE;EACA,MAAMC,wBAAwB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IACnD;IACA,MAAMC,kBAAkB,GAAGA,CAACC,SAAS,EAAEC,SAAS,KAAK;MACnD,IAAI,CAACA,SAAS,EAAE,OAAO,aAAa;MACpC,QAAQD,SAAS;QACf,KAAK,GAAG;UAAE,OAAO,SAAS;QAC1B,KAAK,GAAG;UAAE,OAAO,SAAS;QAC1B,KAAK,GAAG;UAAE,OAAO,SAAS;QAC1B;UAAS,OAAO,aAAa;MAC/B;IACF,CAAC;IAED,oBACElD,OAAA;MAAKoD,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAM,CAAE;MAAAC,QAAA,EACzCC,MAAM,CAACC,OAAO,CAACT,OAAO,CAAC,CAACU,GAAG,CAAC,CAAC,CAACR,SAAS,EAAEC,SAAS,CAAC,kBAClDnD,OAAA;QAEEoD,KAAK,EAAE;UACLO,eAAe,EAAEV,kBAAkB,CAACC,SAAS,EAAEC,SAAS,CAAC;UACzDS,KAAK,EAAET,SAAS,GAAG,SAAS,GAAG,MAAM;UACrCU,OAAO,EAAE,SAAS;UAClBC,YAAY,EAAE,KAAK;UACnBC,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,OAAO;UACnBC,KAAK,EAAE,MAAM;UACbC,SAAS,EAAE;QACb,CAAE;QAAAX,QAAA,EAEDJ,SAAS,GAAGD,SAAS,GAAG;MAAG,GAZvBA,SAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAM,CAACC,IAAI,EAAEC,EAAE,CAAC,GAAGF,OAAO,CAACzB,KAAK,CAAC4B,KAAK,CAAC,GAAG,CAAC;;IAE3C;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtE,YAAY,CAACuE,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;MAChD,IAAItE,YAAY,CAACsE,CAAC,CAAC,KAAKH,IAAI,IAAInE,YAAY,CAACsE,CAAC,GAAG,CAAC,CAAC,KAAKF,EAAE,EAAE;QAC1D,OAAO;UAAEI,OAAO,EAAE,IAAI;UAAEC,KAAK,EAAEH;QAAE,CAAC;MACpC;IACF;IACA,OAAO;MAAEE,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE,CAAC;IAAE,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIC,gBAAgB,IAAK;IAChD;IACA,MAAMC,UAAU,GAAG,IAAIC,GAAG,CACxBF,gBAAgB,CAACvB,GAAG,CAACc,OAAO,IAAI,CAACA,OAAO,CAACzB,KAAK,EAAEyB,OAAO,CAAC,CAC1D,CAAC;;IAED;IACA,MAAMY,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtE,YAAY,CAACuE,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;MAChD,MAAM7B,KAAK,GAAG,GAAGzC,YAAY,CAACsE,CAAC,CAAC,IAAItE,YAAY,CAACsE,CAAC,GAAG,CAAC,CAAC,EAAE;MACzD,MAAMJ,OAAO,GAAGU,UAAU,CAACG,GAAG,CAACtC,KAAK,CAAC,IAAI;QACvCA,KAAK;QACLC,OAAO,EAAE;UAAEsC,CAAC,EAAE,KAAK;UAAEC,CAAC,EAAE,KAAK;UAAEC,CAAC,EAAE;QAAM,CAAC;QAAE;QAC3CT,KAAK,EAAEH;MACT,CAAC;MACDQ,WAAW,CAACK,IAAI,CAACjB,OAAO,CAAC;IAC3B;IAEA,OAAOY,WAAW,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACZ,KAAK,GAAGa,CAAC,CAACb,KAAK,CAAC;EACtD,CAAC;;EAED;EACA,MAAMc,YAAY,GAAIC,QAAQ,IAAK;IACjC,MAAMC,aAAa,GAAGD,QAAQ,CAC3BpC,GAAG,CAACc,OAAO,KAAK;MACf,GAAGA,OAAO;MACV,GAAGD,cAAc,CAACC,OAAO;IAC3B,CAAC,CAAC,CAAC,CACFwB,MAAM,CAACxB,OAAO,IAAIA,OAAO,CAACM,OAAO,CAAC;IAErC,OAAOE,mBAAmB,CAACe,aAAa,CAAC;EAC3C,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAIH,QAAQ,IAAK;IACvC,OAAOA,QAAQ,CAACI,IAAI,CAAC1B,OAAO,IAC1BA,OAAO,CAACxB,OAAO,CAACsC,CAAC,IAAId,OAAO,CAACxB,OAAO,CAACuC,CAAC,IAAIf,OAAO,CAACxB,OAAO,CAACwC,CAC5D,CAAC;EACH,CAAC;;EAED;EACApG,SAAS,CAAC,MAAM;IACd,IAAIiB,UAAU,IAAImD,MAAM,CAAC2C,IAAI,CAAC9F,UAAU,CAAC,CAACwE,MAAM,GAAG,CAAC,EAAE;MACpD3C,eAAe,CAAC7B,UAAU,CAAC;IAC7B;EACF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAM+F,gBAAgB,GAAGA,CAAA,KAAM;IAC7BpE,cAAc,CAAC,KAAK,CAAC;IACrBJ,qBAAqB,CAAC,IAAI,CAAC;IAC3BE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAMuE,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAG3E,kBAAkB,IAAIE,YAAY,GAAG;MACxD0E,OAAO,EAAE5E,kBAAkB;MAC3B6E,IAAI,EAAEC,QAAQ,CAAC5E,YAAY;IAC7B,CAAC,GAAG,IAAI;IAER,IAAIV,cAAc,IAAIE,YAAY,EAAE;MAClC;MACAZ,QAAQ,CAACU,cAAc,EAAEE,YAAY,EAAEiF,YAAY,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAI,CAACxF,cAAc,EAAE;MACnBC,iBAAiB,CAACuF,IAAI,CAAC;MACvBrF,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM,IAAI,CAACD,YAAY,IAAIsF,IAAI,CAACC,OAAO,CAACzF,cAAc,CAAC,EAAE;MACxDG,eAAe,CAACqF,IAAI,CAAC;MACrBpG,iBAAiB,CAAC,CAACY,cAAc,EAAEwF,IAAI,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLvF,iBAAiB,CAACuF,IAAI,CAAC;MACvBrF,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMuF,iBAAiB,GAAGvG,YAAY,CACnCwG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACZpD,GAAG,CAACqD,IAAI,IAAI;IACX,MAAMR,OAAO,GAAG3G,QAAQ,CAACoH,IAAI,CAACrB,CAAC,IAAIA,CAAC,CAACsB,IAAI,KAAKF,IAAI,CAAC;IACnD,OAAO;MACLG,KAAK,EAAEX,OAAO,GAAG,GAAGA,OAAO,CAACU,IAAI,MAAMV,OAAO,CAACY,IAAI,EAAE,GAAGJ,IAAI;MAC3DK,KAAK,EAAEL;IACT,CAAC;EACH,CAAC,CAAC;EAEJ,oBACE/G,OAAA;IAAAuD,QAAA,GACG9B,YAAY,iBACXzB,OAAA;MAAKqH,SAAS,EAAC,oBAAoB;MAAA9D,QAAA,eACjCvD,OAAA,CAACF,QAAQ;QACPwH,IAAI,EAAErF,YAAa;QACnBsF,YAAY,EAAEb,gBAAiB;QAC/BvF,cAAc,EAAEA,cAAe;QAC/BE,YAAY,EAAEA;MAAa;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAEDtE,OAAA;MAAKoD,KAAK,EAAE;QACVoE,SAAS,EAAE,MAAM;QACjBnE,OAAO,EAAE,MAAM;QACfoE,cAAc,EAAE,YAAY;QAC5BC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE,MAAM;QAChBrE,GAAG,EAAE;MACP,CAAE;MAAAC,QAAA,gBACAvD,OAAA;QAAKoD,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEqE,UAAU,EAAE,QAAQ;UAAEpE,GAAG,EAAE;QAAM,CAAE;QAAAC,QAAA,gBAChEvD,OAAA;UAAAuD,QAAA,EAAM;QAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxBtE,OAAA,CAACP,MAAM;UACL2D,KAAK,EAAE;YAAEa,KAAK,EAAE;UAAI,CAAE;UACtBmD,KAAK,EAAEzF,kBAAmB;UAC1BiG,QAAQ,EAAGR,KAAK,IAAK;YACnBxF,qBAAqB,CAACwF,KAAK,CAAC;YAC5B,IAAI,CAACA,KAAK,EAAE;cACVtF,eAAe,CAAC,IAAI,CAAC;YACvB;UACF,CAAE;UACF+F,OAAO,EAAEhB,iBAAkB;UAC3BiB,UAAU;UACVC,WAAW,EAAC;QAAa;UAAA5D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,EACD3C,kBAAkB,iBACjB3B,OAAA,CAAAE,SAAA;UAAAqD,QAAA,gBACEvD,OAAA;YAAAuD,QAAA,EAAM;UAAG;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChBtE,OAAA,CAACN,WAAW;YACV0D,KAAK,EAAE;cAAEa,KAAK,EAAE;YAAG,CAAE;YACrB+D,GAAG,EAAE,CAAE;YACPC,GAAG,EAAE,EAAG;YACRb,KAAK,EAAEvF,YAAa;YACpB+F,QAAQ,EAAGR,KAAK,IAAKtF,eAAe,CAACsF,KAAK,CAAE;YAC5CW,WAAW,EAAC;UAAM;YAAA5D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACFtE,OAAA;YAAAuD,QAAA,EAAM;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,eACjB,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNtE,OAAA;QAAKoD,KAAK,EAAE;UAAE8E,UAAU,EAAE,MAAM;UAAE7E,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAM,CAAE;QAAAC,QAAA,gBAC9DvD,OAAA,CAACX,MAAM;UACL8I,IAAI,EAAC,SAAS;UACdC,OAAO,EAAE/B,YAAa;UACtBgC,QAAQ,EAAE,CAAClH,cAAc,IAAI,CAACE,YAAY,IAAKM,kBAAkB,IAAI,CAACE,YAAc;UAAA0B,QAAA,EACrF;QAED;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtE,OAAA,CAACX,MAAM;UAAC+I,OAAO,EAAEA,CAAA,KAAM1G,eAAe,CAAC,KAAK,CAAE;UAAA6B,QAAA,EAAC;QAE/C;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENtE,OAAA,CAACH,kBAAkB;MACjBkC,WAAW,EAAEA,WAAY;MACzBuG,OAAO,EAAElC,gBAAiB;MAC1B1F,eAAe,EAAEA,eAAgB;MACjCC,WAAW,EAAEA,WAAY;MACzBL,YAAY,EAAEA;IAAa;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1D,EAAA,CA7QIR,0BAA0B;AAAAmI,EAAA,GAA1BnI,0BAA0B;AA+QhC,eAAeA,0BAA0B;AAAC,IAAAmI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}