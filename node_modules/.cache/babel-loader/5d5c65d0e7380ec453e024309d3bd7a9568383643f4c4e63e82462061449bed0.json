{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Downloads/route-builder-ac1-test/src/pages/FlightSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Select, InputNumber, Button, Table, Card, Tag, Spin, Input, Modal, DatePicker } from 'antd';\nimport { SearchOutlined, DownOutlined, CheckOutlined } from '@ant-design/icons';\nimport { airports } from '../data/airports';\nimport airlines from '../data/airlines';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport routeDetails from '../data/route_details.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(utc);\nconst FlightSearch = () => {\n  _s();\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const [selectedAirlines, setSelectedAirlines] = useState([]);\n  const [maxSegments, setMaxSegments] = useState(4);\n  const [searchResults, setSearchResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 25,\n    total: 0\n  });\n  const [errors, setErrors] = useState({\n    departure: false,\n    arrival: false,\n    maxSegments: false\n  });\n  const [tableSearchText, setTableSearchText] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedDates, setSelectedDates] = useState(null);\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [apiKey, setApiKey] = useState('');\n  const [segmentDetails, setSegmentDetails] = useState([]);\n  const [isLoadingSegments, setIsLoadingSegments] = useState(false);\n\n  // Sort airlines alphabetically\n  const sortedAirlines = [...airlines].map(airline => ({\n    ...airline,\n    searchStr: `${airline.value} ${airline.label}`.toLowerCase()\n  })).sort((a, b) => a.label.localeCompare(b.label));\n  const airportSelectProps = {\n    showSearch: true,\n    allowClear: true,\n    suffixIcon: null,\n    options: airports.map(airport => ({\n      value: airport.IATA,\n      label: `${airport.IATA} - ${airport.Name} (${airport.Country})`,\n      searchStr: `${airport.IATA} ${airport.Name}`.toLowerCase()\n    })),\n    filterOption: (input, option) => {\n      if (!input) return true;\n      input = input.toString().toLowerCase();\n\n      // IATA match\n      if (option.value.toLowerCase().includes(input)) {\n        option.priority = 2;\n        return true;\n      }\n\n      // Name/label match\n      if (option.label.toLowerCase().includes(input)) {\n        option.priority = 1;\n        return true;\n      }\n      return false;\n    },\n    filterSort: (optionA, optionB) => {\n      // Sort by priority (IATA matches first)\n      if (optionA.priority !== optionB.priority) {\n        return optionB.priority - optionA.priority;\n      }\n      // Then alphabetically\n      return optionA.label.localeCompare(optionB.label);\n    },\n    listHeight: 256,\n    virtual: true,\n    dropdownStyle: {\n      maxHeight: 400\n    }\n  };\n  const airlineSelectProps = {\n    showSearch: true,\n    allowClear: true,\n    filterSort: (optionA, optionB, input) => {\n      if (!input) return optionA.label.localeCompare(optionB.label);\n      const searchInput = input.toString().toLowerCase();\n      const aMatch = optionA.searchStr.includes(searchInput);\n      const bMatch = optionB.searchStr.includes(searchInput);\n      if (aMatch && !bMatch) return -1;\n      if (!aMatch && bMatch) return 1;\n      return optionA.label.localeCompare(optionB.label);\n    },\n    filterOption: (input, option) => {\n      if (!input) return true;\n      const searchInput = input.toString().toLowerCase();\n      return option.searchStr.includes(searchInput);\n    },\n    listHeight: 400,\n    virtual: false,\n    menuItemSelectedIcon: null,\n    dropdownStyle: {\n      maxHeight: 400\n    }\n  };\n  const columns = [{\n    title: 'Origin',\n    dataIndex: 'departure',\n    sorter: (a, b) => a.departure.localeCompare(b.departure),\n    width: 80\n  }, {\n    title: 'Connections',\n    key: 'connections',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: record.connections.length > 0 ? record.connections.join(' â†’ ') : '-'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this),\n    width: 200,\n    sorter: (a, b) => {\n      if (a.connections.length !== b.connections.length) {\n        return a.connections.length - b.connections.length;\n      }\n      return a.connections.join('').localeCompare(b.connections.join(''));\n    },\n    sortDirections: ['ascend', 'descend']\n  }, {\n    title: 'Destination',\n    dataIndex: 'arrival',\n    sorter: (a, b) => a.arrival.localeCompare(b.arrival),\n    width: 80\n  }, {\n    title: 'Stops',\n    dataIndex: 'numConnections',\n    sorter: (a, b) => a.numConnections - b.numConnections,\n    render: num => {\n      let color;\n      switch (num) {\n        case 0:\n          color = 'green';\n          break;\n        case 1:\n          color = 'blue';\n          break;\n        case 2:\n          color = 'orange';\n          break;\n        case 3:\n          color = 'gold';\n          break;\n        default:\n          color = 'red';\n      }\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: num === 0 ? 'Direct' : `${num} Stop${num > 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this);\n    },\n    width: 80\n  }, {\n    title: 'Distance',\n    dataIndex: 'totalDistance',\n    sorter: (a, b) => a.totalDistance - b.totalDistance,\n    render: distance => distance.toLocaleString(),\n    width: 60,\n    align: 'right'\n  }, {\n    title: 'Economy',\n    dataIndex: 'YPrice',\n    sorter: (a, b) => a.YPrice - b.YPrice,\n    render: price => price.toLocaleString(),\n    width: 80,\n    align: 'right'\n  }, {\n    title: 'Business',\n    dataIndex: 'JPrice',\n    sorter: (a, b) => a.JPrice - b.JPrice,\n    render: price => price.toLocaleString(),\n    width: 80,\n    align: 'right'\n  }, {\n    title: 'First',\n    dataIndex: 'FPrice',\n    sorter: (a, b) => a.FPrice - b.FPrice,\n    render: price => price.toLocaleString(),\n    width: 80,\n    align: 'right'\n  }, {\n    title: 'Y %',\n    dataIndex: 'Ynet',\n    width: 160,\n    render: text => text || '-',\n    sorter: (a, b) => {\n      const getPercent = str => {\n        if (!str) return 0;\n        const match = str.match(/^(-?\\d+)/);\n        return match ? parseInt(match[0]) : 0;\n      };\n      return getPercent(a.Ynet) - getPercent(b.Ynet);\n    }\n  }, {\n    title: 'J %',\n    dataIndex: 'Jnet',\n    width: 160,\n    render: text => text || '-',\n    sorter: (a, b) => {\n      const getPercent = str => {\n        if (!str) return 0;\n        const match = str.match(/^(-?\\d+)/);\n        return match ? parseInt(match[0]) : 0;\n      };\n      return getPercent(a.Jnet) - getPercent(b.Jnet);\n    }\n  }, {\n    title: 'F %',\n    dataIndex: 'Fnet',\n    width: 160,\n    render: text => text || '-',\n    sorter: (a, b) => {\n      const getPercent = str => {\n        if (!str) return 0;\n        const match = str.match(/^(-?\\d+)/);\n        return match ? parseInt(match[0]) : 0;\n      };\n      return getPercent(a.Fnet) - getPercent(b.Fnet);\n    }\n  }, {\n    title: '',\n    key: 'actions',\n    width: 20,\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      icon: /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this),\n      onClick: () => {\n        const fullRoute = [record.departure, ...record.connections, record.arrival];\n        setCurrentRoute(fullRoute);\n        setIsModalVisible(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)\n  }];\n  const handleSearch = async () => {\n    // Reset errors\n    setErrors({\n      departure: !departure,\n      arrival: !arrival,\n      maxSegments: !maxSegments\n    });\n\n    // Validate mandatory fields\n    if (!departure || !arrival || !maxSegments) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://backend-284998006367.us-central1.run.app/api/find-routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          departureAirport: departure,\n          arrivalAirport: arrival,\n          excludedAirline: selectedAirlines.length ? selectedAirlines[0] : \"null\",\n          maxSegments: maxSegments\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Search failed');\n      }\n      const data = await response.json();\n      setSearchResults(data);\n      setPagination(prev => ({\n        ...prev,\n        total: data.routes.length\n      }));\n    } catch (error) {\n      console.error('Search failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleTableChange = (newPagination, filters, sorter) => {\n    setPagination(newPagination);\n  };\n\n  // Filter function for the table data\n  const getFilteredData = () => {\n    if (!(searchResults !== null && searchResults !== void 0 && searchResults.routes) || !tableSearchText) {\n      return (searchResults === null || searchResults === void 0 ? void 0 : searchResults.routes) || [];\n    }\n    const searchLower = tableSearchText.toLowerCase();\n    return searchResults.routes.filter(route => {\n      // Convert all relevant fields to strings and check if they include the search text\n      return route.departure.toLowerCase().includes(searchLower) || route.arrival.toLowerCase().includes(searchLower) || route.connections.join(' ').toLowerCase().includes(searchLower) || route.YPrice.toString().includes(searchLower) || route.JPrice.toString().includes(searchLower) || route.FPrice.toString().includes(searchLower) || (route.Ynet || '').toLowerCase().includes(searchLower) || (route.Jnet || '').toLowerCase().includes(searchLower) || (route.Fnet || '').toLowerCase().includes(searchLower);\n    });\n  };\n  const formatTime = (dateStr, baseDate) => {\n    const date = dayjs(dateStr);\n    const base = dayjs(baseDate);\n\n    // If time is before 12:00 and it's a flight arrival, it's likely next day\n    const dayDiff = date.hour() < 12 && date.format('HH:mm') < '12:00' ? 1 : 0;\n    const timeStr = date.format('HH:mm');\n    return dayDiff > 0 ? `${timeStr} (+${dayDiff})` : timeStr;\n  };\n  const getAirlineName = code => {\n    const airline = airlines.find(a => a.value === code);\n    return airline ? airline.label.replace(` (${code})`, '') : code;\n  };\n  const handleDateSearch = async () => {\n    if (!selectedDates || !currentRoute || !apiKey) return;\n    setIsLoadingSegments(true);\n    const dateStr = selectedDates.format('YYYY-MM-DD');\n    const segments = [];\n\n    // Get segments from route_details.json\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const origin = currentRoute[i];\n      const destination = currentRoute[i + 1];\n      const route = routeDetails.find(r => r.origin === origin && r.destination === destination && r.date === dateStr);\n      if (route) {\n        segments.push(route.ID);\n      }\n    }\n\n    // Log the segment IDs being requested\n    console.log('Segment IDs:', segments);\n    try {\n      const API_URL = 'https://backend-284998006367.us-central1.run.app';\n      const results = await Promise.all(segments.map(async segmentId => {\n        try {\n          const response = await fetch(`${API_URL}/api/seats/${segmentId}`, {\n            method: 'GET',\n            headers: {\n              'accept': 'application/json',\n              'Partner-Authorization': apiKey,\n              'Segment-ID': segmentId\n            }\n          });\n          if (!response.ok) {\n            throw new Error(`Failed to fetch segment data: ${response.status}`);\n          }\n          const data = await response.json();\n          console.log('API Response for segment', segmentId, ':', data);\n          return data;\n        } catch (error) {\n          console.error(`Error fetching segment ${segmentId}:`, error);\n          return null;\n        }\n      }));\n\n      // Filter out failed requests\n      const validResults = results.filter(result => result !== null);\n\n      // Process the nested data structure\n      const processedSegments = validResults.flatMap(result => {\n        var _result$results, _result$results$, _result$results$$data;\n        const flights = {};\n        const dateStr = selectedDates.format('YYYY-MM-DD');\n        (((_result$results = result.results) === null || _result$results === void 0 ? void 0 : (_result$results$ = _result$results[0]) === null || _result$results$ === void 0 ? void 0 : (_result$results$$data = _result$results$.data) === null || _result$results$$data === void 0 ? void 0 : _result$results$$data.data) || []).filter(trip => trip.Stops === 0).forEach(trip => {\n          const key = `${trip.FlightNumbers}-${trip.DepartsAt}`;\n          if (!flights[key]) {\n            const departureTime = dayjs(trip.DepartsAt);\n            const arrivalTime = dayjs(trip.ArrivesAt);\n\n            // For departures after 21:00, check if arrival is before 12:00 next day\n            const isOvernightFlight = departureTime.hour() >= 21 && arrivalTime.hour() < 12 && arrivalTime.isAfter(departureTime);\n            flights[key] = {\n              from: trip.OriginAirport,\n              to: trip.DestinationAirport,\n              flightNumber: trip.FlightNumbers,\n              airlines: getAirlineName(trip.Carriers),\n              aircraft: trip.Aircraft[0],\n              departs: departureTime.format('HH:mm'),\n              arrives: isOvernightFlight ? `${arrivalTime.format('HH:mm')} (+1)` : arrivalTime.format('HH:mm'),\n              economy: false,\n              business: false,\n              first: false\n            };\n          }\n\n          // Set cabin availability\n          switch (trip.Cabin.toLowerCase()) {\n            case 'economy':\n              flights[key].economy = true;\n              break;\n            case 'business':\n              flights[key].business = true;\n              break;\n            case 'first':\n              flights[key].first = true;\n              break;\n          }\n        });\n        return Object.values(flights);\n      });\n      console.log('Processed segments:', processedSegments);\n      setSegmentDetails(processedSegments);\n    } catch (error) {\n      console.error('Error fetching segment details:', error);\n    } finally {\n      setIsLoadingSegments(false);\n    }\n  };\n  const segmentColumns = [{\n    title: 'From',\n    dataIndex: 'from',\n    width: 80,\n    sorter: (a, b) => a.from.localeCompare(b.from)\n  }, {\n    title: 'To',\n    dataIndex: 'to',\n    width: 80,\n    sorter: (a, b) => a.to.localeCompare(b.to)\n  }, {\n    title: 'Flight',\n    dataIndex: 'flightNumber',\n    width: 100,\n    sorter: (a, b) => a.flightNumber.localeCompare(b.flightNumber)\n  }, {\n    title: 'Airlines',\n    dataIndex: 'airlines',\n    width: 150,\n    sorter: (a, b) => a.airlines.localeCompare(b.airlines)\n  }, {\n    title: 'Aircraft',\n    dataIndex: 'aircraft',\n    width: 180,\n    sorter: (a, b) => a.aircraft.localeCompare(b.aircraft)\n  }, {\n    title: 'Departs',\n    dataIndex: 'departs',\n    width: 100,\n    sorter: (a, b) => {\n      const timeA = a.departs.replace(/\\s*\\(\\+\\d+\\)$/, '');\n      const timeB = b.departs.replace(/\\s*\\(\\+\\d+\\)$/, '');\n      return timeA.localeCompare(timeB);\n    },\n    defaultSortOrder: 'ascend'\n  }, {\n    title: 'Arrives',\n    dataIndex: 'arrives',\n    width: 100,\n    sorter: (a, b) => {\n      const timeA = a.arrives.replace(/\\s*\\(\\+\\d+\\)$/, '');\n      const timeB = b.arrives.replace(/\\s*\\(\\+\\d+\\)$/, '');\n      return timeA.localeCompare(timeB);\n    }\n  }, {\n    title: 'Economy',\n    dataIndex: 'economy',\n    width: 60,\n    align: 'center',\n    sorter: (a, b) => a.economy === b.economy ? 0 : a.economy ? -1 : 1,\n    render: hasClass => hasClass ? /*#__PURE__*/_jsxDEV(CheckOutlined, {\n      style: {\n        color: '#52c41a'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 38\n    }, this) : null\n  }, {\n    title: 'Business',\n    dataIndex: 'business',\n    width: 60,\n    align: 'center',\n    sorter: (a, b) => a.business === b.business ? 0 : a.business ? -1 : 1,\n    render: hasClass => hasClass ? /*#__PURE__*/_jsxDEV(CheckOutlined, {\n      style: {\n        color: '#52c41a'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 38\n    }, this) : null\n  }, {\n    title: 'First',\n    dataIndex: 'first',\n    width: 60,\n    align: 'center',\n    sorter: (a, b) => a.first === b.first ? 0 : a.first ? -1 : 1,\n    render: hasClass => hasClass ? /*#__PURE__*/_jsxDEV(CheckOutlined, {\n      style: {\n        color: '#52c41a'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 38\n    }, this) : null\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"search-form\",\n      style: {\n        boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-search-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-label\",\n          children: \"Departure Airport: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          ...airportSelectProps,\n          value: departure,\n          onChange: setDeparture,\n          placeholder: \"Select departure airport...\",\n          className: \"airport-select\",\n          status: errors.departure ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-search-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-label\",\n          children: \"Arrival Airport: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          ...airportSelectProps,\n          value: arrival,\n          onChange: setArrival,\n          placeholder: \"Select arrival airport...\",\n          className: \"airport-select\",\n          status: errors.arrival ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-search-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-label\",\n          children: \"Airlines Excluded:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          ...airlineSelectProps,\n          mode: \"multiple\",\n          value: selectedAirlines,\n          onChange: setSelectedAirlines,\n          options: sortedAirlines,\n          placeholder: \"Select airlines...\",\n          className: \"airline-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segments-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-label\",\n          children: \"Maximum Segments *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n          min: 1,\n          max: 5,\n          value: maxSegments,\n          onChange: setMaxSegments,\n          status: errors.maxSegments ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 17\n        }, this),\n        onClick: handleSearch,\n        loading: isLoading,\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), searchResults && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"results-card\",\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Search routes...\",\n          value: tableSearchText,\n          onChange: e => setTableSearchText(e.target.value),\n          style: {\n            width: 200\n          },\n          allowClear: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 13\n      }, this),\n      style: {\n        boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: getFilteredData(),\n        columns: columns,\n        rowKey: (record, index) => index,\n        pagination: {\n          ...pagination,\n          showSizeChanger: true,\n          showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} routes`,\n          pageSizeOptions: ['10', '25', '50', '100'],\n          defaultPageSize: 25\n        },\n        loading: isLoading,\n        onChange: handleTableChange,\n        scroll: {\n          x: 1600\n        },\n        showSorterTooltip: true,\n        sortDirections: ['ascend', 'descend']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Flight Details\",\n      open: isModalVisible,\n      onOk: handleDateSearch,\n      onCancel: () => {\n        setIsModalVisible(false);\n        setSelectedDates(null);\n        setApiKey('');\n        setSegmentDetails([]);\n      },\n      okText: \"Search Flights\",\n      okButtonProps: {\n        disabled: !selectedDates || !apiKey,\n        loading: isLoadingSegments\n      },\n      width: 1200,\n      styles: {\n        body: {\n          padding: '12px',\n          maxWidth: '100%'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 8\n          },\n          children: \"Select Travel Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          style: {\n            width: '100%'\n          },\n          onChange: date => setSelectedDates(date),\n          disabledDate: current => current && current < dayjs().startOf('day')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 8\n          },\n          children: \"API Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter API key\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }, this), isLoadingSegments ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          overflowX: 'auto'\n        },\n        children: currentRoute.slice(0, -1).map((from, index) => {\n          const to = currentRoute[index + 1];\n          const routeKey = `${from}-${to}`;\n          const flights = segmentDetails.filter(flight => flight.from === from && flight.to === to);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '24px',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '16px'\n              },\n              children: routeKey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              dataSource: flights,\n              columns: segmentColumns,\n              size: \"small\",\n              rowKey: (record, index) => `${routeKey}-${index}`,\n              sortDirections: ['ascend', 'descend'],\n              style: {\n                width: '100%',\n                tableLayout: 'fixed'\n              },\n              pagination: {\n                defaultPageSize: 10,\n                showSizeChanger: true,\n                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n                pageSizeOptions: ['10', '20', '50', 'all'],\n                position: ['bottomRight']\n              },\n              locale: {\n                emptyText: 'No flights available'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 19\n            }, this)]\n          }, routeKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .flight-search-container {\n          max-width: 1200px;\n          margin: 20px auto;\n          padding: 0 20px;\n        }\n        .search-form {\n          margin-bottom: 20px;\n        }\n        .flight-search-element {\n          margin-bottom: 16px;\n        }\n        .element-label {\n          margin-bottom: 8px;\n          font-weight: 500;\n        }\n        .element-label::after {\n          content: \" *\";\n          color: #ff4d4f;\n          display: none;\n        }\n        .element-label:has(+ [data-required=\"true\"])::after {\n          display: inline;\n        }\n        .airport-select,\n        .airline-select {\n          width: 100%;\n        }\n        .segments-element {\n          margin-bottom: 16px;\n        }\n        .search-button {\n          margin-top: 24px;\n          width: 100%;\n        }\n        .results-card {\n          margin-top: 24px;\n        }\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 542,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightSearch, \"1u9lGVFrmrOqoEwG7dluSDT7TdA=\");\n_c = FlightSearch;\nexport default FlightSearch;\nvar _c;\n$RefreshReg$(_c, \"FlightSearch\");","map":{"version":3,"names":["React","useState","useEffect","Select","InputNumber","Button","Table","Card","Tag","Spin","Input","Modal","DatePicker","SearchOutlined","DownOutlined","CheckOutlined","airports","airlines","dayjs","utc","routeDetails","jsxDEV","_jsxDEV","extend","FlightSearch","_s","departure","setDeparture","arrival","setArrival","selectedAirlines","setSelectedAirlines","maxSegments","setMaxSegments","searchResults","setSearchResults","isLoading","setIsLoading","pagination","setPagination","current","pageSize","total","errors","setErrors","tableSearchText","setTableSearchText","isModalVisible","setIsModalVisible","selectedDates","setSelectedDates","currentRoute","setCurrentRoute","apiKey","setApiKey","segmentDetails","setSegmentDetails","isLoadingSegments","setIsLoadingSegments","sortedAirlines","map","airline","searchStr","value","label","toLowerCase","sort","a","b","localeCompare","airportSelectProps","showSearch","allowClear","suffixIcon","options","airport","IATA","Name","Country","filterOption","input","option","toString","includes","priority","filterSort","optionA","optionB","listHeight","virtual","dropdownStyle","maxHeight","airlineSelectProps","searchInput","aMatch","bMatch","menuItemSelectedIcon","columns","title","dataIndex","sorter","width","key","render","_","record","children","connections","length","join","fileName","_jsxFileName","lineNumber","columnNumber","sortDirections","numConnections","num","color","totalDistance","distance","toLocaleString","align","YPrice","price","JPrice","FPrice","text","getPercent","str","match","parseInt","Ynet","Jnet","Fnet","type","icon","onClick","fullRoute","handleSearch","response","fetch","method","headers","body","JSON","stringify","departureAirport","arrivalAirport","excludedAirline","ok","Error","data","json","prev","routes","error","console","handleTableChange","newPagination","filters","getFilteredData","searchLower","filter","route","formatTime","dateStr","baseDate","date","base","dayDiff","hour","format","timeStr","getAirlineName","code","find","replace","handleDateSearch","segments","i","origin","destination","r","push","ID","log","API_URL","results","Promise","all","segmentId","status","validResults","result","processedSegments","flatMap","_result$results","_result$results$","_result$results$$data","flights","trip","Stops","forEach","FlightNumbers","DepartsAt","departureTime","arrivalTime","ArrivesAt","isOvernightFlight","isAfter","from","OriginAirport","to","DestinationAirport","flightNumber","Carriers","aircraft","Aircraft","departs","arrives","economy","business","first","Cabin","Object","values","segmentColumns","timeA","timeB","defaultSortOrder","hasClass","style","className","boxShadow","onChange","placeholder","mode","min","max","loading","display","justifyContent","alignItems","e","target","dataSource","rowKey","index","showSizeChanger","showTotal","range","pageSizeOptions","defaultPageSize","scroll","x","showSorterTooltip","open","onOk","onCancel","okText","okButtonProps","disabled","styles","padding","maxWidth","marginBottom","disabledDate","startOf","textAlign","overflowX","slice","routeKey","flight","size","tableLayout","position","locale","emptyText","jsx","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Downloads/route-builder-ac1-test/src/pages/FlightSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Select, InputNumber, Button, Table, Card, Tag, Spin, Input, Modal, DatePicker } from 'antd';\nimport { SearchOutlined, DownOutlined, CheckOutlined } from '@ant-design/icons';\nimport { airports } from '../data/airports';\nimport airlines from '../data/airlines';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport routeDetails from '../data/route_details.json';\ndayjs.extend(utc);\n\nconst FlightSearch = () => {\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const [selectedAirlines, setSelectedAirlines] = useState([]);\n  const [maxSegments, setMaxSegments] = useState(4);\n  const [searchResults, setSearchResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 25,\n    total: 0,\n  });\n  const [errors, setErrors] = useState({\n    departure: false,\n    arrival: false,\n    maxSegments: false\n  });\n  const [tableSearchText, setTableSearchText] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedDates, setSelectedDates] = useState(null);\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const [apiKey, setApiKey] = useState('');\n  const [segmentDetails, setSegmentDetails] = useState([]);\n  const [isLoadingSegments, setIsLoadingSegments] = useState(false);\n\n  // Sort airlines alphabetically\n  const sortedAirlines = [...airlines]\n    .map(airline => ({\n      ...airline,\n      searchStr: `${airline.value} ${airline.label}`.toLowerCase()\n    }))\n    .sort((a, b) => a.label.localeCompare(b.label));\n\n  const airportSelectProps = {\n    showSearch: true,\n    allowClear: true,\n    suffixIcon: null,\n    options: airports.map(airport => ({\n      value: airport.IATA,\n      label: `${airport.IATA} - ${airport.Name} (${airport.Country})`,\n      searchStr: `${airport.IATA} ${airport.Name}`.toLowerCase()\n    })),\n    filterOption: (input, option) => {\n      if (!input) return true;\n      input = input.toString().toLowerCase();\n      \n      // IATA match\n      if (option.value.toLowerCase().includes(input)) {\n        option.priority = 2;\n        return true;\n      }\n      \n      // Name/label match\n      if (option.label.toLowerCase().includes(input)) {\n        option.priority = 1;\n        return true;\n      }\n      \n      return false;\n    },\n    filterSort: (optionA, optionB) => {\n      // Sort by priority (IATA matches first)\n      if (optionA.priority !== optionB.priority) {\n        return optionB.priority - optionA.priority;\n      }\n      // Then alphabetically\n      return optionA.label.localeCompare(optionB.label);\n    },\n    listHeight: 256,\n    virtual: true,\n    dropdownStyle: { maxHeight: 400 }\n  };\n\n  const airlineSelectProps = {\n    showSearch: true,\n    allowClear: true,\n    filterSort: (optionA, optionB, input) => {\n      if (!input) return optionA.label.localeCompare(optionB.label);\n      \n      const searchInput = input.toString().toLowerCase();\n      const aMatch = optionA.searchStr.includes(searchInput);\n      const bMatch = optionB.searchStr.includes(searchInput);\n      \n      if (aMatch && !bMatch) return -1;\n      if (!aMatch && bMatch) return 1;\n\n      return optionA.label.localeCompare(optionB.label);\n    },\n    filterOption: (input, option) => {\n      if (!input) return true;\n      const searchInput = input.toString().toLowerCase();\n      return option.searchStr.includes(searchInput);\n    },\n    listHeight: 400,\n    virtual: false,\n    menuItemSelectedIcon: null,\n    dropdownStyle: { maxHeight: 400 }\n  };\n\n  const columns = [\n    {\n      title: 'Origin',\n      dataIndex: 'departure',\n      sorter: (a, b) => a.departure.localeCompare(b.departure),\n      width: 80,\n    },\n    {\n      title: 'Connections',\n      key: 'connections',\n      render: (_, record) => (\n        <span>\n          {record.connections.length > 0 \n            ? record.connections.join(' â†’ ')\n            : '-'}\n        </span>\n      ),\n      width: 200,\n      sorter: (a, b) => {\n        if (a.connections.length !== b.connections.length) {\n          return a.connections.length - b.connections.length;\n        }\n        return a.connections.join('').localeCompare(b.connections.join(''));\n      },\n      sortDirections: ['ascend', 'descend'],\n    },\n    {\n      title: 'Destination',\n      dataIndex: 'arrival',\n      sorter: (a, b) => a.arrival.localeCompare(b.arrival),\n      width: 80,\n    },\n    {\n      title: 'Stops',\n      dataIndex: 'numConnections',\n      sorter: (a, b) => a.numConnections - b.numConnections,\n      render: (num) => {\n        let color;\n        switch (num) {\n          case 0: color = 'green'; break;\n          case 1: color = 'blue'; break;\n          case 2: color = 'orange'; break;\n          case 3: color = 'gold'; break;\n          default: color = 'red';\n        }\n        return (\n          <Tag color={color}>\n            {num === 0 ? 'Direct' : `${num} Stop${num > 1 ? 's' : ''}`}\n          </Tag>\n        );\n      },\n      width: 80,\n    },\n    {\n      title: 'Distance',\n      dataIndex: 'totalDistance',\n      sorter: (a, b) => a.totalDistance - b.totalDistance,\n      render: (distance) => distance.toLocaleString(),\n      width: 60,\n      align: 'right',\n    },\n    {\n      title: 'Economy',\n      dataIndex: 'YPrice',\n      sorter: (a, b) => a.YPrice - b.YPrice,\n      render: (price) => price.toLocaleString(),\n      width: 80,\n      align: 'right',\n    },\n    {\n      title: 'Business',\n      dataIndex: 'JPrice',\n      sorter: (a, b) => a.JPrice - b.JPrice,\n      render: (price) => price.toLocaleString(),\n      width: 80,\n      align: 'right',\n    },\n    {\n      title: 'First',\n      dataIndex: 'FPrice',\n      sorter: (a, b) => a.FPrice - b.FPrice,\n      render: (price) => price.toLocaleString(),\n      width: 80,\n      align: 'right',\n    },\n    {\n      title: 'Y %',\n      dataIndex: 'Ynet',\n      width: 160,\n      render: (text) => text || '-',\n      sorter: (a, b) => {\n        const getPercent = (str) => {\n          if (!str) return 0;\n          const match = str.match(/^(-?\\d+)/);\n          return match ? parseInt(match[0]) : 0;\n        };\n        return getPercent(a.Ynet) - getPercent(b.Ynet);\n      },\n    },\n    {\n      title: 'J %',\n      dataIndex: 'Jnet',\n      width: 160,\n      render: (text) => text || '-',\n      sorter: (a, b) => {\n        const getPercent = (str) => {\n          if (!str) return 0;\n          const match = str.match(/^(-?\\d+)/);\n          return match ? parseInt(match[0]) : 0;\n        };\n        return getPercent(a.Jnet) - getPercent(b.Jnet);\n      },\n    },\n    {\n      title: 'F %',\n      dataIndex: 'Fnet',\n      width: 160,\n      render: (text) => text || '-',\n      sorter: (a, b) => {\n        const getPercent = (str) => {\n          if (!str) return 0;\n          const match = str.match(/^(-?\\d+)/);\n          return match ? parseInt(match[0]) : 0;\n        };\n        return getPercent(a.Fnet) - getPercent(b.Fnet);\n      },\n    },\n    {\n      title: '',\n      key: 'actions',\n      width: 20,\n      render: (_, record) => (\n        <Button \n          type=\"link\" \n          icon={<DownOutlined />}\n          onClick={() => {\n            const fullRoute = [record.departure, ...record.connections, record.arrival];\n            setCurrentRoute(fullRoute);\n            setIsModalVisible(true);\n          }}\n        />\n      ),\n    }\n  ];\n\n  const handleSearch = async () => {\n    // Reset errors\n    setErrors({\n      departure: !departure,\n      arrival: !arrival,\n      maxSegments: !maxSegments\n    });\n\n    // Validate mandatory fields\n    if (!departure || !arrival || !maxSegments) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://backend-284998006367.us-central1.run.app/api/find-routes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          departureAirport: departure,\n          arrivalAirport: arrival,\n          excludedAirline: selectedAirlines.length ? selectedAirlines[0] : \"null\",\n          maxSegments: maxSegments\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Search failed');\n      }\n\n      const data = await response.json();\n      setSearchResults(data);\n      setPagination(prev => ({\n        ...prev,\n        total: data.routes.length\n      }));\n    } catch (error) {\n      console.error('Search failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleTableChange = (newPagination, filters, sorter) => {\n    setPagination(newPagination);\n  };\n\n  // Filter function for the table data\n  const getFilteredData = () => {\n    if (!searchResults?.routes || !tableSearchText) {\n      return searchResults?.routes || [];\n    }\n\n    const searchLower = tableSearchText.toLowerCase();\n    return searchResults.routes.filter(route => {\n      // Convert all relevant fields to strings and check if they include the search text\n      return (\n        route.departure.toLowerCase().includes(searchLower) ||\n        route.arrival.toLowerCase().includes(searchLower) ||\n        route.connections.join(' ').toLowerCase().includes(searchLower) ||\n        route.YPrice.toString().includes(searchLower) ||\n        route.JPrice.toString().includes(searchLower) ||\n        route.FPrice.toString().includes(searchLower) ||\n        (route.Ynet || '').toLowerCase().includes(searchLower) ||\n        (route.Jnet || '').toLowerCase().includes(searchLower) ||\n        (route.Fnet || '').toLowerCase().includes(searchLower)\n      );\n    });\n  };\n\n  const formatTime = (dateStr, baseDate) => {\n    const date = dayjs(dateStr);\n    const base = dayjs(baseDate);\n    \n    // If time is before 12:00 and it's a flight arrival, it's likely next day\n    const dayDiff = date.hour() < 12 && date.format('HH:mm') < '12:00' ? 1 : 0;\n    \n    const timeStr = date.format('HH:mm');\n    return dayDiff > 0 ? `${timeStr} (+${dayDiff})` : timeStr;\n  };\n\n  const getAirlineName = (code) => {\n    const airline = airlines.find(a => a.value === code);\n    return airline ? airline.label.replace(` (${code})`, '') : code;\n  };\n\n  const handleDateSearch = async () => {\n    if (!selectedDates || !currentRoute || !apiKey) return;\n    \n    setIsLoadingSegments(true);\n    const dateStr = selectedDates.format('YYYY-MM-DD');\n    const segments = [];\n    \n    // Get segments from route_details.json\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const origin = currentRoute[i];\n      const destination = currentRoute[i + 1];\n      \n      const route = routeDetails.find(r => \n        r.origin === origin && \n        r.destination === destination && \n        r.date === dateStr\n      );\n      \n      if (route) {\n        segments.push(route.ID);\n      }\n    }\n\n    // Log the segment IDs being requested\n    console.log('Segment IDs:', segments);\n\n    try {\n      const API_URL = 'https://backend-284998006367.us-central1.run.app';\n      \n      const results = await Promise.all(\n        segments.map(async (segmentId) => {\n          try {\n            const response = await fetch(`${API_URL}/api/seats/${segmentId}`, {\n              method: 'GET',\n              headers: {\n                'accept': 'application/json',\n                'Partner-Authorization': apiKey,\n                'Segment-ID': segmentId\n              }\n            });\n          \n            if (!response.ok) {\n              throw new Error(`Failed to fetch segment data: ${response.status}`);\n            }\n          \n            const data = await response.json();\n            console.log('API Response for segment', segmentId, ':', data);\n            return data;\n          } catch (error) {\n            console.error(`Error fetching segment ${segmentId}:`, error);\n            return null;\n          }\n        })\n      );\n\n      // Filter out failed requests\n      const validResults = results.filter(result => result !== null);\n\n      // Process the nested data structure\n      const processedSegments = validResults.flatMap(result => {\n        const flights = {};\n        const dateStr = selectedDates.format('YYYY-MM-DD');\n        \n        (result.results?.[0]?.data?.data || [])\n          .filter(trip => trip.Stops === 0)\n          .forEach(trip => {\n            const key = `${trip.FlightNumbers}-${trip.DepartsAt}`;\n            if (!flights[key]) {\n              const departureTime = dayjs(trip.DepartsAt);\n              const arrivalTime = dayjs(trip.ArrivesAt);\n              \n              // For departures after 21:00, check if arrival is before 12:00 next day\n              const isOvernightFlight = \n                departureTime.hour() >= 21 && \n                arrivalTime.hour() < 12 &&\n                arrivalTime.isAfter(departureTime);\n\n              flights[key] = {\n                from: trip.OriginAirport,\n                to: trip.DestinationAirport,\n                flightNumber: trip.FlightNumbers,\n                airlines: getAirlineName(trip.Carriers),\n                aircraft: trip.Aircraft[0],\n                departs: departureTime.format('HH:mm'),\n                arrives: isOvernightFlight ? \n                  `${arrivalTime.format('HH:mm')} (+1)` : \n                  arrivalTime.format('HH:mm'),\n                economy: false,\n                business: false,\n                first: false\n              };\n            }\n            \n            // Set cabin availability\n            switch(trip.Cabin.toLowerCase()) {\n              case 'economy':\n                flights[key].economy = true;\n                break;\n              case 'business':\n                flights[key].business = true;\n                break;\n              case 'first':\n                flights[key].first = true;\n                break;\n            }\n          });\n        \n        return Object.values(flights);\n      });\n\n      console.log('Processed segments:', processedSegments);\n\n      setSegmentDetails(processedSegments);\n    } catch (error) {\n      console.error('Error fetching segment details:', error);\n    } finally {\n      setIsLoadingSegments(false);\n    }\n  };\n\n  const segmentColumns = [\n    { \n      title: 'From', \n      dataIndex: 'from', \n      width: 80,\n      sorter: (a, b) => a.from.localeCompare(b.from)\n    },\n    { \n      title: 'To', \n      dataIndex: 'to', \n      width: 80,\n      sorter: (a, b) => a.to.localeCompare(b.to)\n    },\n    { \n      title: 'Flight', \n      dataIndex: 'flightNumber', \n      width: 100,\n      sorter: (a, b) => a.flightNumber.localeCompare(b.flightNumber)\n    },\n    { \n      title: 'Airlines', \n      dataIndex: 'airlines', \n      width: 150,\n      sorter: (a, b) => a.airlines.localeCompare(b.airlines)\n    },\n    { \n      title: 'Aircraft', \n      dataIndex: 'aircraft', \n      width: 180,\n      sorter: (a, b) => a.aircraft.localeCompare(b.aircraft)\n    },\n    { \n      title: 'Departs', \n      dataIndex: 'departs', \n      width: 100,\n      sorter: (a, b) => {\n        const timeA = a.departs.replace(/\\s*\\(\\+\\d+\\)$/, '');\n        const timeB = b.departs.replace(/\\s*\\(\\+\\d+\\)$/, '');\n        return timeA.localeCompare(timeB);\n      },\n      defaultSortOrder: 'ascend'\n    },\n    { \n      title: 'Arrives', \n      dataIndex: 'arrives', \n      width: 100,\n      sorter: (a, b) => {\n        const timeA = a.arrives.replace(/\\s*\\(\\+\\d+\\)$/, '');\n        const timeB = b.arrives.replace(/\\s*\\(\\+\\d+\\)$/, '');\n        return timeA.localeCompare(timeB);\n      }\n    },\n    { \n      title: 'Economy', \n      dataIndex: 'economy', \n      width: 60,\n      align: 'center',\n      sorter: (a, b) => (a.economy === b.economy ? 0 : a.economy ? -1 : 1),\n      render: hasClass => hasClass ? <CheckOutlined style={{ color: '#52c41a' }} /> : null\n    },\n    { \n      title: 'Business', \n      dataIndex: 'business', \n      width: 60,\n      align: 'center',\n      sorter: (a, b) => (a.business === b.business ? 0 : a.business ? -1 : 1),\n      render: hasClass => hasClass ? <CheckOutlined style={{ color: '#52c41a' }} /> : null\n    },\n    { \n      title: 'First', \n      dataIndex: 'first', \n      width: 60,\n      align: 'center',\n      sorter: (a, b) => (a.first === b.first ? 0 : a.first ? -1 : 1),\n      render: hasClass => hasClass ? <CheckOutlined style={{ color: '#52c41a' }} /> : null\n    }\n  ];\n\n  return (\n    <div className=\"flight-search-container\">\n      <Card \n        className=\"search-form\" \n        style={{ boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)' }}\n      >\n        <div className=\"flight-search-element\">\n          <div className=\"element-label\">Departure Airport: *</div>\n          <Select\n            {...airportSelectProps}\n            value={departure}\n            onChange={setDeparture}\n            placeholder=\"Select departure airport...\"\n            className=\"airport-select\"\n            status={errors.departure ? 'error' : ''}\n          />\n        </div>\n\n        <div className=\"flight-search-element\">\n          <div className=\"element-label\">Arrival Airport: *</div>\n          <Select\n            {...airportSelectProps}\n            value={arrival}\n            onChange={setArrival}\n            placeholder=\"Select arrival airport...\"\n            className=\"airport-select\"\n            status={errors.arrival ? 'error' : ''}\n          />\n        </div>\n\n        <div className=\"flight-search-element\">\n          <div className=\"element-label\">Airlines Excluded:</div>\n          <Select\n            {...airlineSelectProps}\n            mode=\"multiple\"\n            value={selectedAirlines}\n            onChange={setSelectedAirlines}\n            options={sortedAirlines}\n            placeholder=\"Select airlines...\"\n            className=\"airline-select\"\n          />\n        </div>\n\n        <div className=\"segments-element\">\n          <div className=\"element-label\">Maximum Segments *</div>\n          <InputNumber\n            min={1}\n            max={5}\n            value={maxSegments}\n            onChange={setMaxSegments}\n            status={errors.maxSegments ? 'error' : ''}\n          />\n        </div>\n\n        <Button \n          type=\"primary\"\n          icon={<SearchOutlined />}\n          onClick={handleSearch}\n          loading={isLoading}\n          className=\"search-button\"\n        >\n          Search\n        </Button>\n      </Card>\n\n      {searchResults && (\n        <Card \n          className=\"results-card\" \n          title={\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <span>Search Results</span>\n              <Input\n                placeholder=\"Search routes...\"\n                value={tableSearchText}\n                onChange={e => setTableSearchText(e.target.value)}\n                style={{ width: 200 }}\n                allowClear\n              />\n            </div>\n          }\n          style={{ boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)' }}\n        >\n          <Table\n            dataSource={getFilteredData()}\n            columns={columns}\n            rowKey={(record, index) => index}\n            pagination={{\n              ...pagination,\n              showSizeChanger: true,\n              showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} routes`,\n              pageSizeOptions: ['10', '25', '50', '100'],\n              defaultPageSize: 25,\n            }}\n            loading={isLoading}\n            onChange={handleTableChange}\n            scroll={{ x: 1600 }}\n            showSorterTooltip={true}\n            sortDirections={['ascend', 'descend']}\n          />\n        </Card>\n      )}\n\n      <Modal\n        title=\"Flight Details\"\n        open={isModalVisible}\n        onOk={handleDateSearch}\n        onCancel={() => {\n          setIsModalVisible(false);\n          setSelectedDates(null);\n          setApiKey('');\n          setSegmentDetails([]);\n        }}\n        okText=\"Search Flights\"\n        okButtonProps={{ \n          disabled: !selectedDates || !apiKey,\n          loading: isLoadingSegments \n        }}\n        width={1200}\n        styles={{\n          body: { \n            padding: '12px',\n            maxWidth: '100%'\n          }\n        }}\n      >\n        <div style={{ marginBottom: 16 }}>\n          <div style={{ marginBottom: 8 }}>Select Travel Date:</div>\n          <DatePicker\n            style={{ width: '100%' }}\n            onChange={(date) => setSelectedDates(date)}\n            disabledDate={(current) => current && current < dayjs().startOf('day')}\n          />\n        </div>\n        <div style={{ marginBottom: 16 }}>\n          <div style={{ marginBottom: 8 }}>API Key:</div>\n          <Input\n            placeholder=\"Enter API key\"\n            value={apiKey}\n            onChange={(e) => setApiKey(e.target.value)}\n            style={{ width: '100%' }}\n          />\n        </div>\n        {isLoadingSegments ? (\n          <div style={{ textAlign: 'center', padding: '20px' }}>\n            <Spin />\n          </div>\n        ) : (\n          <div style={{ \n            width: '100%',\n            overflowX: 'auto'\n          }}>\n            {currentRoute.slice(0, -1).map((from, index) => {\n              const to = currentRoute[index + 1];\n              const routeKey = `${from}-${to}`;\n              const flights = segmentDetails.filter(flight => \n                flight.from === from && flight.to === to\n              );\n\n              return (\n                <div key={routeKey} style={{ \n                  marginBottom: '24px',\n                  width: '100%'\n                }}>\n                  <h3 style={{ marginBottom: '16px' }}>{routeKey}</h3>\n                  <Table\n                    dataSource={flights}\n                    columns={segmentColumns}\n                    size=\"small\"\n                    rowKey={(record, index) => `${routeKey}-${index}`}\n                    sortDirections={['ascend', 'descend']}\n                    style={{ \n                      width: '100%',\n                      tableLayout: 'fixed'\n                    }}\n                    pagination={{\n                      defaultPageSize: 10,\n                      showSizeChanger: true,\n                      showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} flights`,\n                      pageSizeOptions: ['10', '20', '50', 'all'],\n                      position: ['bottomRight']\n                    }}\n                    locale={{\n                      emptyText: 'No flights available'\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </Modal>\n\n      <style jsx>{`\n        .flight-search-container {\n          max-width: 1200px;\n          margin: 20px auto;\n          padding: 0 20px;\n        }\n        .search-form {\n          margin-bottom: 20px;\n        }\n        .flight-search-element {\n          margin-bottom: 16px;\n        }\n        .element-label {\n          margin-bottom: 8px;\n          font-weight: 500;\n        }\n        .element-label::after {\n          content: \" *\";\n          color: #ff4d4f;\n          display: none;\n        }\n        .element-label:has(+ [data-required=\"true\"])::after {\n          display: inline;\n        }\n        .airport-select,\n        .airline-select {\n          width: 100%;\n        }\n        .segments-element {\n          margin-bottom: 16px;\n        }\n        .search-button {\n          margin-top: 24px;\n          width: 100%;\n        }\n        .results-card {\n          margin-top: 24px;\n        }\n        :global(.ant-table) {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default FlightSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}