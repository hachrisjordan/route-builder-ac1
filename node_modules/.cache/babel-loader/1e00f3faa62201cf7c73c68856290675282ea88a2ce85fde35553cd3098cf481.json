{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightAvailabilityCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Typography, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { airports } from './data/airports';\nimport FlightDetailsModal from './FlightDetailsModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst FlightAvailabilityCalendar = ({\n  flightData,\n  currentRoute,\n  onDateRangeSelect,\n  selectedRange,\n  onSearch,\n  selectedFlights,\n  pricingData\n}) => {\n  _s();\n  // State initialization\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  // Create a local state for selections that won't be reset by props changes\n  const [localSelectionStart, setLocalSelectionStart] = useState(null);\n  const [localSelectionEnd, setLocalSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Create derived values for selection that can be used in the component\n  // This ensures local state takes precedence but will fall back to props if local state is null\n  const selectionStart = localSelectionStart;\n  const selectionEnd = localSelectionEnd;\n\n  // Track selection changes with a ref to prevent race conditions\n  const selectionRef = useRef({\n    start: null,\n    end: null\n  });\n\n  // Set up display control functions\n  const hideCalendarFn = () => {\n    // We want to reset selections but not actually hide the calendar\n    setLocalSelectionStart(null);\n    setLocalSelectionEnd(null);\n    setError('');\n\n    // Reset the ref so the calendar can be shown again if needed\n    if (calendarShownRef) {\n      calendarShownRef.current = false;\n    }\n\n    // Also reset the selection ref\n    selectionRef.current = {\n      start: null,\n      end: null\n    };\n  };\n  const clearStopoverInfo = () => {\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Use a ref to prevent infinite loops from repeated function calls\n  const calendarShownRef = useRef(false);\n\n  // Set up global functions only once without causing re-renders\n  useEffect(() => {\n    // Define global functions with loop protection\n    window.showCalendar = () => {\n      console.log(\"Window showCalendar called\");\n      if (!calendarShownRef.current) {\n        calendarShownRef.current = true;\n        setShowCalendar(true);\n        console.log(\"Calendar visibility set to true\");\n      }\n    };\n    window.hideCalendar = hideCalendarFn;\n    window.clearStopoverInfo = clearStopoverInfo;\n\n    // Set initial state only once at mount\n    setShowCalendar(true);\n    return () => {\n      delete window.showCalendar;\n      delete window.hideCalendar;\n      delete window.clearStopoverInfo;\n    };\n  }, []);\n\n  // Use an initialization effect for selected range from props\n  // This runs only on mount or when selectedRange changes externally\n  useEffect(() => {\n    // Only initialize if we have props and our local selection is empty\n    if (selectedRange && selectedRange[0] && selectedRange[1] && !selectionRef.current.start && !selectionRef.current.end) {\n      const start = dayjs.isDayjs(selectedRange[0]) ? selectedRange[0].format('YYYY-MM-DD') : selectedRange[0];\n      const end = dayjs.isDayjs(selectedRange[1]) ? selectedRange[1].format('YYYY-MM-DD') : selectedRange[1];\n      console.log(\"Initializing selection from props:\", start, end);\n\n      // Update both ref and state\n      selectionRef.current = {\n        start,\n        end\n      };\n      setLocalSelectionStart(start);\n      setLocalSelectionEnd(end);\n    }\n  }, [selectedRange]);\n\n  // Calendar navigation functions\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n\n  // Calendar utility functions\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n\n  // Date selection handling with stable state\n  const handleDateClick = dateString => {\n    console.log(\"Date clicked:\", dateString);\n    console.log(\"Current selection:\", {\n      start: selectionRef.current.start,\n      end: selectionRef.current.end\n    });\n    if (!selectionRef.current.start) {\n      console.log(\"Setting selection start\");\n      // Update both the ref and state\n      selectionRef.current.start = dateString;\n      selectionRef.current.end = null;\n      setLocalSelectionStart(dateString);\n      setLocalSelectionEnd(null);\n      setError('');\n    } else if (!selectionRef.current.end) {\n      console.log(\"Setting selection end\");\n      const start = dayjs(selectionRef.current.start);\n      const end = dayjs(dateString);\n      if (end.isBefore(start)) {\n        setError('End date cannot be before start date');\n        return;\n      }\n      if (end.diff(start, 'days') > 7) {\n        setError('Date range cannot exceed 7 days');\n        return;\n      }\n\n      // Update both the ref and state\n      selectionRef.current.end = dateString;\n      setLocalSelectionEnd(dateString);\n      if (onDateRangeSelect) {\n        onDateRangeSelect([start, end]);\n      }\n    } else {\n      console.log(\"Resetting selection\");\n      // Update both the ref and state\n      selectionRef.current.start = dateString;\n      selectionRef.current.end = null;\n      setLocalSelectionStart(dateString);\n      setLocalSelectionEnd(null);\n      setError('');\n    }\n  };\n  const isDateInRange = dateString => {\n    const ref = selectionRef.current;\n    if (!ref.start || !ref.end) {\n      // If only start date is selected, highlight just that day\n      if (ref.start && dateString === ref.start) {\n        return true;\n      }\n      return false;\n    }\n    const date = dayjs(dateString);\n    const start = dayjs(ref.start);\n    const end = dayjs(ref.end);\n\n    // Include the start and end dates themselves\n    return (date.isAfter(start.subtract(1, 'day')) || date.isSame(start, 'day')) && (date.isBefore(end.add(1, 'day')) || date.isSame(end, 'day'));\n  };\n\n  // Search function using ref for stable state\n  const handleSearch = stopoverInfo => {\n    const ref = selectionRef.current;\n    if (!ref.start || !ref.end) {\n      setError('Please select a date range');\n      return;\n    }\n    if (selectedConnection && !stopoverDays) {\n      setError('Please specify stopover days');\n      return;\n    }\n    setError('');\n\n    // Create stopover info object if a connection is selected\n    const stopoverInfoObj = selectedConnection ? {\n      airport: selectedConnection,\n      days: stopoverDays\n    } : null;\n    console.log('Search with date range:', {\n      start: ref.start,\n      end: ref.end,\n      stopover: stopoverInfoObj\n    });\n\n    // Pass the selected date range to the parent component\n    if (onDateRangeSelect) {\n      onDateRangeSelect([ref.start, ref.end]);\n    }\n\n    // Call the search function with stopover info\n    if (onSearch) {\n      onSearch(stopoverInfoObj, true, true);\n    }\n  };\n\n  // Calendar segments rendering logic\n  const sortSegments = segments => {\n    const validSegments = segments.map(segment => ({\n      ...segment,\n      ...isValidSegment(segment)\n    })).filter(segment => segment.isValid);\n    return getRequiredSegments(validSegments);\n  };\n  const isValidSegment = segment => {\n    const [from, to] = segment.route.split('-');\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return {\n          isValid: true,\n          index: i\n        };\n      }\n    }\n    return {\n      isValid: false,\n      index: -1\n    };\n  };\n  const getRequiredSegments = existingSegments => {\n    const segmentMap = new Map(existingSegments.map(segment => [segment.route, segment]));\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: {\n          Y: false,\n          J: false,\n          F: false\n        },\n        index: i\n      };\n      allSegments.push(segment);\n    }\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n  const hasAnyAvailability = segments => {\n    return segments.some(segment => segment.classes.Y || segment.classes.J || segment.classes.F);\n  };\n\n  // Get unique connection points from currentRoute with full airport names\n  const connectionOptions = currentRoute.slice(1, -1).map(iata => {\n    const airport = airports.find(a => a.IATA === iata);\n    return {\n      label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\n      value: iata\n    };\n  });\n\n  // Handle modal close\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  // Render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y':\n          return '#E8E1F2';\n        case 'J':\n          return '#F3CD87';\n        case 'F':\n          return '#D88A3F';\n        default:\n          return 'transparent';\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2px'\n      },\n      children: Object.entries(classes).map(([classCode, available]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: getBackgroundColor(classCode, available),\n          color: available ? '#684634' : '#999',\n          padding: '0px 4px',\n          borderRadius: '4px',\n          fontSize: '13px',\n          fontFamily: 'Menlo',\n          width: '20px',\n          textAlign: 'center'\n        },\n        children: available ? classCode : '-'\n      }, classCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Calendar constants\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToPrevMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 4,\n          style: {\n            margin: 0\n          },\n          children: [monthNames[currentMonth], \" \", currentYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: goToNextMonth,\n          style: {\n            backgroundColor: '#1677ff'\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          border: '1px solid #f0f0f0',\n          backgroundColor: '#f0f0f0',\n          gap: '1px',\n          fontFamily: 'Menlo, monospace'\n        },\n        children: [dayNames.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '8px',\n            textAlign: 'center',\n            fontWeight: '500'\n          },\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: firstDayOfMonth\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            minHeight: '120px',\n            padding: '8px'\n          }\n        }, `empty-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }, this)), Array.from({\n          length: daysInMonth\n        }).map((_, index) => {\n          const day = index + 1;\n          const dateString = formatDate(currentYear, currentMonth, day);\n          const flights = (flightData === null || flightData === void 0 ? void 0 : flightData[dateString]) || [];\n          const validFlights = flights.length > 0 ? sortSegments(flights) : [];\n          const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\n          const isSelected = isDateInRange(dateString);\n          const isStart = dateString === selectionStart;\n          const isEnd = dateString === selectionEnd;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: isSelected ? '#e6f4ff' : 'white',\n              minHeight: '120px',\n              padding: '8px',\n              fontFamily: 'Menlo, monospace',\n              cursor: 'pointer',\n              border: isStart || isEnd ? '2px solid #1890ff' : 'none'\n            },\n            onClick: e => {\n              // Prevent event bubbling\n              e.stopPropagation();\n              // Ensure click handler works properly\n              console.log(`Clicking on day ${day} (${dateString})`);\n              handleDateClick(dateString);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '8px',\n                fontSize: '13px'\n              },\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 19\n            }, this), showFlights ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px'\n              },\n              children: validFlights.map((segment, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '4px',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '14px',\n                    fontFamily: 'Menlo, monospace'\n                  },\n                  children: segment.route\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 27\n                }, this), renderAvailabilityBadges(segment.route, segment.classes)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                color: '#999',\n                fontSize: '12px',\n                marginTop: '32px',\n                fontFamily: 'Menlo, monospace'\n              },\n              children: \"No flights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 21\n            }, this)]\n          }, `day-${day}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#ff4d4f',\n          marginTop: '16px',\n          textAlign: 'center'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '16px',\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stopover at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: 400\n            },\n            value: selectedConnection,\n            onChange: value => {\n              setSelectedConnection(value);\n              if (!value) {\n                setStopoverDays(null);\n              }\n            },\n            options: connectionOptions,\n            allowClear: true,\n            placeholder: \"Select city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this), selectedConnection && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n              style: {\n                width: 60\n              },\n              min: 1,\n              max: 14,\n              value: stopoverDays,\n              onChange: value => setStopoverDays(value),\n              placeholder: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto',\n            display: 'flex',\n            gap: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleSearch(null),\n            disabled: !selectionStart || !selectionEnd || selectedConnection && !stopoverDays,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightDetailsModal, {\n      isModalOpen: isModalOpen,\n      onClose: handleModalClose,\n      selectedFlights: selectedFlights,\n      pricingData: pricingData,\n      currentRoute: currentRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightAvailabilityCalendar, \"IdxGNGPS29hBMqmMqLd+7KEniUM=\");\n_c = FlightAvailabilityCalendar;\nexport default FlightAvailabilityCalendar;\nvar _c;\n$RefreshReg$(_c, \"FlightAvailabilityCalendar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Typography","Select","InputNumber","dayjs","airports","FlightDetailsModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","FlightAvailabilityCalendar","flightData","currentRoute","onDateRangeSelect","selectedRange","onSearch","selectedFlights","pricingData","_s","currentMonth","setCurrentMonth","month","currentYear","setCurrentYear","year","localSelectionStart","setLocalSelectionStart","localSelectionEnd","setLocalSelectionEnd","error","setError","showCalendar","setShowCalendar","selectedConnection","setSelectedConnection","stopoverDays","setStopoverDays","isModalOpen","setIsModalOpen","selectionStart","selectionEnd","selectionRef","start","end","hideCalendarFn","calendarShownRef","current","clearStopoverInfo","window","console","log","hideCalendar","isDayjs","format","goToPrevMonth","goToNextMonth","getDaysInMonth","daysInMonth","getFirstDayOfMonth","day","formatDate","handleDateClick","dateString","isBefore","diff","isDateInRange","ref","date","isAfter","subtract","isSame","add","handleSearch","stopoverInfo","stopoverInfoObj","airport","days","stopover","sortSegments","segments","validSegments","map","segment","isValidSegment","filter","isValid","getRequiredSegments","from","to","route","split","i","length","index","existingSegments","segmentMap","Map","allSegments","get","classes","Y","J","F","push","sort","a","b","hasAnyAvailability","some","connectionOptions","slice","iata","find","IATA","label","Name","value","handleModalClose","renderAvailabilityBadges","getBackgroundColor","classCode","available","style","display","gap","children","Object","entries","backgroundColor","color","padding","borderRadius","fontSize","fontFamily","width","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","firstDayOfMonth","monthNames","dayNames","justifyContent","alignItems","marginBottom","type","onClick","level","margin","gridTemplateColumns","border","fontWeight","Array","_","minHeight","flights","validFlights","showFlights","isSelected","isStart","isEnd","cursor","e","stopPropagation","idx","marginTop","onChange","options","allowClear","placeholder","min","max","marginLeft","disabled","onClose","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Desktop/route-builder-ac/src/components/FlightSearch/FlightAvailabilityCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Typography, Select, InputNumber } from 'antd';\nimport dayjs from 'dayjs';\nimport { airports } from './data/airports';\nimport FlightDetailsModal from './FlightDetailsModal';\n\nconst { Title } = Typography;\n\nconst FlightAvailabilityCalendar = ({ flightData, currentRoute, onDateRangeSelect, selectedRange, onSearch, selectedFlights, pricingData }) => {\n  // State initialization\n  const [currentMonth, setCurrentMonth] = useState(dayjs().month());\n  const [currentYear, setCurrentYear] = useState(dayjs().year());\n  // Create a local state for selections that won't be reset by props changes\n  const [localSelectionStart, setLocalSelectionStart] = useState(null);\n  const [localSelectionEnd, setLocalSelectionEnd] = useState(null);\n  const [error, setError] = useState('');\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [stopoverDays, setStopoverDays] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n  // Create derived values for selection that can be used in the component\n  // This ensures local state takes precedence but will fall back to props if local state is null\n  const selectionStart = localSelectionStart;\n  const selectionEnd = localSelectionEnd;\n  \n  // Track selection changes with a ref to prevent race conditions\n  const selectionRef = useRef({ start: null, end: null });\n  \n  // Set up display control functions\n  const hideCalendarFn = () => {\n    // We want to reset selections but not actually hide the calendar\n    setLocalSelectionStart(null);\n    setLocalSelectionEnd(null);\n    setError('');\n    \n    // Reset the ref so the calendar can be shown again if needed\n    if (calendarShownRef) {\n      calendarShownRef.current = false;\n    }\n    \n    // Also reset the selection ref\n    selectionRef.current = { start: null, end: null };\n  };\n  \n  const clearStopoverInfo = () => {\n    setSelectedConnection(null);\n    setStopoverDays(null);\n  };\n\n  // Use a ref to prevent infinite loops from repeated function calls\n  const calendarShownRef = useRef(false);\n  \n  // Set up global functions only once without causing re-renders\n  useEffect(() => {\n    // Define global functions with loop protection\n    window.showCalendar = () => {\n      console.log(\"Window showCalendar called\");\n      if (!calendarShownRef.current) {\n        calendarShownRef.current = true;\n        setShowCalendar(true);\n        console.log(\"Calendar visibility set to true\");\n      }\n    };\n    \n    window.hideCalendar = hideCalendarFn;\n    window.clearStopoverInfo = clearStopoverInfo;\n    \n    // Set initial state only once at mount\n    setShowCalendar(true);\n    \n    return () => {\n      delete window.showCalendar;\n      delete window.hideCalendar;\n      delete window.clearStopoverInfo;\n    };\n  }, []);\n  \n  // Use an initialization effect for selected range from props\n  // This runs only on mount or when selectedRange changes externally\n  useEffect(() => {\n    // Only initialize if we have props and our local selection is empty\n    if (selectedRange && \n        selectedRange[0] && \n        selectedRange[1] && \n        !selectionRef.current.start && \n        !selectionRef.current.end) {\n      \n      const start = dayjs.isDayjs(selectedRange[0]) \n        ? selectedRange[0].format('YYYY-MM-DD') \n        : selectedRange[0];\n      \n      const end = dayjs.isDayjs(selectedRange[1]) \n        ? selectedRange[1].format('YYYY-MM-DD') \n        : selectedRange[1];\n      \n      console.log(\"Initializing selection from props:\", start, end);\n      \n      // Update both ref and state\n      selectionRef.current = { start, end };\n      setLocalSelectionStart(start);\n      setLocalSelectionEnd(end);\n    }\n  }, [selectedRange]);\n\n  // Calendar navigation functions\n  const goToPrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n  };\n\n  const goToNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n  };\n\n  // Calendar utility functions\n  const getDaysInMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}`).daysInMonth();\n  };\n\n  const getFirstDayOfMonth = (year, month) => {\n    return dayjs(`${year}-${month + 1}-01`).day();\n  };\n\n  const formatDate = (year, month, day) => {\n    return dayjs(`${year}-${month + 1}-${day}`).format('YYYY-MM-DD');\n  };\n\n  // Date selection handling with stable state\n  const handleDateClick = (dateString) => {\n    console.log(\"Date clicked:\", dateString);\n    console.log(\"Current selection:\", { \n      start: selectionRef.current.start, \n      end: selectionRef.current.end \n    });\n    \n    if (!selectionRef.current.start) {\n      console.log(\"Setting selection start\");\n      // Update both the ref and state\n      selectionRef.current.start = dateString;\n      selectionRef.current.end = null;\n      \n      setLocalSelectionStart(dateString);\n      setLocalSelectionEnd(null);\n      setError('');\n    } else if (!selectionRef.current.end) {\n      console.log(\"Setting selection end\");\n      const start = dayjs(selectionRef.current.start);\n      const end = dayjs(dateString);\n      \n      if (end.isBefore(start)) {\n        setError('End date cannot be before start date');\n        return;\n      }\n      \n      if (end.diff(start, 'days') > 7) {\n        setError('Date range cannot exceed 7 days');\n        return;\n      }\n\n      // Update both the ref and state\n      selectionRef.current.end = dateString;\n      setLocalSelectionEnd(dateString);\n      \n      if (onDateRangeSelect) {\n        onDateRangeSelect([start, end]);\n      }\n    } else {\n      console.log(\"Resetting selection\");\n      // Update both the ref and state\n      selectionRef.current.start = dateString;\n      selectionRef.current.end = null;\n      \n      setLocalSelectionStart(dateString);\n      setLocalSelectionEnd(null);\n      setError('');\n    }\n  };\n\n  const isDateInRange = (dateString) => {\n    const ref = selectionRef.current;\n    \n    if (!ref.start || !ref.end) {\n      // If only start date is selected, highlight just that day\n      if (ref.start && dateString === ref.start) {\n        return true;\n      }\n      return false;\n    }\n    \n    const date = dayjs(dateString);\n    const start = dayjs(ref.start);\n    const end = dayjs(ref.end);\n    \n    // Include the start and end dates themselves\n    return (date.isAfter(start.subtract(1, 'day')) || date.isSame(start, 'day')) && \n           (date.isBefore(end.add(1, 'day')) || date.isSame(end, 'day'));\n  };\n\n  // Search function using ref for stable state\n  const handleSearch = (stopoverInfo) => {\n    const ref = selectionRef.current;\n    \n    if (!ref.start || !ref.end) {\n      setError('Please select a date range');\n      return;\n    }\n    \n    if (selectedConnection && !stopoverDays) {\n      setError('Please specify stopover days');\n      return;\n    }\n    \n    setError('');\n    \n    // Create stopover info object if a connection is selected\n    const stopoverInfoObj = selectedConnection ? {\n      airport: selectedConnection,\n      days: stopoverDays\n    } : null;\n    \n    console.log('Search with date range:', {\n      start: ref.start,\n      end: ref.end,\n      stopover: stopoverInfoObj\n    });\n    \n    // Pass the selected date range to the parent component\n    if (onDateRangeSelect) {\n      onDateRangeSelect([ref.start, ref.end]);\n    }\n    \n    // Call the search function with stopover info\n    if (onSearch) {\n      onSearch(stopoverInfoObj, true, true);\n    }\n  };\n\n  // Calendar segments rendering logic\n  const sortSegments = (segments) => {\n    const validSegments = segments\n      .map(segment => ({\n        ...segment,\n        ...isValidSegment(segment)\n      }))\n      .filter(segment => segment.isValid);\n\n    return getRequiredSegments(validSegments);\n  };\n  \n  const isValidSegment = (segment) => {\n    const [from, to] = segment.route.split('-');\n    \n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      if (currentRoute[i] === from && currentRoute[i + 1] === to) {\n        return { isValid: true, index: i };\n      }\n    }\n    return { isValid: false, index: -1 };\n  };\n  \n  const getRequiredSegments = (existingSegments) => {\n    const segmentMap = new Map(\n      existingSegments.map(segment => [segment.route, segment])\n    );\n\n    const allSegments = [];\n    for (let i = 0; i < currentRoute.length - 1; i++) {\n      const route = `${currentRoute[i]}-${currentRoute[i + 1]}`;\n      const segment = segmentMap.get(route) || {\n        route,\n        classes: { Y: false, J: false, F: false },\n        index: i\n      };\n      allSegments.push(segment);\n    }\n\n    return allSegments.sort((a, b) => a.index - b.index);\n  };\n  \n  const hasAnyAvailability = (segments) => {\n    return segments.some(segment => \n      segment.classes.Y || segment.classes.J || segment.classes.F\n    );\n  };\n\n  // Get unique connection points from currentRoute with full airport names\n  const connectionOptions = currentRoute\n    .slice(1, -1)\n    .map(iata => {\n      const airport = airports.find(a => a.IATA === iata);\n      return {\n        label: airport ? `${airport.IATA} - ${airport.Name}` : iata,\n        value: iata\n      };\n    });\n\n  // Handle modal close\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  // Render availability badges\n  const renderAvailabilityBadges = (route, classes) => {\n    const getBackgroundColor = (classCode, available) => {\n      if (!available) return 'transparent';\n      switch (classCode) {\n        case 'Y': return '#E8E1F2';\n        case 'J': return '#F3CD87';\n        case 'F': return '#D88A3F';\n        default: return 'transparent';\n      }\n    };\n\n    return (\n      <div style={{ display: 'flex', gap: '2px' }}>\n        {Object.entries(classes).map(([classCode, available]) => (\n          <div\n            key={classCode}\n            style={{\n              backgroundColor: getBackgroundColor(classCode, available),\n              color: available ? '#684634' : '#999',\n              padding: '0px 4px',\n              borderRadius: '4px',\n              fontSize: '13px',\n              fontFamily: 'Menlo',\n              width: '20px',\n              textAlign: 'center'\n            }}\n          >\n            {available ? classCode : '-'}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // Calendar constants\n  const daysInMonth = getDaysInMonth(currentYear, currentMonth);\n  const firstDayOfMonth = getFirstDayOfMonth(currentYear, currentMonth);\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  return (\n    <div>\n      {/* Always show the calendar */}\n      <div style={{ padding: '20px' }}>\n          {/* Calendar header */}\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center', \n            marginBottom: '20px' \n          }}>\n            <Button \n              type=\"primary\"\n              onClick={goToPrevMonth}\n              style={{ backgroundColor: '#1677ff' }}\n            >\n              &larr;\n            </Button>\n            <Title level={4} style={{ margin: 0 }}>{monthNames[currentMonth]} {currentYear}</Title>\n            <Button \n              type=\"primary\"\n              onClick={goToNextMonth}\n              style={{ backgroundColor: '#1677ff' }}\n            >\n              &rarr;\n            </Button>\n          </div>\n\n          {/* Calendar grid */}\n          <div style={{ \n            display: 'grid', \n            gridTemplateColumns: 'repeat(7, 1fr)',\n            border: '1px solid #f0f0f0',\n            backgroundColor: '#f0f0f0',\n            gap: '1px',\n            fontFamily: 'Menlo, monospace'\n          }}>\n            {/* Day headers */}\n            {dayNames.map(day => (\n              <div key={day} style={{ \n                backgroundColor: '#f5f5f5',\n                padding: '8px',\n                textAlign: 'center',\n                fontWeight: '500'\n              }}>\n                {day}\n              </div>\n            ))}\n\n            {/* Empty cells for days of week before the first day of month */}\n            {Array.from({ length: firstDayOfMonth }).map((_, index) => (\n              <div key={`empty-${index}`} style={{ \n                backgroundColor: 'white',\n                minHeight: '120px',\n                padding: '8px'\n              }} />\n            ))}\n\n            {/* Calendar day cells */}\n            {Array.from({ length: daysInMonth }).map((_, index) => {\n              const day = index + 1;\n              const dateString = formatDate(currentYear, currentMonth, day);\n              const flights = flightData?.[dateString] || [];\n              const validFlights = flights.length > 0 ? sortSegments(flights) : [];\n              const showFlights = validFlights.length > 0 && hasAnyAvailability(validFlights);\n              const isSelected = isDateInRange(dateString);\n              const isStart = dateString === selectionStart;\n              const isEnd = dateString === selectionEnd;\n\n              return (\n                <div\n                  key={`day-${day}`}\n                  style={{\n                    backgroundColor: isSelected ? '#e6f4ff' : 'white',\n                    minHeight: '120px',\n                    padding: '8px',\n                    fontFamily: 'Menlo, monospace',\n                    cursor: 'pointer',\n                    border: isStart || isEnd ? '2px solid #1890ff' : 'none'\n                  }}\n                  onClick={(e) => {\n                    // Prevent event bubbling\n                    e.stopPropagation();\n                    // Ensure click handler works properly\n                    console.log(`Clicking on day ${day} (${dateString})`);\n                    handleDateClick(dateString);\n                  }}\n                >\n                  <div style={{ \n                    fontWeight: 'bold', \n                    marginBottom: '8px',\n                    fontSize: '13px'\n                  }}>\n                    {day}\n                  </div>\n                  {showFlights ? (\n                    <div style={{ fontSize: '12px' }}>\n                      {validFlights.map((segment, idx) => (\n                        <div \n                          key={idx} \n                          style={{ \n                            marginBottom: '4px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center'\n                          }}\n                        >\n                          <div style={{ \n                            fontSize: '14px',\n                            fontFamily: 'Menlo, monospace'\n                          }}>\n                            {segment.route}\n                          </div>\n                          {renderAvailabilityBadges(segment.route, segment.classes)}\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div style={{ \n                      textAlign: 'center', \n                      color: '#999', \n                      fontSize: '12px',\n                      marginTop: '32px',\n                      fontFamily: 'Menlo, monospace'\n                    }}>\n                      No flights\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Error message */}\n          {error && (\n            <div style={{ \n              color: '#ff4d4f', \n              marginTop: '16px',\n              textAlign: 'center' \n            }}>\n              {error}\n            </div>\n          )}\n\n          {/* Controls */}\n          <div style={{ \n            marginTop: '16px',\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            gap: '8px'\n          }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n              <span>Stopover at</span>\n              <Select\n                style={{ width: 400 }}\n                value={selectedConnection}\n                onChange={(value) => {\n                  setSelectedConnection(value);\n                  if (!value) {\n                    setStopoverDays(null);\n                  }\n                }}\n                options={connectionOptions}\n                allowClear\n                placeholder=\"Select city\"\n              />\n              {selectedConnection && (\n                <>\n                  <span>for</span>\n                  <InputNumber\n                    style={{ width: 60 }}\n                    min={1}\n                    max={14}\n                    value={stopoverDays}\n                    onChange={(value) => setStopoverDays(value)}\n                    placeholder=\"Days\"\n                  />\n                  <span>days</span>\n                </>\n              )}\n            </div>\n            <div style={{ marginLeft: 'auto', display: 'flex', gap: '8px' }}>\n              <Button\n                type=\"primary\"\n                onClick={() => handleSearch(null)}\n                disabled={!selectionStart || !selectionEnd || (selectedConnection && !stopoverDays)}\n              >\n                Search\n              </Button>\n            </div>\n          </div>\n        </div>\n\n      <FlightDetailsModal\n        isModalOpen={isModalOpen}\n        onClose={handleModalClose}\n        selectedFlights={selectedFlights}\n        pricingData={pricingData}\n        currentRoute={currentRoute}\n      />\n    </div>\n  );\n};\n\nexport default FlightAvailabilityCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}